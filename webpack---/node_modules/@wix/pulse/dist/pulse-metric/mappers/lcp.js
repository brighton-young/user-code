import { getLcpLoafs } from "../../utils/loaf-utils";
const getServerTimings = (lcpResource) =>
  lcpResource.serverTiming.reduce((all, t) => `${all};${t.description}`, "");
const truncate = (n) => (n ? Math.trunc(n) : undefined);
export const toLcpMetric = (metric, getHtmlElementMetadata) => {
  const {
    value,
    attribution: {
      lcpResourceEntry,
      lcpEntry,
      url: lcpUrl,
      resourceLoadDelay,
      resourceLoadDuration,
      elementRenderDelay,
    },
  } = metric;
  const htmlElementMetadata = getHtmlElementMetadata(lcpEntry?.element);
  // https://github.com/wix-private/wix-perf-measure/blob/master/packages/wix-perf-measure/src/entries/lcp.js#L92C3-L94C61
  // In case it's an image, we want to extract the content type from the URL
  const m = /\.(jpe?g|png|gif|svg|webp)/i.exec(lcpUrl || "");
  const lcpContentType =
    m?.[1]?.toLowerCase().replace("jpeg", "jpg") || "other";
  // https://github.com/wix-private/wix-perf-measure/blob/master/packages/wix-perf-measure/src/entries/lcp.js#L96
  return {
    lcp: truncate(value),
    lcpSize: truncate(lcpEntry?.size),
    lcpTag: lcpEntry?.element?.tagName,
    lcpRating: metric.rating,
    lcpContentType,
    lcpResourceLoadDelay: truncate(resourceLoadDelay),
    lcpResourceLoadDuration: truncate(resourceLoadDuration),
    lcpElementRenderDelay: truncate(elementRenderDelay),
    lcpUrl,
    lcpInitiatorType: lcpResourceEntry?.initiatorType,
    lcpComponentType: htmlElementMetadata.compType,
    lcpWidgetId: htmlElementMetadata.widgetId,
    lcpApplicationId: htmlElementMetadata.applicationId,
    lcpResourceRequestStart: truncate(lcpResourceEntry?.requestStart),
    lcpResourceResponseStart: truncate(lcpResourceEntry?.responseStart),
    lcpResourceTransferSize: truncate(lcpResourceEntry?.transferSize),
    lcpResourceServerTiming: lcpResourceEntry
      ? getServerTimings(lcpResourceEntry)
      : undefined,
    // @ts-expect-error - It's experimental so the type does not exist yet in TS https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming/deliveryType
    lcpResourceDeliveryType: lcpResourceEntry?.deliveryType,
    lcpLoafs: JSON.stringify(getLcpLoafs(metric)),
    metadata: {
      lcpResourceNetworkProtocol: lcpResourceEntry?.nextHopProtocol,
    },
  };
};
//# sourceMappingURL=lcp.js.map
