"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.eComSFSMCommonConfig = exports.eComAppConfig = void 0;
var angular = require("angular");
var HostingService_1 = require("./services/HostingService");
function eComAppConfig(
  appName,
  appModel,
  staticsUrl,
  biAppName,
  biDefaultFields,
  shouldUseNodeGraphQLEndpoint
) {
  angular
    .module("eComSFSMCommon")
    /* @ngInject */
    .config(function (experimentManagerProvider) {
      experimentManagerProvider.setExperiments(appModel.experiments);
    })
    .config(function (wixAngularTopologyProvider) {
      var localeParam = HostingService_1.HostingService.extractParam([
        "dateNumberFormat",
      ]);
      var langParam = HostingService_1.HostingService.extractParam(["lang"]);
      var isPrimaryLangParam = HostingService_1.HostingService.extractParam([
        "isPrimaryLanguage",
      ]);
      wixAngularTopologyProvider.setLinguistInstance(
        HostingService_1.HostingService.extractInstance()
      );
      wixAngularTopologyProvider.setLanguage(langParam);
      wixAngularTopologyProvider.setLocale(localeParam);
      wixAngularTopologyProvider.setIsPrimaryLanguage(isPrimaryLangParam);
      wixAngularTopologyProvider.setCurrentCurrency(
        HostingService_1.HostingService.extractParam(["currentCurrency"])
      );
    })
    .config(function (permissionsManagerProvider) {
      if (biDefaultFields) {
        permissionsManagerProvider.setAuthorizationInfo({
          ownerId: biDefaultFields.ownerId,
          roles: biDefaultFields.roles.split(","),
        });
      }
    })
    .config(translationRUKDAFix)
    .constant("topology", appModel.topology)
    .constant("clientConfig", appModel.clientConfig)
    .constant("pageMap", appModel.pageMap)
    .constant("staticsUrl", staticsUrl)
    .constant("appSettings", appModel.appSettings)
    .constant("shouldUseNodeGraphQLEndpoint", !!shouldUseNodeGraphQLEndpoint);
  var app = angular.module(appName + "Data", []);
  if (typeof appModel.appData !== "undefined") {
    app.constant(appName + "Data", appModel.appData);
  }
  /* @ngInject */
  angular
    .module("eComSFSMCommon")
    .config(function (
      wixBIAdapterProvider,
      wixAngularProvider,
      sdkAdapterProvider
    ) {
      wixAngularProvider.setStaticsUrl(staticsUrl);
      var frogUrl = "http://frog.wixpress.com/"; // todo(boris): why it would be undefined??
      if (typeof appModel.topology.frogUrl !== "undefined") {
        frogUrl = appModel.topology.frogUrl;
      }
      var adapter = "ec";
      if (appName === "storeManagerApp") {
        adapter = "ec-sm";
      }
      // config the BI
      var wixBIAdapterConfig = {
        biLoggerConfig: {
          biUrl: frogUrl,
          defaultEventArgs: {},
          defaultErrorArgs: {},
          adapter: adapter,
        },
        globalBIConfig: {
          defaultEventArgs: {
            storeId: appModel.clientConfig.storeId,
            isMerchant: appModel.clientConfig.isMerchant,
            appName: biAppName || appName,
            bi_token: sdkAdapterProvider.getBiToken(),
          },
        },
      };
      if (appModel.clientConfig.uuid) {
        wixBIAdapterConfig.globalBIConfig.defaultEventArgs.uuid =
          appModel.clientConfig.uuid;
      }
      if (appModel.clientConfig.visitor_id) {
        wixBIAdapterConfig.globalBIConfig.defaultEventArgs.visitor_id =
          appModel.clientConfig.visitor_id;
      }
      // Taking the BIConfig from the constant into the provider
      wixBIAdapterProvider.setConfig(wixBIAdapterConfig);
    });
}
exports.eComAppConfig = eComAppConfig;
window.eCom = window.eCom || {};
window.eComAppConfig = window.eCom.eComAppConfig = eComAppConfig;
/* @ngInject */
function translationRUKDAFix($translateProvider) {
  // Related to issue #EE-4132
  var preferredLanguage = $translateProvider.preferredLanguage();
  var translations = $translateProvider.translations()[preferredLanguage];
  if (translations) {
    var correctTranslationValue =
      translations["countries.RUS.RU-KDA2"] ||
      translations["countries.RUS.RU-KDA"];
    $translateProvider.translations(preferredLanguage, {
      "countries.RUS.RU-KDA": correctTranslationValue,
    });
  }
}
/* @ngInject */
function eComSFSMCommonConfig(
  $translateProvider,
  $compileProvider,
  $logProvider,
  clientConfig,
  HttpFacadeProvider,
  shouldUseNodeGraphQLEndpoint
) {
  // Production configuration
  if (clientConfig.debug === false) {
    $compileProvider.debugInfoEnabled(false);
    $logProvider.debugEnabled(false);
  }
  $translateProvider.useInterpolation("$translateEscapedInterpolation");
  var endpoint = shouldUseNodeGraphQLEndpoint
    ? "/_api/wixstores-graphql-server/graphql"
    : "/_api/wix-ecommerce-graphql-web/api";
  HttpFacadeProvider.setGraphQlEndpoint(endpoint);
}
exports.eComSFSMCommonConfig = eComSFSMCommonConfig;
