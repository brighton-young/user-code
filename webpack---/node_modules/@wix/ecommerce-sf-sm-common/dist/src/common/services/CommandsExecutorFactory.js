"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommandsExecutorFactoryProvider = exports.CommandsExecutor = void 0;
var CommandsExecutor = /** @class */ (function () {
  function CommandsExecutor(bulkExecutionUrl, $q, HttpFacade) {
    this.bulkExecutionUrl = bulkExecutionUrl;
    this.$q = $q;
    this.HttpFacade = HttpFacade;
    this.commands = [];
  }
  CommandsExecutor.prototype.executeSingleCommand = function (
    urlTemplate,
    name,
    data,
    errorInput
  ) {
    errorInput = errorInput || {
      action: name,
      messageKey: "appMessage.GENERIC_ERROR_MESSAGE",
      isRefreshable: true,
      isRecoverable: false,
    };
    return this.HttpFacade.doHTTPPost(
      errorInput,
      urlTemplate,
      { commandName: name },
      data
    );
  };
  CommandsExecutor.prototype.addCommand = function (commandName, commandData) {
    if (commandData === void 0) {
      commandData = {};
    }
    this.commands.push({
      name: commandName,
      data: commandData,
    });
  };
  CommandsExecutor.prototype.executeBulk = function () {
    var res;
    if (!this.commands || this.commands.length === 0) {
      res = this.$q.when({ success: true, errors: [] });
    } else {
      var errorInput = {
        action: "executeBulk",
        messageKey: "appMessage.GENERIC_ERROR_MESSAGE",
        isRefreshable: true,
        isRecoverable: false,
      };
      res = this.HttpFacade.doHTTPPost(
        errorInput,
        this.bulkExecutionUrl,
        null,
        { commands: this.commands }
      );
    }
    return res;
  };
  return CommandsExecutor;
})();
exports.CommandsExecutor = CommandsExecutor;
var CommandsExecutorFactoryProvider = /** @class */ (function () {
  function CommandsExecutorFactoryProvider() {}
  CommandsExecutorFactoryProvider.prototype.setBulkExecutionUrl = function (
    val
  ) {
    this.bulkExecutionUrl = val;
  };
  /* @ngInject */
  CommandsExecutorFactoryProvider.prototype.$get = function (HttpFacade, $q) {
    var _this = this;
    return function () {
      return new CommandsExecutor(_this.bulkExecutionUrl, $q, HttpFacade);
    };
  };
  return CommandsExecutorFactoryProvider;
})();
exports.CommandsExecutorFactoryProvider = CommandsExecutorFactoryProvider;
