"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transactionedAction = void 0;
function transactionedAction() {
  var LOADER_CLASS = "loader";
  function performAction(element, scope, action) {
    if (!isActionInProgress(element)) {
      var promise = scope.$eval(action);
      if (promise && promise.finally) {
        actionInProgress(element, true);
        promise.finally(function () {
          actionInProgress(element, false);
        });
      }
    }
    scope.$apply();
  }
  function isActionInProgress(element) {
    return element.attr("transactionedInProgress") === "true";
  }
  function actionInProgress(element, value) {
    var elementToRestrict = element;
    if (element.prop("tagName").toLowerCase() === "form") {
      elementToRestrict = element.find("[type=submit]");
    }
    if (value === true) {
      element.attr("transactionedInProgress", "true");
      elementToRestrict.attr("disabled", "disabled");
      elementToRestrict.addClass(LOADER_CLASS);
    } else if (value === false) {
      element.removeAttr("transactionedInProgress");
      elementToRestrict.removeAttr("disabled");
      elementToRestrict.removeClass(LOADER_CLASS);
    }
  }
  function handleClick(scope, element, action) {
    var touchStart = false;
    var touchMove = false;
    element.bind("click", function (ev) {
      ev.preventDefault();
      touchStart = false;
      touchMove = false;
      performAction(element, scope, action);
    });
    element.bind("touchmove", function () {
      touchMove = true;
    });
    element.bind("touchstart", function () {
      touchMove = false;
      touchStart = true;
    });
    element.bind("touchend", function (ev) {
      if (touchStart && !touchMove) {
        ev.preventDefault();
        performAction(element, scope, action);
      }
      touchStart = false;
      touchMove = false;
    });
  }
  function handleForm(scope, element, action) {
    element.bind("submit", function () {
      performAction(element, scope, action);
    });
  }
  return {
    restrict: "A",
    link: function (scope, element, attrs) {
      var tagName = element.prop("tagName").toLowerCase();
      var action = attrs.transactionedAction;
      if (tagName === "form") {
        handleForm(scope, element, action);
      } else {
        handleClick(scope, element, action);
      }
    },
  };
}
exports.transactionedAction = transactionedAction;
