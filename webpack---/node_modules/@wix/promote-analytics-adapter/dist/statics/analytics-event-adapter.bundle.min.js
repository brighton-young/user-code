!(function (e, t) {
  "object" == typeof exports && "object" == typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
    ? define("promote-analytics-adapter", [], t)
    : "object" == typeof exports
    ? (exports["promote-analytics-adapter"] = t())
    : (e["promote-analytics-adapter"] = t());
})("undefined" != typeof self ? self : this, () =>
  (() => {
    var e = {
        213: (e, t, n) => {
          var r = n(174);
          (e.exports = function (e, t, n) {
            return (
              (t = r(t)) in e
                ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (e[t] = n),
              e
            );
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        662: (e, t, n) => {
          var r = n(114).default;
          (e.exports = function (e, t) {
            if ("object" != r(e) || !e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var o = n.call(e, t || "default");
              if ("object" != r(o)) return o;
              throw new TypeError(
                "@@toPrimitive must return a primitive value."
              );
            }
            return ("string" === t ? String : Number)(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        174: (e, t, n) => {
          var r = n(114).default,
            o = n(662);
          (e.exports = function (e) {
            var t = o(e, "string");
            return "symbol" == r(t) ? t : String(t);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        114: (e) => {
          function t(n) {
            return (
              (e.exports = t =
                "function" == typeof Symbol &&
                "symbol" == typeof Symbol.iterator
                  ? function (e) {
                      return typeof e;
                    }
                  : function (e) {
                      return e &&
                        "function" == typeof Symbol &&
                        e.constructor === Symbol &&
                        e !== Symbol.prototype
                        ? "symbol"
                        : typeof e;
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n)
            );
          }
          (e.exports = t),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
      },
      t = {};
    function n(r) {
      var o = t[r];
      if (void 0 !== o) return o.exports;
      var i = (t[r] = { exports: {} });
      return e[r](i, i.exports, n), i.exports;
    }
    (n.n = (e) => {
      var t = e && e.__esModule ? () => e.default : () => e;
      return n.d(t, { a: t }), t;
    }),
      (n.d = (e, t) => {
        for (var r in t)
          n.o(t, r) &&
            !n.o(e, r) &&
            Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
      }),
      (n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
      (n.r = (e) => {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 });
      });
    var r = {};
    return (
      (() => {
        "use strict";
        n.r(r),
          n.d(r, { api: () => e, channelNames: () => de, listeners: () => me });
        var e = {};
        n.r(e),
          n.d(e, {
            addListener: () => _e,
            init: () => ge,
            trackEvent: () => fe,
            trackEventToChannelsOnly: () => he,
            trackEventToEssentialsOnly: () => Ie,
            trackEventToListenersOnly: () => Ce,
          });
        var t,
          o = n(213),
          i = n.n(o),
          a = new Uint8Array(16);
        function c() {
          if (
            !t &&
            !(t =
              ("undefined" != typeof crypto &&
                crypto.getRandomValues &&
                crypto.getRandomValues.bind(crypto)) ||
              ("undefined" != typeof msCrypto &&
                "function" == typeof msCrypto.getRandomValues &&
                msCrypto.getRandomValues.bind(msCrypto)))
          )
            throw new Error(
              "crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported"
            );
          return t(a);
        }
        const s =
          /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
        const u = function (e) {
          return "string" == typeof e && s.test(e);
        };
        for (var d = [], p = 0; p < 256; ++p)
          d.push((p + 256).toString(16).substr(1));
        const l = function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            n = (
              d[e[t + 0]] +
              d[e[t + 1]] +
              d[e[t + 2]] +
              d[e[t + 3]] +
              "-" +
              d[e[t + 4]] +
              d[e[t + 5]] +
              "-" +
              d[e[t + 6]] +
              d[e[t + 7]] +
              "-" +
              d[e[t + 8]] +
              d[e[t + 9]] +
              "-" +
              d[e[t + 10]] +
              d[e[t + 11]] +
              d[e[t + 12]] +
              d[e[t + 13]] +
              d[e[t + 14]] +
              d[e[t + 15]]
            ).toLowerCase();
          if (!u(n)) throw TypeError("Stringified UUID is invalid");
          return n;
        };
        const v = function (e, t, n) {
            var r = (e = e || {}).random || (e.rng || c)();
            if (((r[6] = (15 & r[6]) | 64), (r[8] = (63 & r[8]) | 128), t)) {
              n = n || 0;
              for (var o = 0; o < 16; ++o) t[n + o] = r[o];
              return t;
            }
            return l(r);
          },
          m = (e, t, n, r) => {
            const o = { ...n, _internalEventId: v() };
            e.forEach((e) => {
              (function (e, t, n, r) {
                void 0 === n && (n = {});
                const { appDefId: o, ...i } = n;
                return t.events
                  ? (((r = r || {}).config = t.config),
                    (r.context = r.context || {}),
                    "boolean" == typeof r.context &&
                      (r.context = { isFirstVisit: r.context }),
                    (r.context.appDefId = r.context.appDefId || o),
                    t.events[e] ? t.events[e](i, r) : [])
                  : r && r.preventDefaultChannels
                  ? []
                  : [[e, i, ...(r ? [r] : [])]];
              })(t, e, o, r).forEach((t) => e.report(...t));
            });
          },
          y = "Stores",
          g = (e, t) => {
            const n = Object.keys(e);
            return 0 === n.length
              ? e
              : n.reduce((n, r) => {
                  const o = t[r];
                  return o && (e[r] || 0 === e[r]) && (n[o] = e[r]), n;
                }, {});
          };
        function _(e) {
          return e.origin === y && !e.id;
        }
        const f = {
            id: "id",
            price: "value",
            value: "value",
            revenue: "value",
            name: "content_name",
            category: "content_category",
            currency: "currency",
            content_ids: "content_ids",
            contents: "contents",
            type: "content_type",
            num_items: "num_items",
            quantity: "quantity",
            label: "content_name",
          },
          h = (e) => {
            let { type: t = "product", ...n } = e;
            const r = { ...n, type: t };
            return (
              r.contents &&
                ((r.contents = r.contents.map((e) => ({
                  ...e,
                  quantity: e.quantity || 1,
                  item_price: e.item_price || e.price || 0,
                }))),
                r.price ||
                  r.value ||
                  r.revenue ||
                  (r.price = ((e) =>
                    (Number.parseFloat(e.tax) || 0) +
                    (Number.parseFloat(e.shipping) || 0) +
                    e.contents.reduce(
                      (e, t) =>
                        e + Number.parseFloat(t.item_price) * t.quantity,
                      0
                    ))(r).toString()),
                r.currency ||
                  (r.currency = ((e) => e.contents && e.contents[0].currency)(
                    r
                  ))),
              g(r, f)
            );
          },
          C = (e) => {
            if (e.contents && !e.num_items) {
              const t = { ...e };
              return (
                (t.num_items = t.contents.reduce(
                  (e, t) => e + (t.quantity || 1),
                  0
                )),
                t
              );
            }
            return e;
          },
          I = {
            ViewContent: (e) => {
              let { id: t, ...n } = e;
              return [
                [
                  "track",
                  "ViewContent",
                  { ...h(n), content_ids: [t], content_type: "product" },
                  { eventID: n._internalEventId },
                ],
              ];
            },
            AddToCart: (e) => {
              let { id: t, ...n } = e;
              return [
                [
                  "track",
                  "AddToCart",
                  { ...h(n), content_ids: [t], content_type: "product" },
                  { eventID: n._internalEventId },
                ],
              ];
            },
            InitiateCheckout: (e) => [
              [
                "track",
                "InitiateCheckout",
                {
                  ...h(C(e)),
                  ...(e.contents && {
                    content_ids: e.contents.map((e) => e.id),
                    content_type: "product",
                  }),
                },
                { eventID: e._internalEventId },
              ],
            ],
            AddPaymentInfo: (e) => [
              [
                "track",
                "AddPaymentInfo",
                {
                  ...h(C(e)),
                  ...(e.contents && {
                    content_ids: e.contents.map((e) => e.id),
                    content_type: "product",
                  }),
                },
                { eventID: e._internalEventId },
              ],
            ],
            Purchase: (e, t) => {
              if (t.isFBServerEventsEnabled) {
                const t = {
                    ...h(C(e)),
                    ...(e.contents && {
                      content_ids: e.contents.map((e) => e.id),
                      content_type: "product",
                    }),
                  },
                  n = ((e) =>
                    e.origin === y ? e.orderId : e._internalEventId)(e),
                  r = ["track", "Purchase", { ...t }, { eventID: n }],
                  o = [
                    "trackCustom",
                    "WixOrderPlaced",
                    { ...t },
                    { eventID: n },
                  ];
                return [...(_(e) ? [] : [r]), o];
              }
              return [
                [
                  "track",
                  "Purchase",
                  {
                    ...h(C(e)),
                    ...(e.contents && {
                      content_ids: e.contents.map((e) => e.id),
                      content_type: "product",
                    }),
                  },
                  { eventID: e._internalEventId },
                ],
              ];
            },
            Lead: (e) => [
              ["track", "Lead", g(e, f), { eventID: e._internalEventId }],
            ],
            Schedule: (e) => {
              let { _internalEventId: t } = e;
              return [["track", "Schedule", {}, { eventID: t }]];
            },
            CompleteRegistration: (e) => {
              let { _internalEventId: t } = e;
              return [["track", "CompleteRegistration", {}, { eventID: t }]];
            },
            CustomEvent: (e) => {
              const { event: t, eventAction: n = "customEvent", ...r } = e;
              return [
                ["trackCustom", t || n, r, { eventID: e._internalEventId }],
              ];
            },
          },
          b = {
            price: "price",
            sku: "id",
            id: "id",
            currency: "currency",
            name: "name",
            category: "category",
            brand: "brand",
            variant: "variant",
            list: "list",
            quantity: "quantity",
            step: "step",
            option: "option",
            position: "position",
            coupon: "coupon",
            affiliation: "affiliation",
            revenue: "revenue",
            tax: "tax",
            shipping: "shipping",
          };
        (() => {
          for (let e = 1; e <= 200; e++)
            (b["dimension" + e] = "dimension" + e),
              (b["metric" + e] = "metric" + e);
        })();
        const A = (e) =>
            e ? `Enhanced Ecommerce - ${e}` : "Enhanced Ecommerce",
          E = {
            PageView: function (e, t) {
              let { pagePath: n, pageTitle: r } = void 0 === e ? {} : e,
                { reportToManagedChannels: o } = void 0 === t ? {} : t;
              return o
                ? [
                    [
                      "send",
                      "pageview",
                      { page: n, ...(r ? { title: r } : {}) },
                    ],
                  ]
                : [];
            },
            AddProductImpression: (e) => {
              const t = (e.contents || []).map((e) => [
                "ec:addImpression",
                g(e, b),
              ]);
              return [["require", "ec"]]
                .concat(t)
                .concat([
                  [
                    "send",
                    "event",
                    A(e.origin),
                    "Product Impressions",
                    { nonInteraction: !0 },
                  ],
                ]);
            },
            ClickProduct: (e) => {
              const t = e.name ? e.name : "(not set)",
                n = e.list ? e.list : "(not set)";
              return [["require", "ec"]]
                .concat([["ec:addProduct", g(e, b)]])
                .concat([["ec:setAction", "click", { list: n }]])
                .concat([["send", "event", A(e.origin), "Product Click", t]]);
            },
            ViewContent: (e) => {
              const t = e.name ? e.name : "(not set)";
              return [["require", "ec"]]
                .concat([["ec:addImpression", g(e, b)]])
                .concat([["ec:setAction", "detail"]])
                .concat([
                  [
                    "send",
                    "event",
                    A(e.origin),
                    "View Content",
                    t,
                    { nonInteraction: !0 },
                  ],
                ]);
            },
            AddToCart: (e) => {
              const t = e.name ? e.name : "(not set)";
              return [["require", "ec"]]
                .concat([["ec:addProduct", g(e, b)]])
                .concat([["ec:setAction", "add"]])
                .concat([["send", "event", A(e.origin), "Add to Cart", t]]);
            },
            RemoveFromCart: (e) => {
              const t = e.name ? e.name : "(not set)";
              return [["require", "ec"]]
                .concat([["ec:addProduct", g(e, b)]])
                .concat([["ec:setAction", "remove"]])
                .concat([
                  ["send", "event", A(e.origin), "Remove from Cart", t],
                ]);
            },
            InitiateCheckout: (e) => {
              const t = (e.contents || []).map((e) => [
                  "ec:addProduct",
                  g(e, b),
                ]),
                n = g({ option: e.option }, b);
              return [["require", "ec"]]
                .concat(t)
                .concat([["ec:setAction", "checkout", n]])
                .concat([["send", "event", A(e.origin), "Initiate Checkout"]]);
            },
            StartPayment: (e) => {
              const t = g({ step: 1, option: e.option }, b);
              return [["require", "ec"]]
                .concat([["ec:setAction", "checkout_option", t]])
                .concat([["send", "event", A(e.origin), "Start Payment"]]);
            },
            AddPaymentInfo: (e) => {
              const t = g({ step: 2, option: e.option }, b);
              return [["require", "ec"]]
                .concat([["ec:setAction", "checkout_option", t]])
                .concat([["send", "event", A(e.origin), "Add Payment Info"]]);
            },
            CheckoutStep: (e) => {
              const t = g({ step: e.step || 3, option: e.option }, b);
              return [["require", "ec"]]
                .concat([["ec:setAction", "checkout_option", t]])
                .concat([
                  ["send", "event", A(e.origin), `Checkout Step ${t.step}`],
                ]);
            },
            Purchase: (e) => {
              const t = (e.contents || []).map((e) => [
                  "ec:addProduct",
                  g(e, b),
                ]),
                n = {};
              return (
                [
                  "id",
                  "affiliation",
                  "revenue",
                  "tax",
                  "shipping",
                  "coupon",
                ].forEach((t) => e[t] && (n[t] = e[t])),
                [["require", "ec"]]
                  .concat(t)
                  .concat([["ec:setAction", "purchase", g(n, b)]])
                  .concat([["send", "event", A(e.origin), "Purchase"]])
              );
            },
            Lead: (e) => {
              let {
                category: t = "Leads",
                action: n = "Submitted",
                label: r = "New Lead",
              } = e;
              return [["send", "event", t, n, r]];
            },
            CustomEvent: (e) => {
              const { event: t = "customEvent", eventAction: n, ...r } = e;
              return "pageview" === t.toLowerCase()
                ? [["send", "pageview", g(r, b)]]
                : [["send", "event", { eventAction: n || t, ...r }]];
            },
          },
          k = {
            type: "type",
            price: "price",
            sku: "sku",
            id: "id",
            currency: "currency",
            name: "name",
            category: "category",
            brand: "brand",
            variant: "variant",
            list: "list",
            quantity: "quantity",
            step: "step",
            option: "option",
            position: "position",
            coupon: "coupon",
            affiliation: "affiliation",
            revenue: "revenue",
            tax: "tax",
            shipping: "shipping",
            buyerMail: "buyer_email",
            buyerId: "buyer_id",
          },
          P = (e) => (e ? `Enhanced Ecommerce - ${e}` : "Enhanced Ecommerce"),
          T = (e) => e || "(not set)",
          O = {
            PageView: function (e, t) {
              let { pagePath: n, pageTitle: r } = void 0 === e ? {} : e,
                { reportToManagedChannels: o } = void 0 === t ? {} : t;
              return o ? [[[{ event: "Pageview", url: n, title: r }]]] : [];
            },
            AddProductImpression: (e) => {
              let { contents: t, origin: n } = e;
              const r = t;
              return [
                [
                  [
                    {
                      event: "productImpression",
                      ...(n && { origin: n }),
                      event_category: P(n),
                      ecommerce: { impressions: r },
                    },
                  ],
                ],
              ];
            },
            ClickProduct: (e) => {
              let { list: t = "(not set)", origin: n, ...r } = e;
              return [
                [
                  [
                    {
                      event: "productClick",
                      ...(n && { origin: n }),
                      event_label: T(r.name),
                      event_category: P(n),
                      ecommerce: {
                        click: {
                          actionField: { list: t },
                          products: [g(r, k)],
                        },
                      },
                    },
                  ],
                ],
              ];
            },
            ViewContent: (e) => {
              let { list: t = "(not set)", origin: n, ...r } = e;
              return [
                [
                  [
                    {
                      event: "viewContent",
                      ...(n && { origin: n }),
                      event_label: T(r.name),
                      event_category: P(n),
                      ecommerce: {
                        detail: {
                          actionField: { list: t },
                          products: [g(r, k)],
                        },
                      },
                    },
                  ],
                ],
              ];
            },
            AddToCart: (e) => {
              let { origin: t, ...n } = e;
              return [
                [
                  [
                    {
                      event: "addToCart",
                      ...(t && { origin: t }),
                      event_label: T(n.name),
                      event_category: P(t),
                      ecommerce: { add: { products: [g(n, k)] } },
                    },
                  ],
                ],
              ];
            },
            RemoveFromCart: (e) => {
              let { origin: t, ...n } = e;
              return [
                [
                  [
                    {
                      event: "removeFromCart",
                      ...(t && { origin: t }),
                      event_label: T(n.name),
                      event_category: P(t),
                      ecommerce: { remove: { products: [g(n, k)] } },
                    },
                  ],
                ],
              ];
            },
            InitiateCheckout: (e) => {
              let { contents: t = [], origin: n, option: r } = e;
              const o = [...t],
                i = Object.assign({}, r && { option: r });
              return [
                [
                  [
                    {
                      event: "checkout",
                      ...(n && { origin: n }),
                      event_category: P(n),
                      ecommerce: { checkout: { actionField: i, products: o } },
                    },
                  ],
                ],
              ];
            },
            StartPayment: (e) => {
              let { origin: t } = e;
              return [
                [
                  [
                    {
                      event: "checkoutOption",
                      ...(t && { origin: t }),
                      event_category: P(t),
                      ecommerce: {
                        checkout_option: { actionField: { step: 1 } },
                      },
                    },
                  ],
                ],
              ];
            },
            AddPaymentInfo: (e) => {
              let { origin: t, option: n } = e;
              const r = Object.assign({ step: 2 }, n && { option: n });
              return [
                [
                  [
                    {
                      event: "checkoutOption",
                      ...(t && { origin: t }),
                      event_category: P(t),
                      ecommerce: { checkout_option: { actionField: r } },
                    },
                  ],
                ],
              ];
            },
            CheckoutStep: (e) => {
              let { step: t = 3, origin: n, option: r } = e;
              const o = Object.assign({ step: t }, r && { option: r });
              return [
                [
                  [
                    {
                      event: "checkoutOption",
                      ...(n && { origin: n }),
                      event_category: P(n),
                      ecommerce: { checkout_option: { actionField: o } },
                    },
                  ],
                ],
              ];
            },
            Purchase: (e) => {
              let { contents: t = [], origin: n, ...r } = e;
              const o = [...t],
                i = {},
                a = g(r, k);
              return (
                [
                  "id",
                  "affiliation",
                  "revenue",
                  "tax",
                  "shipping",
                  "coupon",
                  "buyer_id",
                  "buyer_email",
                ].forEach((e) => a[e] && (i[e] = a[e])),
                [
                  [
                    [
                      {
                        event: "purchase",
                        ...(n && { origin: n }),
                        event_category: P(n),
                        ecommerce: {
                          purchase: { actionField: i, products: o },
                        },
                      },
                    ],
                  ],
                ]
              );
            },
            Lead: (e) => {
              let { category: t = "Leads", label: n = "New Lead" } = e;
              return [[[{ event: "lead", event_label: n, event_category: t }]]];
            },
            CustomEvent: (e) => {
              let {
                event: t = "customEvent",
                eventLabel: n,
                eventCategory: r,
                ...o
              } = e;
              return [
                [[{ event: t, event_label: n, event_category: r, ...o }]],
              ];
            },
          };
        function w(e) {
          return (
            void 0 === e && (e = ""),
            "object" == typeof e &&
              (e instanceof Number ||
              e instanceof Boolean ||
              e instanceof String
                ? (e = e.valueOf())
                : null !== e && (e = JSON.stringify(e))),
            e
          );
        }
        function x(e) {
          let t = e;
          return (
            "string" == typeof t && (t = parseFloat(e)),
            "number" != typeof t || isNaN(t) ? e : Math.round(1e4 * t)
          );
        }
        const L = {
          PageView: {
            table: "page_views",
            paramsMap: { pageId: "page_id", pageNumber: "page_number" },
          },
          AddProductImpression: {},
          ClickProduct: {},
          ViewContent: {},
          AddToCart: {},
          RemoveFromCart: {},
          InitiateCheckout: {},
          AddPaymentInfo: {},
          Purchase: {},
          Lead: {
            name: (e) => {
              let { label: t } = e;
              return (n = t) && ("" + n).replace(/\s/g, "");
              var n;
            },
            table: "lead_events",
          },
        };
        function S(e) {
          return Object.keys(e).reduce((t, n) => ((t[n] = w(e[n])), t), {});
        }
        function G(e, t, n, r, o) {
          void 0 === n && (n = {}), void 0 === r && (r = {});
          const i = { evt: e, evn: t, data: S(n) };
          return (
            r.context && r.context.appDefId && (i.appId = r.context.appDefId),
            o && (i.tbl = o),
            [[i]]
          );
        }
        function N(e, t, n, r) {
          const o = (function (e, t) {
            return Object.entries(e).reduce((e, n) => {
              let [r, o] = n;
              return t.includes(r) || (e[r] = o), e;
            }, {});
          })(t, ["_internalEventId", "visitorId"]);
          return G("p", e, o, n, r);
        }
        const R = Object.keys(L).reduce(
            (e, t) => {
              let { name: n, table: r, paramsMap: o } = L[t];
              return (
                (e[t] = function (e, i) {
                  return (
                    void 0 === e && (e = {}),
                    "function" == typeof n && (n = n(e)),
                    o &&
                      (e = Object.keys(o).reduce(
                        (t, n) => ((t[o[n]] = e[n]), t),
                        {}
                      )),
                    (n = n || t),
                    N(n, e, i, r)
                  );
                }),
                e
              );
            },
            {
              CustomEvent: (e, t) => {
                let { event: n, targetTable: r, ...o } = e;
                return (function (e, t, n, r) {
                  return G("c", e, t, n, r);
                })(n, o, t, r);
              },
            }
          ),
          D = {
            page: [
              "pageId",
              "pageNumber",
              "viewer",
              "pageType",
              "pageApp",
              "pageTypeIdentifier",
            ],
            product: [
              "id",
              "sku",
              "name",
              "category",
              "price",
              "currency",
              "brand",
              "variant",
              "list",
              "position",
            ],
            productList: ["contents"],
            payment: ["option"],
            purchase: [
              "id",
              "affiliation",
              "revenue",
              "tax",
              "shipping",
              "coupon",
              "contents",
              "orderId",
            ],
            CompleteRegistration: ["method", "origin"],
          },
          V = {
            PageView: { params: { evid: 1109 }, fields: D.page },
            AddProductImpression: {
              params: { evid: 1100 },
              fields: D.productList,
            },
            ClickProduct: { params: { evid: 1101 }, fields: D.product },
            ViewContent: { params: { evid: 1102 }, fields: D.product },
            AddToCart: {
              params: { evid: 1103 },
              fields: [...D.product, "quantity"],
            },
            RemoveFromCart: {
              params: { evid: 1104 },
              fields: [...D.product, "quantity"],
            },
            InitiateCheckout: { params: { evid: 1105 }, fields: D.productList },
            AddPaymentInfo: { params: { evid: 1106 }, fields: D.payment },
            Purchase: { params: { evid: 1107 }, fields: D.purchase },
            Lead: { params: { evid: 1108 }, fields: [] },
            Schedule: { params: { evid: 1110 }, fields: [] },
            CompleteRegistration: {
              params: { evid: 1111 },
              fields: D.CompleteRegistration,
            },
          },
          M = {
            pageId: (e) => ({ name: "pid", value: e }),
            pageNumber: (e) => ({ name: "pn", value: e }),
            viewer: (e) => ({ name: "viewer", value: e || "unknown" }),
            pageType: (e) => ({ name: "pt", value: e }),
            pageApp: (e) => ({ name: "pa", value: e }),
            pageTypeIdentifier: (e) => ({ name: "pti", value: e }),
            price: (e) => ({ name: "price", value: x(e) }),
            revenue: (e) => ({ name: "revenue", value: x(e) }),
            tax: (e) => ({ name: "tax", value: x(e) }),
            shipping: (e) => ({ name: "shipping", value: x(e) }),
            orderId: (e) => ({ name: "orderGuid", value: e }),
          };
        function q(e, t) {
          return e.reduce((e, n) => {
            const { name: r, value: o } = (function (e, t, n) {
              return "function" == typeof e[t]
                ? e[t](n)
                : { name: t, value: n };
            })(M, n, t[n]);
            return (e[r] = w(o)), e;
          }, {});
        }
        const F = Object.keys(V).reduce(
            (e, t) => (
              (e[t] = function (e, n) {
                void 0 === e && (e = {}), void 0 === n && (n = {});
                const r = { src: 76, ...V[t].params, ...q(V[t].fields, e) };
                return (
                  n.context &&
                    n.context.appDefId &&
                    (r.appId = n.context.appDefId),
                  n.preventDefaultChannels
                    ? []
                    : ("Purchase" === t &&
                        (r.features = w({ reportedToFBonClient: !_(e) })),
                      [[r]])
                );
              }),
              e
            ),
            {}
          ),
          j = {
            GA_TRACKING_ID: "GA_TRACKING_ID",
            pagePath: "page_path",
            pageTitle: "page_title",
          };
        (() => {
          for (let e = 1; e <= 200; e++)
            (j["dimension" + e] = "dimension" + e),
              (j["metric" + e] = "metric" + e);
        })();
        const Y = {
            PageView: (e, t) => {
              let { GA_TRACKING_ID: n, ...r } = e,
                { config: o } = t;
              return [["config", n || o.trackingId, g(r, j)]];
            },
          },
          K = {
            price: "price",
            id: "id",
            currency: "currency",
            name: "name",
            category: "category",
            brand: "brand",
            variant: "variant",
            list: "list_name",
            quantity: "quantity",
            step: "checkout_step",
            option: "checkout_option",
            position: "list_position",
            coupon: "coupon",
            affiliation: "affiliation",
            revenue: "value",
            tax: "tax",
            sku: "sku",
            shipping: "shipping",
          },
          X = (e) => e.contents && e.contents[0].currency,
          B = (e) => {
            let { contents: t = [] } = e;
            return t.map((e) => {
              let { currency: t, ...n } = e;
              return g(n, K);
            });
          },
          W = (e) => {
            let { origin: t } = e;
            return t ? `Enhanced Ecommerce - ${t}` : "Enhanced Ecommerce";
          },
          $ = (e) => {
            let { name: t } = e;
            return t || "(not set)";
          },
          U = {
            PageView: (e) => {
              let { pagePath: t, pageTitle: n } = e;
              return [["event", "page_view", { page_path: t, page_title: n }]];
            },
            AddProductImpression: (e) => [
              [
                "event",
                "view_item_list",
                {
                  event_action: "Product Impressions",
                  event_category: W(e),
                  items: B(e),
                },
              ],
            ],
            ClickProduct: (e) => {
              let { currency: t, ...n } = e;
              return [
                [
                  "event",
                  "select_content",
                  {
                    event_action: "Product Click",
                    event_category: W(n),
                    event_label: $(n),
                    content_type: "product",
                    items: [g(n, K)],
                  },
                ],
              ];
            },
            ViewContent: (e) => {
              let { currency: t, ...n } = e;
              return [
                [
                  "event",
                  "view_item",
                  {
                    event_action: "View Content",
                    event_category: W(n),
                    event_label: $(n),
                    items: [g(n, K)],
                  },
                ],
              ];
            },
            AddToCart: (e) => {
              let { currency: t, ...n } = e;
              return [
                [
                  "event",
                  "add_to_cart",
                  {
                    currency: t,
                    event_action: "Add to Cart",
                    event_category: W(n),
                    event_label: $(n),
                    items: [g(n, K)],
                  },
                ],
              ];
            },
            RemoveFromCart: (e) => {
              let { currency: t, ...n } = e;
              return [
                [
                  "event",
                  "remove_from_cart",
                  {
                    currency: t,
                    event_action: "Remove from Cart",
                    event_category: W(n),
                    event_label: $(n),
                    items: [g(n, K)],
                  },
                ],
              ];
            },
            InitiateCheckout: (e) => [
              [
                "event",
                "begin_checkout",
                {
                  currency: X(e),
                  event_action: "Initiate Checkout",
                  event_category: W(e),
                  items: B(e),
                },
              ],
            ],
            StartPayment: (e) => {
              let { option: t, ...n } = e;
              return [
                [
                  "event",
                  "checkout_progress",
                  {
                    ...g({ step: 3, option: t }, K),
                    event_action: "Start Payment",
                    event_category: W(n),
                    currency: X(n),
                    items: B(n),
                  },
                ],
              ];
            },
            AddPaymentInfo: (e) => {
              let { option: t, ...n } = e;
              return [
                [
                  "event",
                  "add_payment_info",
                  {
                    ...g({ step: 4, option: t }, K),
                    event_action: "Add Payment Info",
                    event_category: W(n),
                  },
                ],
              ];
            },
            CheckoutStep: (e) => {
              let { step: t = 5, option: n, ...r } = e;
              return [
                [
                  "event",
                  "checkout_progress",
                  {
                    ...g({ step: t, option: n }, K),
                    event_action: `Checkout Step ${t}`,
                    event_category: W(r),
                    currency: X(r),
                    items: B(r),
                  },
                ],
              ];
            },
            Purchase: (e) => {
              let { revenue: t, id: n, currency: r, coupon: o, ...i } = e;
              return [
                [
                  "event",
                  "purchase",
                  {
                    ...g({ revenue: t, id: n, currency: r, coupon: o }, K),
                    transaction_id: n,
                    event_action: "Purchase",
                    event_category: W(i),
                    items: B(i),
                  },
                ],
              ];
            },
            Lead: (e) => {
              let {
                category: t = "Leads",
                action: n = "Submitted",
                label: r = "New Lead",
              } = e;
              return [
                [
                  "event",
                  "generate_lead",
                  { event_category: t, event_action: n, event_label: r },
                ],
              ];
            },
            CustomEvent: (e) => {
              const {
                event: t = "customEvent",
                eventAction: n,
                eventCategory: r,
                eventLabel: o,
                ...i
              } = e;
              return [
                ["event", n || t, { ...i, event_category: r, event_label: o }],
              ];
            },
          },
          z = [],
          J = {
            PageView: function (e, t) {
              let { context: n } = void 0 === t ? {} : t;
              return n && n.isFirstVisit ? z : [[]];
            },
          },
          H = {
            id: "content_id",
            name: "content_name",
            quantity: "quantity",
            category: "content_category",
            price: "price",
          },
          Q = function (e) {
            return (
              void 0 === e && (e = []),
              e.map((e) => ({ ...g(e, H), content_type: "product" }))
            );
          },
          Z = function (e) {
            return (
              void 0 === e && (e = {}),
              Number.parseFloat(e.price) * (e.quantity ?? 1)
            );
          },
          ee = function (e) {
            return void 0 === e && (e = []), e.reduce((e, t) => e + Z(t), 0);
          },
          te = (e) => {
            var t;
            return (
              e.currency ||
              (null == (t = e.contents) || null == (t = t[0])
                ? void 0
                : t.currency)
            );
          },
          ne = {
            PageView: () => [["Pageview"]],
            ViewContent: (e) => {
              let { currency: t, ...n } = e;
              return [
                [
                  "ViewContent",
                  {
                    ...g(n, H),
                    content_type: "product",
                    currency: t,
                    value: Z(n),
                  },
                ],
              ];
            },
            AddToCart: (e) => {
              let { currency: t, ...n } = e;
              return [
                [
                  "AddToCart",
                  {
                    ...g(n, H),
                    content_type: "product",
                    currency: t,
                    value: Z(n),
                  },
                ],
              ];
            },
            InitiateCheckout: (e) => [
              [
                "InitiateCheckout",
                {
                  contents: Q(e.contents),
                  currency: te(e),
                  value: ee(e.contents),
                },
              ],
            ],
            Purchase: (e) => [
              [
                "CompletePayment",
                {
                  contents: Q(e.contents),
                  currency: te(e),
                  value: ee(e.contents),
                },
              ],
            ],
            Schedule: () => [["Contact"]],
            Lead: (e) => {
              let { category: t } = e;
              return [
                "get-subscribers" === t
                  ? ["Subscribe"]
                  : "normal" === t || "payment-form" === t
                  ? ["SubmitForm"]
                  : "registration-form" === t
                  ? ["CompleteRegistration"]
                  : [],
              ];
            },
          },
          re = {};
        let oe, ie;
        const ae = (e, t) => {
            var n, r;
            (n = re),
              (r = e),
              Object.prototype.hasOwnProperty.call(n, r) || (re[e] = t);
          },
          ce = (e, t) => {
            Object.keys(re).forEach((n) => {
              re[n].call(void 0, e, ((e) => Object.assign({}, e, ie))(t));
            });
          },
          se = function (e, t) {
            void 0 === t && (t = {}), oe && oe(e, t);
          };
        function ue(e) {
          let {
            isPremium: t,
            isPremiumDomain: n,
            isPremiumUser: r,
          } = void 0 === e ? {} : e;
          return (t && t()) || (n && n()) || (r && r());
        }
        const de = {
            FACEBOOK_PIXEL: "facebookPixel",
            GOOGLE_ANALYTICS: "googleAnalytics",
            GOOGLE_TAG_MANAGER: "googleTagManager",
            GOOGLE_ANALYTICS_CONSENT_MODE: "googleAnalyticsConsentMode",
            GOOGLE_TAG_MANAGER_CONSENT_MODE: "googleTagManagerConsentMode",
            WIX_ANALYTICS: "wixAnalytics",
            BI_ANALYTICS: "biAnalytics",
            GTAG: "gtag",
            GLOBAL_GTAG: "globalGtag",
            VK_RETARGETING: "vkRetargeting",
            YANDEX_METRICA: "yandexMetrica",
            TIKTOK_PIXEL: "tiktokPixel",
            WIX_DEVELOPERS_ANALYTICS: "wix-developers-analytics",
          },
          pe = {
            [de.GOOGLE_ANALYTICS_CONSENT_MODE]: U,
            [de.GOOGLE_TAG_MANAGER_CONSENT_MODE]: O,
          },
          le = {
            [de.FACEBOOK_PIXEL]: I,
            [de.GOOGLE_ANALYTICS]: E,
            [de.GOOGLE_TAG_MANAGER]: O,
            [de.WIX_ANALYTICS]: R,
            [de.BI_ANALYTICS]: F,
            [de.GTAG]: Y,
            [de.GLOBAL_GTAG]: U,
            [de.VK_RETARGETING]: { PageView: () => [[]] },
            [de.YANDEX_METRICA]: J,
            [de.TIKTOK_PIXEL]: ne,
          },
          ve = { ...pe, ...le },
          me = {
            [de.WIX_DEVELOPERS_ANALYTICS]: (e, t) => {
              if (e) {
                if (window) {
                  (window.wixDevelopersAnalytics =
                    window.wixDevelopersAnalytics || {
                      register: ae,
                      triggerEvent: se,
                    }),
                    "function" == typeof window.onWixDevelopersAnalyticsReady &&
                      window.onWixDevelopersAnalyticsReady();
                  try {
                    window.dispatchEvent(
                      new Event("wixDevelopersAnalyticsReady")
                    );
                  } catch (e) {}
                }
                return (
                  (oe = e),
                  (ie = ((e) => ({
                    isPremium: ue(e),
                    userId: e.getUserId(),
                    metaSiteId: e.getMetaSiteId(),
                  }))(t)),
                  ce
                );
              }
            },
          };
        const ye = new (class {
            constructor(e) {
              var t = this;
              void 0 === e && (e = []),
                i()(this, "_channels", []),
                i()(this, "_listeners", []),
                i()(this, "addChannel", (e) => {
                  this.isChannelAlreadyInit(e) ||
                    (this.isChannelPredefined(e)
                      ? this.populateChannelEvents(e)
                      : this.registerChannel(e),
                    this.isChannelValid(e) && this._channels.push(e));
                }),
                i()(this, "addListener", function (e, n) {
                  void 0 === n && (n = {}),
                    Array.isArray(e) &&
                      e.forEach((e) => {
                        if (t.isListenerInitializerValid(e)) {
                          const r = e(t.trackEvent, n);
                          r &&
                            !t.isListenerAlreadyInit(r) &&
                            t._listeners.push(r);
                        }
                      });
                }),
                i()(this, "trackEvent", (e, t, n) => {
                  m([...this._channels, ...this.getReporters()], e, t, n);
                }),
                i()(this, "trackEventToListenersOnly", (e, t, n) => {
                  m(this.getReporters(), e, t, n);
                }),
                i()(this, "trackEventToChannelsOnly", (e, t, n) => {
                  m(
                    this._channels.filter((e) => !pe[e.name]),
                    e,
                    t,
                    n
                  );
                }),
                i()(this, "trackEventToEssentialsOnly", (e, t, n) => {
                  m(
                    this._channels.filter((e) => pe[e.name]),
                    e,
                    t,
                    n
                  );
                }),
                i()(this, "getReporters", () =>
                  this._listeners.map((e) => ({ report: e }))
                ),
                i()(this, "isChannelAlreadyInit", (e) =>
                  this._channels.some((t) => t.name === e.name)
                ),
                i()(this, "isListenerAlreadyInit", (e) =>
                  this._listeners.some((t) => t === e)
                ),
                i()(
                  this,
                  "isListenerInitializerValid",
                  (e) => e && e instanceof Function
                ),
                e.forEach(this.addChannel);
            }
            isChannelPredefined(e) {
              return ve[e.name];
            }
            populateChannelEvents(e) {
              (e.events = ve[e.name]),
                e.events.publicTracking &&
                  e.events.publicTracking instanceof Function &&
                  e.events.publicTracking();
            }
            isChannelValid(e) {
              const t = e.name,
                n = e.report,
                r =
                  e.events &&
                  Object.values(e.events).every((e) => "function" == typeof e);
              return t && n && r;
            }
            registerChannel(e) {
              this.isChannelValid(e) && (ve[e.name] = e.events);
            }
          })(),
          ge = function (e) {
            void 0 === e && (e = []), e.forEach(ye.addChannel);
          },
          _e = (e, t) => {
            ye.addListener(e, t);
          },
          fe = (e, t, n) => {
            ye.trackEvent(e, t, n);
          },
          he = (e, t, n) => {
            ye.trackEventToChannelsOnly(e, t, n);
          },
          Ce = (e, t, n) => {
            ye.trackEventToListenersOnly(e, t, n);
          },
          Ie = (e, t, n) => {
            ye.trackEventToEssentialsOnly(e, t, n);
          };
      })(),
      r
    );
  })()
);
//# sourceMappingURL=analytics-event-adapter.bundle.min.js.map
