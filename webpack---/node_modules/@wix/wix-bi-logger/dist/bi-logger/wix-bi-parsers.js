(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define(["./wix-bi-event-handler"], function (a0) {
      return (root["W"] = factory(a0));
    });
  } else if (typeof module === "object" && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("./wix-bi-event-handler"));
  } else {
    root["W"] = factory(root["W"]);
  }
})(this, function (W) {
  "use strict";

  var W = W || {};
  W.BI = W.BI || {};
  W.BI.FieldParsers = function ($injector) {
    var validators = {
      length: function (val, length) {
        return val && val.length !== undefined && val.length === length;
      },
      maxLength: function (val, maxLength) {
        return val && val.length !== undefined && val.length <= maxLength;
      },
      values: function (val, values) {
        return values && values.indexOf(val) !== -1;
      },
      type: function (val, type) {
        return val && typeof val === type;
      },
    };

    var parsers = {
      subStr: function (val, length) {
        if (val && val.substr) {
          return val.substr(0, Math.min(val.length, length));
        }
        return val;
      },
    };

    this.valid = function (value, restrictions) {
      for (var key in restrictions) {
        if (validators[key] && !validators[key](value, restrictions[key])) {
          return false;
        }
      }
      return true;
    };

    this.parse = function (value, restrictions) {
      if (typeof value === "function") {
        value = $injector ? $injector.invoke(value) : value();
      }
      for (var key in restrictions) {
        value = parsers[key] ? parsers[key](value, restrictions[key]) : value;
      }
      return value;
    };
  };

  return W;
});
