(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define(["./wix-bi", "angular"], function (a0, b1) {
      return factory(a0, b1);
    });
  } else if (typeof module === "object" && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("./wix-bi"), require("angular"));
  } else {
    factory(root["W"], root["angular"]);
  }
})(this, function (W, angular) {
  (function webpackUniversalModuleDefinition(root, factory) {
    if (typeof exports === "object" && typeof module === "object")
      module.exports = factory();
    else if (typeof define === "function" && define.amd)
      define("iframeAppBiContext", [], factory);
    else if (typeof exports === "object")
      exports["iframeAppBiContext"] = factory();
    else root["iframeAppBiContext"] = factory();
  })(typeof self !== "undefined" ? self : this, function () {
    return /******/ (function (modules) {
      // webpackBootstrap
      /******/ // The module cache
      /******/ var installedModules = {};
      /******/
      /******/ // The require function
      /******/ function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/ if (installedModules[moduleId]) {
          /******/ return installedModules[moduleId].exports;
          /******/
        }
        /******/ // Create a new module (and put it into the cache)
        /******/ var module = (installedModules[moduleId] = {
          /******/ i: moduleId,
          /******/ l: false,
          /******/ exports: {},
          /******/
        });
        /******/
        /******/ // Execute the module function
        /******/ modules[moduleId].call(
          module.exports,
          module,
          module.exports,
          __webpack_require__
        );
        /******/
        /******/ // Flag the module as loaded
        /******/ module.l = true;
        /******/
        /******/ // Return the exports of the module
        /******/ return module.exports;
        /******/
      }
      /******/
      /******/
      /******/ // expose the modules object (__webpack_modules__)
      /******/ __webpack_require__.m = modules;
      /******/
      /******/ // expose the module cache
      /******/ __webpack_require__.c = installedModules;
      /******/
      /******/ // define getter function for harmony exports
      /******/ __webpack_require__.d = function (exports, name, getter) {
        /******/ if (!__webpack_require__.o(exports, name)) {
          /******/ Object.defineProperty(exports, name, {
            enumerable: true,
            get: getter,
          });
          /******/
        }
        /******/
      };
      /******/
      /******/ // define __esModule on exports
      /******/ __webpack_require__.r = function (exports) {
        /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
          /******/ Object.defineProperty(exports, Symbol.toStringTag, {
            value: "Module",
          });
          /******/
        }
        /******/ Object.defineProperty(exports, "__esModule", { value: true });
        /******/
      };
      /******/
      /******/ // create a fake namespace object
      /******/ // mode & 1: value is a module id, require it
      /******/ // mode & 2: merge all properties of value into the ns
      /******/ // mode & 4: return value when already ns object
      /******/ // mode & 8|1: behave like require
      /******/ __webpack_require__.t = function (value, mode) {
        /******/ if (mode & 1) value = __webpack_require__(value);
        /******/ if (mode & 8) return value;
        /******/ if (
          mode & 4 &&
          typeof value === "object" &&
          value &&
          value.__esModule
        )
          return value;
        /******/ var ns = Object.create(null);
        /******/ __webpack_require__.r(ns);
        /******/ Object.defineProperty(ns, "default", {
          enumerable: true,
          value: value,
        });
        /******/ if (mode & 2 && typeof value != "string")
          for (var key in value)
            __webpack_require__.d(
              ns,
              key,
              function (key) {
                return value[key];
              }.bind(null, key)
            );
        /******/ return ns;
        /******/
      };
      /******/
      /******/ // getDefaultExport function for compatibility with non-harmony modules
      /******/ __webpack_require__.n = function (module) {
        /******/ var getter =
          module && module.__esModule
            ? /******/ function getDefault() {
                return module["default"];
              }
            : /******/ function getModuleExports() {
                return module;
              };
        /******/ __webpack_require__.d(getter, "a", getter);
        /******/ return getter;
        /******/
      };
      /******/
      /******/ // Object.prototype.hasOwnProperty.call
      /******/ __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/
      /******/ // __webpack_public_path__
      /******/ __webpack_require__.p =
        "https://static.parastorage.com/services/iframe-app-bi-context/1.578.0/";
      /******/
      /******/
      /******/ __webpack_require__.p =
        (typeof window !== "undefined" && window.__STATICS_BASE_URL__) ||
        __webpack_require__.p;
      /******/ // Load entry module and return exports
      /******/ return __webpack_require__((__webpack_require__.s = 10));
      /******/
    })(
      /************************************************************************/
      /******/ [
        /* 0 */
        /*!*********************************************************************************!*\
  !*** ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consts.js ***!
  \*********************************************************************************/
        /*! exports provided: METHODS, PROPS_ACCESS, ALLOW_ALL_POLICY */
        /*! exports used: ALLOW_ALL_POLICY, METHODS, PROPS_ACCESS */
        /***/ function (module, __webpack_exports__, __webpack_require__) {
          "use strict";
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "b",
            function () {
              return METHODS;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "c",
            function () {
              return PROPS_ACCESS;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "a",
            function () {
              return ALLOW_ALL_POLICY;
            }
          );
          var METHODS = {
            policy: "getCurrentConsentPolicy",
            header: "_getConsentPolicyHeader",
            isMethod: true,
          };
          var PROPS_ACCESS = {
            policy: "consentPolicy",
            header: "consentPolicyHeader",
            isMethod: false,
          };
          var ALLOW_ALL_POLICY = {
            essential: true,
            dataToThirdParty: true,
            advertising: true,
            functional: true,
            analytics: true,
          };
          //# sourceMappingURL=consts.js.map

          /***/
        },
        /* 1 */
        /*!**************************************************************************************************!*\
  !*** ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consent-policy-accessor.js ***!
  \**************************************************************************************************/
        /*! exports provided: getGlobalAccessor, getConsentPolicyManager */
        /*! exports used: getConsentPolicyManager */
        /*! ModuleConcatenation bailout: Module uses injected variables (global) */
        /***/ function (module, __webpack_exports__, __webpack_require__) {
          "use strict";
          /* WEBPACK VAR INJECTION */ (function (global) {
            /* unused harmony export getGlobalAccessor */
            /* harmony export (binding) */ __webpack_require__.d(
              __webpack_exports__,
              "a",
              function () {
                return getConsentPolicyManager;
              }
            );
            /* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ =
              __webpack_require__(/*! ./consts */ 0);

            var globalContext;
            function getGlobalAccessor() {
              [getGlobalThis, getGlobal, getSelf, getWindow].forEach(function (
                globalAccessFunc
              ) {
                try {
                  if (!globalContext) {
                    globalContext = globalAccessFunc();
                  }
                } catch (e) {
                  // Lint this mofo
                }
              });
              return globalContext;
            }
            function getWindow() {
              return window;
            }
            function getSelf() {
              return self;
            }
            function getGlobal() {
              return global;
            }
            function getGlobalThis() {
              return globalThis;
            }
            function getConsentPolicyManager(env) {
              if (env === void 0) {
                env = undefined;
              }
              if (env) {
                globalContext = env;
              }
              if (!globalContext && !env) {
                globalContext = getGlobalAccessor();
              }
              var consentPolicyManager;
              try {
                if (
                  typeof globalContext.commonConfig === "object" &&
                  globalContext.commonConfig.consentPolicy
                ) {
                  consentPolicyManager = wrapConsentPolicy(
                    globalContext.commonConfig,
                    _consts__WEBPACK_IMPORTED_MODULE_0__[/* PROPS_ACCESS */ "c"]
                  );
                }
                if (
                  !consentPolicyManager &&
                  typeof globalContext.consentPolicyManager === "object"
                ) {
                  consentPolicyManager = wrapConsentPolicy(
                    globalContext.consentPolicyManager,
                    _consts__WEBPACK_IMPORTED_MODULE_0__[/* METHODS */ "b"]
                  );
                }
                if (
                  !consentPolicyManager &&
                  typeof globalContext.Wix === "object" &&
                  typeof globalContext.Wix.Utils === "object" &&
                  typeof globalContext.Wix.Utils.getCurrentConsentPolicy ===
                    "function"
                ) {
                  consentPolicyManager = wrapConsentPolicy(
                    globalContext.Wix.Utils,
                    _consts__WEBPACK_IMPORTED_MODULE_0__[/* METHODS */ "b"]
                  );
                }
              } catch (e) {
                // Lint this if you can
              }
              return consentPolicyManager;
            }
            function wrapConsentPolicy(accessor, conf) {
              return {
                getCurrentConsentPolicy: function () {
                  var extractor = accessor[conf.policy];
                  return conf.isMethod ? extractor() : extractor;
                },
                _getConsentPolicyHeader: function () {
                  var extractor = accessor[conf.header];
                  return conf.isMethod ? extractor() : extractor;
                },
                deleteReference: !conf.isMethod,
              };
            }
            //# sourceMappingURL=consent-policy-accessor.js.map
            /* WEBPACK VAR INJECTION */
          }.call(
            this,
            __webpack_require__(
              /*! ./../../../../../webpack/buildin/global.js */ 9
            )
          ));

          /***/
        },
        /* 2 */
        /*!***************************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/lib/policy.js ***!
  \***************************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          var types_1 = __webpack_require__(/*! ../types */ 7);
          exports.isPolicyAllowsBsi = function (policyDetails) {
            return (
              !policyDetails ||
              !policyDetails.policy ||
              (policyDetails.policy[
                types_1.ConsentPolicyCategories.Analytics
              ] &&
                policyDetails.policy[
                  types_1.ConsentPolicyCategories.Functional
                ])
            );
          };
          //# sourceMappingURL=policy.js.map

          /***/
        },
        /* 3 */
        /*!**************************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/lib/utils.js ***!
  \**************************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          exports.validateExternalApi = function (api) {
            var keys = [];
            for (var _i = 1; _i < arguments.length; _i++) {
              keys[_i - 1] = arguments[_i];
            }
            return keys.forEach(function (key) {
              if (!api || typeof api[key] !== "function") {
                throw new Error("bsiManager: " + key + " must be a function");
              }
            });
          };
          exports.readCookie = function (name) {
            var regex = RegExp("^\\s*" + name + "=\\s*(.*?)\\s*$");
            var cookies = [];
            try {
              cookies = window.document.cookie.split(";");
            } catch (e) {}
            for (var _i = 0, cookies_1 = cookies; _i < cookies_1.length; _i++) {
              var cookie = cookies_1[_i];
              var match = cookie.match(regex);
              if (match) {
                return match[1];
              }
            }
            return null;
          };
          exports.writeCookie = function (name, value, expires, path, domain) {
            var cookie =
              name +
              "=" +
              value +
              "; expires=" +
              new Date(expires).toUTCString() +
              "; path=" +
              path +
              "; domain=" +
              domain +
              "; SameSite=None; Secure";
            try {
              window.document.cookie = cookie;
            } catch (e) {}
          };
          exports.destroyCookie = function (name, path, domain) {
            exports.writeCookie(name, null, 0, path, domain);
          };
          exports.getNextLocalMidnight = function () {
            return new Date(Date.now() + 24 * 60 * 60 * 1000).setHours(
              0,
              0,
              0,
              0
            );
          };
          //# sourceMappingURL=utils.js.map

          /***/
        },
        /* 4 */
        /*!******************************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/manager-slave.js ***!
  \******************************************************************/
        /*! no static exports found */
        /*! exports used: SlaveBsiManager */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          var cookie_storage_1 = __webpack_require__(
            /*! ./storage/cookie-storage */ 5
          );
          var config_storage_1 = __webpack_require__(
            /*! ./storage/config-storage */ 8
          );
          var utils_1 = __webpack_require__(/*! ./lib/utils */ 3);
          var SlaveBsiManager = /** @class */ (function () {
            function SlaveBsiManager() {
              this.acitivityListeners = [];
              this.initialized = false;
            }
            SlaveBsiManager.create = function (api, options) {
              return new SlaveBsiManager().init(api, options);
            };
            SlaveBsiManager.prototype.extend = function () {
              var _this = this;
              if (!this.options.enableCookie) {
                return;
              }
              var ttl = this.cookie.set(this.config.get()).ttl;
              clearTimeout(this.timeout);
              if (ttl) {
                // Keep the cookie alive until a new bsi value is set on the common config in master
                this.timeout = setTimeout(function () {
                  return _this.extend();
                }, ttl - 1000);
              }
            };
            SlaveBsiManager.prototype.getAndNotify = function () {
              // Notify listeners
              this.acitivityListeners.forEach(function (listener) {
                return listener();
              });
              return this.options.enableCookie
                ? this.config.get() || this.cookie.get()
                : this.config.get();
            };
            SlaveBsiManager.prototype.init = function (api, options) {
              var _this = this;
              utils_1.validateExternalApi(api, "getCommonConfig");
              this.api = api;
              this.options = options;
              this.config = new config_storage_1.ConfigStorage(
                this.api.getConsentPolicy,
                this.api.getCommonConfig
              ).subscribe(function () {
                return _this.extend();
              });
              this.cookie = new cookie_storage_1.CookieStorage(
                this.config,
                this.api.getCookieReaderWriter
              );
              this.initialized = true;
              this.extend();
              return this;
            };
            SlaveBsiManager.prototype.destroy = function () {
              clearTimeout(this.timeout);
            };
            SlaveBsiManager.prototype.onActivity = function (listener) {
              if (typeof listener !== "function") {
                throw new Error("bsiManager: listener must be a function");
              }
              this.acitivityListeners.push(listener);
              return this;
            };
            SlaveBsiManager.prototype.getBsi = function () {
              if (!this.initialized) {
                throw new Error("bsiManager: please call init() first");
              }
              return this.getAndNotify();
            };
            return SlaveBsiManager;
          })();
          exports.SlaveBsiManager = SlaveBsiManager;
          //# sourceMappingURL=manager-slave.js.map

          /***/
        },
        /* 5 */
        /*!***************************************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/storage/cookie-storage.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          var config_1 = __webpack_require__(/*! ../config */ 6);
          var policy_1 = __webpack_require__(/*! ../lib/policy */ 2);
          var utils_1 = __webpack_require__(/*! ../lib/utils */ 3);
          var cookieDomain;
          var cookiePath = "/";
          var isWixCom = function () {
            return config_1.WIX_DOMAINS.some(function (domain) {
              return window.document.location.hostname.indexOf(domain) !== -1;
            });
          };
          var getCookieDomain = function () {
            if (!cookieDomain) {
              var hostname = window.document.location.hostname;
              cookieDomain = isWixCom()
                ? hostname.replace(/^www\./, "")
                : hostname;
            }
            return cookieDomain;
          };
          var CookieStorage = /** @class */ (function () {
            function CookieStorage(configStorage, getCookieReaderWriter) {
              if (getCookieReaderWriter === void 0) {
                getCookieReaderWriter = function () {
                  return {
                    read: utils_1.readCookie,
                    write: utils_1.writeCookie,
                    destroy: utils_1.destroyCookie,
                  };
                };
              }
              this.configStorage = configStorage;
              this.getCookieReaderWriter = getCookieReaderWriter;
            }
            CookieStorage.prototype.isAllowed = function () {
              if (!policy_1.isPolicyAllowsBsi(this.configStorage.getPolicy())) {
                this.destroy();
                return false;
              }
              return true;
            };
            CookieStorage.prototype.get = function () {
              if (!this.isAllowed()) {
                return null;
              }
              return this.getCookieReaderWriter().read(config_1.COOKIE_NAME);
            };
            CookieStorage.prototype.set = function (bsi) {
              if (!this.isAllowed()) {
                return { bsi: null, ttl: null };
              }
              var now = Date.now();
              var expires = Math.min(
                now + config_1.SESSION_DURATION,
                utils_1.getNextLocalMidnight()
              );
              var domain = getCookieDomain();
              this.getCookieReaderWriter().write(
                config_1.COOKIE_NAME,
                "" + bsi,
                expires,
                cookiePath,
                domain
              );
              return { bsi: bsi, ttl: expires - now };
            };
            CookieStorage.prototype.destroy = function () {
              this.getCookieReaderWriter().destroy(
                config_1.COOKIE_NAME,
                cookiePath,
                getCookieDomain()
              );
              // Destroy local storage items set by the old bsi implementation in Santa
              try {
                window.localStorage.removeItem("beatSessionTs");
                window.localStorage.removeItem("beatSessionId");
              } catch (e) {}
            };
            return CookieStorage;
          })();
          exports.CookieStorage = CookieStorage;
          //# sourceMappingURL=cookie-storage.js.map

          /***/
        },
        /* 6 */
        /*!***********************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/config.js ***!
  \***********************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          exports.COOKIE_NAME = "bSession";
          exports.SESSION_DURATION = 30 * 60 * 1000; // 30 minutes
          exports.FREE_SITE_DOMAINS = [".wixsite.com", ".editorx.io"];
          exports.WIX_DOMAINS = [".wix.com", ".editorx.com"];
          //# sourceMappingURL=config.js.map

          /***/
        },
        /* 7 */
        /*!**********************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/types.js ***!
  \**********************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          var ConsentPolicyCategories;
          (function (ConsentPolicyCategories) {
            ConsentPolicyCategories["Essential"] = "essential";
            ConsentPolicyCategories["Functional"] = "functional";
            ConsentPolicyCategories["Analytics"] = "analytics";
          })(
            (ConsentPolicyCategories =
              exports.ConsentPolicyCategories ||
              (exports.ConsentPolicyCategories = {}))
          );
          //# sourceMappingURL=types.js.map

          /***/
        },
        /* 8 */
        /*!***************************************************************************!*\
  !*** ../node_modules/@wix/bsi-manager/dist/src/storage/config-storage.js ***!
  \***************************************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", { value: true });
          var policy_1 = __webpack_require__(/*! ../lib/policy */ 2);
          var ConfigStorage = /** @class */ (function () {
            function ConfigStorage(getConsentPolicy, getCommonConfig) {
              this.getConsentPolicy = getConsentPolicy;
              this.getCommonConfig = getCommonConfig;
            }
            ConfigStorage.prototype.isAllowed = function () {
              if (!policy_1.isPolicyAllowsBsi(this.getPolicy())) {
                this.destroy();
                return false;
              }
              return true;
            };
            ConfigStorage.prototype.call = function (method) {
              var args = [];
              for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
              }
              var config = this.getCommonConfig();
              return (
                config &&
                typeof config[method] === "function" &&
                config[method].apply(config, args)
              );
            };
            ConfigStorage.prototype.getPolicy = function () {
              var policy = this.call("get", "consentPolicy");
              if (policy) {
                return { policy: policy };
              }
              return typeof this.getConsentPolicy === "function"
                ? this.getConsentPolicy()
                : null;
            };
            ConfigStorage.prototype.get = function () {
              if (!this.isAllowed()) {
                return null;
              }
              return this.call("get", "bsi") || null;
            };
            ConfigStorage.prototype.set = function (bsi) {
              if (!this.isAllowed()) {
                return null;
              }
              this.call("set", "bsi", bsi);
              return bsi;
            };
            ConfigStorage.prototype.subscribe = function (handler) {
              var _this = this;
              this.call("subscribe", function () {
                var bsi = _this.call("get", "bsi");
                if (bsi !== _this.bsi) {
                  _this.bsi = bsi;
                  handler(bsi);
                }
              });
              return this;
            };
            ConfigStorage.prototype.destroy = function () {
              this.call("set", "bsi", null);
            };
            return ConfigStorage;
          })();
          exports.ConfigStorage = ConfigStorage;
          //# sourceMappingURL=config-storage.js.map

          /***/
        },
        /* 9 */
        /*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
        /*! no static exports found */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Module is not an ECMAScript module */
        /***/ function (module, exports) {
          var g;

          // This works in non-strict mode
          g = (function () {
            return this;
          })();

          try {
            // This works if eval is allowed (see CSP)
            g = g || new Function("return this")();
          } catch (e) {
            // This works if the window reference is available
            if (typeof window === "object") g = window;
          }

          // g can still be undefined, but nothing to do about it...
          // We return undefined, instead of nothing here, so it's
          // easier to handle this case. if(!global) { ...}

          module.exports = g;

          /***/
        },
        /* 10 */
        /*!******************************!*\
  !*** ./index.ts + 2 modules ***!
  \******************************/
        /*! exports provided: getBsi, getBiContext */
        /*! all exports used */
        /*! ModuleConcatenation bailout: Cannot concat with ../node_modules/@wix/bsi-manager/dist/src/manager-slave.js (<- Module is not an ECMAScript module) */
        /*! ModuleConcatenation bailout: Cannot concat with ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consent-policy-accessor.js (<- Module uses injected variables (global)) */
        /*! ModuleConcatenation bailout: Cannot concat with ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consts.js because of ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consent-policy-accessor.js */
        /***/ function (module, __webpack_exports__, __webpack_require__) {
          "use strict";
          __webpack_require__.r(__webpack_exports__);

          // EXTERNAL MODULE: ../node_modules/@wix/bsi-manager/dist/src/manager-slave.js
          var manager_slave = __webpack_require__(4);

          // EXTERNAL MODULE: ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consent-policy-accessor.js
          var consent_policy_accessor = __webpack_require__(1);

          // EXTERNAL MODULE: ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/consts.js
          var consts = __webpack_require__(0);

          // CONCATENATED MODULE: ../node_modules/@wix/consent-policy-client-accessor/dist/es/src/index.js

          var src_ConsentPolicyAccessor = /** @class */ (function () {
            function ConsentPolicyAccessor(env) {
              if (env) {
                this.env = env;
              }
              this.consentPolicyAccess = Object(
                consent_policy_accessor["a" /* getConsentPolicyManager */]
              )(this.env);
            }
            ConsentPolicyAccessor.prototype.clearReference = function () {
              if (
                this.consentPolicyAccess &&
                this.consentPolicyAccess.deleteReference
              ) {
                this.consentPolicyAccess = undefined;
              }
            };
            ConsentPolicyAccessor.prototype.getCurrentConsentPolicy =
              function () {
                if (!this.consentPolicyAccess) {
                  this.consentPolicyAccess = Object(
                    consent_policy_accessor["a" /* getConsentPolicyManager */]
                  )(this.env);
                }
                var policyObj =
                  (this.consentPolicyAccess &&
                    this.consentPolicyAccess.getCurrentConsentPolicy()) ||
                  consts["a" /* ALLOW_ALL_POLICY */];
                this.clearReference();
                return policyObj.policy ? policyObj.policy : policyObj;
              };
            ConsentPolicyAccessor.prototype.getConsentPolicyHeader = function (
              valueOnly
            ) {
              if (valueOnly === void 0) {
                valueOnly = false;
              }
              if (!this.consentPolicyAccess) {
                this.consentPolicyAccess = Object(
                  consent_policy_accessor["a" /* getConsentPolicyManager */]
                )(this.env);
              }
              var consentPolicyHeaderObj = (this.consentPolicyAccess &&
                this.consentPolicyAccess._getConsentPolicyHeader()) || {
                "consent-policy": "",
              };
              this.clearReference();
              return valueOnly
                ? consentPolicyHeaderObj["consent-policy"]
                : consentPolicyHeaderObj;
            };
            return ConsentPolicyAccessor;
          })();

          //# sourceMappingURL=index.js.map
          // CONCATENATED MODULE: ./bsi.ts

          var BsiManagerKey = "__bsiManager";
          var createBsiManager = function (Wix) {
            var Utils = Wix.Utils;
            var policyAccessor = new src_ConsentPolicyAccessor();
            var callSafe = function (fn) {
              var args = [];
              for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
              }
              var _a;
              return (
                Utils.commonConfig &&
                typeof Utils.commonConfig[fn] === "function" &&
                (_a = Utils.commonConfig)[fn].apply(_a, args)
              );
            };
            return new manager_slave["SlaveBsiManager"]().init(
              {
                getCommonConfig: function () {
                  return {
                    get: function (key) {
                      return callSafe("get", key);
                    },
                    subscribe: function (handler) {
                      return callSafe("onCommonConfigChanged", handler);
                    },
                  };
                },
                getConsentPolicy: function () {
                  return { policy: policyAccessor.getCurrentConsentPolicy() };
                },
              },
              { enableCookie: true }
            );
          };
          var initBsiManager = function () {
            if (typeof window === "undefined" || !window.Wix) {
              return null;
            }
            if (!window[BsiManagerKey]) {
              window[BsiManagerKey] = {
                manager: createBsiManager(window.Wix),
                getBsi: function () {
                  // tslint:disable: no-invalid-this
                  var Analytics = window.Wix.Analytics;
                  if (
                    Analytics &&
                    typeof Analytics.reportVisitorActivity === "function"
                  ) {
                    Analytics.reportVisitorActivity();
                  }
                  return this.manager.getBsi();
                },
              };
            }
            return window[BsiManagerKey];
          };

          // CONCATENATED MODULE: ./index.ts
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "getBsi",
            function () {
              return getBsi;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            "getBiContext",
            function () {
              return getBiContext;
            }
          );

          var bsiManager = initBsiManager();
          var index_callSafe = function (Wix, fn) {
            var args = [];
            for (var _i = 2; _i < arguments.length; _i++) {
              args[_i - 2] = arguments[_i];
            }
            var _a;
            if (Wix.Utils && typeof Wix.Utils[fn] === "function") {
              return (_a = Wix.Utils)[fn].apply(_a, args);
            }
          };
          var ENRICHERS = {
            _msid: function (Wix) {
              return index_callSafe(Wix, "getInstanceValue", "metaSiteId");
            },
            _appId: function (Wix) {
              return index_callSafe(Wix, "getInstanceValue", "appDefId");
            },
            _instanceId: function (Wix) {
              return index_callSafe(Wix, "getInstanceId");
            },
            _siteOwnerId: function (Wix) {
              return index_callSafe(Wix, "getSiteOwnerId");
            },
            _siteMemberId: function (Wix) {
              return index_callSafe(Wix, "getUid") || "";
            },
            _visitorId: function (Wix) {
              return index_callSafe(Wix, "getInstanceValue", "aid");
            },
            _viewMode: function (Wix) {
              return index_callSafe(Wix, "getViewMode");
            },
            _uuid: {
              enabled: function (Wix) {
                return index_callSafe(Wix, "getViewMode") === "editor";
              },
              value: function (Wix) {
                return index_callSafe(Wix, "getUid") || "";
              },
            },
            _bsi: function (Wix) {
              return getBsi(Wix);
            },
          };
          var getBsi = function (Wix) {
            return bsiManager && bsiManager.getBsi(Wix);
          };
          function getBiContext(Wix) {
            if (!Wix) {
              return {};
            }
            return Object.keys(ENRICHERS).reduce(function (res, field) {
              var prop = ENRICHERS[field];
              if (typeof prop === "function") {
                res[field] = prop(Wix);
              } else if (prop.enabled(Wix)) {
                res[field] = prop.value(Wix);
              }
              return res;
            }, {});
          }

          /***/
        },
        /******/
      ]
    );
  });
  //# sourceMappingURL=app.bundle.js.map
  /* global W */
  ("use strict");

  angular
    .module("wix.common.bi", [])
    .factory("Logger", function () {
      return W.BI.Logger;
    })
    .factory("DomEventHandler", function () {
      return W.BI.DomEventHandler;
    })
    .run(function (biBrowsingSession) {
      biBrowsingSession.track();
    });

  ("use strict");

  angular.module("wix.common.bi").constant(
    "recursiveExtend",
    (function () {
      function isObject(v) {
        return v !== null && typeof v === "object" && v.constructor !== Array;
      }

      function applyModifications(conf, partial) {
        for (var k in partial) {
          if (partial.hasOwnProperty(k)) {
            if (isObject(partial[k])) {
              conf[k] = conf[k] || {};
              applyModifications(conf[k], partial[k]);
            } else {
              conf[k] = partial[k];
            }
          }
        }
      }

      return applyModifications;
    })()
  );

  ("use strict");

  /*
 Usage:

 <div wix-bi="event-name" wix-bi-args="params" wix-bi-event="mouseenter"></div>
 */
  angular
    .module("wix.common.bi")
    .directive("wixBi", function (domBiLogger, $window) {
      function convertAttrToConst(attr) {
        return attr.replace(/-/g, "_").toUpperCase();
      }

      return {
        restrict: "A",
        priority: 1, //should be in a higher priority of ng-click
        link: {
          //actually, in angular ~1.2, post link functions are run in reverse order,
          //so we made it pre-link to preserve backward compatibility with angular ~1.0
          pre: function (scope, element, attr) {
            var eventType = attr.wixBiEvent || "click";

            element.bind(eventType, function (ev) {
              var eventName = convertAttrToConst(attr.wixBi);
              var eventArgs = scope.$eval(attr.wixBiArgs) || {};
              if (
                eventType === "click" &&
                ev.target.href &&
                attr.delayHref !== undefined
              ) {
                var href = ev.target.href;
                ev.preventDefault();
                domBiLogger.log(eventName, eventArgs, function () {
                  $window.location = href;
                });
              } else {
                domBiLogger.log(eventName, eventArgs);
              }
            });
          },
        },
      };
    });

  ("use strict");

  (function () {
    /**
     * Provides a window object to the callback iff current window is the topmost one
     * Otherwise returns null
     */
    function provideBrowsingContext(cb) {
      if (typeof window !== "undefined" && window) {
        try {
          return window.top === window.self ? (cb ? cb(window) : window) : null;
        } catch (e) {
          return null;
        }
      }

      return null;
    }

    function hook(obj, fnName, _hook) {
      if (!obj || !obj[fnName]) {
        return;
      }

      var original = obj[fnName];
      obj[fnName] = function () {
        _hook.apply(null, arguments);
        return original.apply(obj, arguments);
      };
    }

    function guid() {
      /* jshint ignore:start */
      return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
        /[xy]/g,
        function (c) {
          var r = (Math.random() * 16) | 0;
          var v = c === "x" ? r : (r & 0x3) | 0x8;
          return v.toString(16);
        }
      );
      /* jshint ignore:end */
    }

    angular.module("wix.common.bi").provider("biBrowsingSession", function () {
      var IS_TRACKING = "__isTrackingBiBrowsingSession__";
      var ENDPOINT = "p";
      var SOURCE = 19;
      var EVID = 3;
      var hostName;

      this.setHost = function (host) {
        hostName = host;
      };

      /* @ngInject */
      this.$get = function ($window, Logger) {
        var logger = new Logger({
          hostName: hostName,
          adapter: ENDPOINT,
          useBeacon: true,
          defaultEventArgs: {
            src: SOURCE,
            evid: EVID,
            vsi: guid(),
          },
        });

        function getDesktopSize(window) {
          var width = (window.screen && window.screen.width) || 0;
          var height = (window.screen && window.screen.height) || 0;

          return [width, height].join("x");
        }

        function getWindowSize(window) {
          var width = 0;
          var height = 0;

          if (window.innerWidth) {
            width = window.innerWidth;
            height = window.innerHeight;
          } else if (window.document) {
            if (
              window.document.documentElement &&
              window.document.documentElement.clientWidth
            ) {
              width = window.document.documentElement.clientWidth;
              height = window.document.documentElement.clientHeight;
            } else if (
              window.document.body &&
              window.document.body.clientWidth
            ) {
              width = window.document.body.clientWidth;
              height = window.document.body.clientHeight;
            }
          }

          return [width, height].join("x");
        }

        function onLoad(cb) {
          provideBrowsingContext(function (window) {
            cb(window.location.href);
          });
        }

        function onPushState(cb) {
          provideBrowsingContext(function (window) {
            ["pushState", "replaceState"].forEach(function (fnName) {
              hook(window.history, fnName, function (_, __, url) {
                cb(url);
              });
            });
          });
        }

        function onPopState(cb) {
          provideBrowsingContext(function (window) {
            window.addEventListener("popstate", function () {
              cb(window.location.href);
            });
          });
        }

        function listen(cb) {
          var fromUrl = window.document.referrer;

          [onLoad, onPushState, onPopState].forEach(function (event) {
            event(function (toUrl) {
              cb(fromUrl, toUrl);
              fromUrl = toUrl;
            });
          });
        }

        function shouldTrack() {
          return provideBrowsingContext(function (window) {
            return window && !window[IS_TRACKING];
          });
        }

        function setIsTracking() {
          provideBrowsingContext(function (window) {
            window[IS_TRACKING] = true;
          });
        }

        /**
         * Sends a page view event on initial load and on every page switch
         * BI event definition: http://bo.wix.com/bi-catalog-webapp/#/sources/19/events/3
         */
        function track() {
          if (!shouldTrack()) {
            return;
          }

          setIsTracking();

          var firstInSession = 1;
          listen(function (fromUrl, toUrl) {
            var screen = provideBrowsingContext(function (window) {
              return { sr: getDesktopSize(window), wr: getWindowSize(window) };
            });

            logger.log({
              from: fromUrl,
              to: toUrl,
              fis: firstInSession,
              sr: screen.sr,
              wr: screen.wr,
            });
            firstInSession = 0;
          });
        }

        return {
          track: track,
          logger: logger,
        };
      };
    });
  })();

  ("use strict");

  angular
    .module("wix.common.bi")
    .provider("biLogger", function (recursiveExtend) {
      var _config = { eventMap: {} };

      this.setConfig = function (config) {
        recursiveExtend(_config, config);
      };

      /* @ngInject */
      this.$get = function (Logger, $injector) {
        function buildAuthorizationContext() {
          var authorizationContext = {};
          /* @ngInject */
          authorizationContext.ownerId = function (permissionsManager) {
            return permissionsManager.$$getOwnerId();
          };
          /* @ngInject */
          authorizationContext.roles = function (permissionsManager) {
            return permissionsManager.$$getRoles().join(",");
          };
          return authorizationContext;
        }

        _config.injector = $injector;

        if ($injector.has("permissionsManager")) {
          var authorizationContext = buildAuthorizationContext();
          _config.defaultEventArgs = angular.extend(
            {},
            _config.defaultEventArgs,
            authorizationContext
          );
          _config.defaultErrorArgs = angular.extend(
            {},
            _config.defaultErrorArgs,
            authorizationContext
          );
        }

        return angular.extend(new Logger(_config), {
          getConfig: function () {
            return _config;
          },
        });
      };
    });

  ("use strict");

  angular
    .module("wix.common.bi")
    .provider("domBiLogger", function (recursiveExtend) {
      var _config = { eventMap: {} };

      this.setConfig = function (config) {
        recursiveExtend(_config, config);
      };

      /* @ngInject */
      this.$get = function (biLogger, DomEventHandler) {
        return angular.extend(new DomEventHandler(biLogger, _config), {
          getConfig: function () {
            return _config;
          },
        });
      };
    });

  /*global W*/
  ("use strict");

  angular
    .module("wix.common.bi")
    .value("nowWrapper", function () {
      return Date.now();
    })
    .provider(
      "wixBiLogger",
      function (
        biLoggerProvider,
        domBiLoggerProvider,
        biBrowsingSessionProvider
      ) {
        this.setConfig = function (config) {
          biLoggerProvider.setConfig(config);
          domBiLoggerProvider.setConfig(config);
          biBrowsingSessionProvider.setHost(config.hostName);
        };

        /* @ngInject */
        this.$get = function (
          biLogger,
          domBiLogger,
          $q,
          $rootScope,
          $window,
          $parse,
          nowWrapper
        ) {
          var _config = angular.extend(
            {},
            biLogger.getConfig(),
            domBiLogger.getConfig()
          );

          function makeCb(defer) {
            return function () {
              if ($rootScope.$$phase) {
                defer.resolve();
              } else {
                $rootScope.$apply(function () {
                  defer.resolve();
                });
              }
            };
          }

          function getReducedMap(map) {
            return Object.keys(_config[map] || []).reduce(function (prev, key) {
              prev[key] = key;
              return prev;
            }, {});
          }

          function isNewRelicDefined() {
            return typeof $window.NREUM !== "undefined";
          }

          return {
            log: function (eventName, eventArgs) {
              var defer = $q.defer();
              if (typeof eventName === "string" || !eventName) {
                domBiLogger.log(eventName, eventArgs, makeCb(defer));
              } else {
                biLogger.log(eventName, makeCb(defer));
              }
              return defer.promise;
            },
            error: function (eventName, eventArgs) {
              var defer = $q.defer();
              if (typeof eventName === "string") {
                domBiLogger.error(eventName, eventArgs, makeCb(defer));
              } else {
                biLogger.error(eventName, makeCb(defer));
              }
              return defer.promise;
            },
            reportOnReady: function (viewName, eventArgs) {
              var defer = $q.defer();
              if (!W.BI.initialLoadIsReported) {
                if (isNewRelicDefined()) {
                  $window.NREUM.finished();
                }
                if (eventArgs === undefined) {
                  eventArgs = {};
                }
                var startTime = $parse("performance.timing.navigationStart")(
                  $window
                );
                /*jshint -W106*/
                if (startTime) {
                  eventArgs.loading_time = nowWrapper() - startTime;
                }
                eventArgs.initial_load = true;
                /*jshint +W106*/
                W.BI.initialLoadIsReported = true;
              }
              biLogger.reportOnReady(viewName, eventArgs, makeCb(defer));
              return defer.promise;
            },
            reportRouteChange: function (viewName, eventArgs) {
              var defer = $q.defer();
              biLogger.reportRouteChange(viewName, eventArgs, makeCb(defer));
              return defer.promise;
            },
            getLastBiUrl: function () {
              return biLogger.getLastBiUrl();
            },
            events: getReducedMap("eventMap"),
            errors: getReducedMap("errorMap"),
            getConfig: function () {
              return angular.extend(
                {},
                biLogger.getConfig(),
                domBiLogger.getConfig()
              );
            },
          };
        };
      }
    );
});
