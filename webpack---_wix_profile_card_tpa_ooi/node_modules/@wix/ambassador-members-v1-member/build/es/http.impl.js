import { toURLSearchParams } from "@wix/metro-runtime";
import { serializer } from "@wix/metro-runtime/ambassador";
import { resolveUrl } from "@wix/metro-runtime";
var _approveMemberRequest = {};
var _approveMemberResponse = { member: "_member" };
var _blockMemberRequest = {};
var _blockMemberResponse = { member: "_member" };
var _bulkApproveMembersRequest = {};
var _bulkApproveMembersResponse = {};
var _bulkBlockMembersRequest = {};
var _bulkBlockMembersResponse = {};
var _bulkDeleteMembersRequest = {};
var _bulkDeleteMembersResponse = {};
var _createMemberRequest = { member: "_member" };
var _createMemberResponse = { member: "_member" };
var _deleteMemberAddressesRequest = {};
var _deleteMemberAddressesResponse = { member: "_member" };
var _deleteMemberEmailsRequest = {};
var _deleteMemberEmailsResponse = { member: "_member" };
var _deleteMemberPhonesRequest = {};
var _deleteMemberPhonesResponse = { member: "_member" };
var _deleteMemberRequest = {};
var _deleteMemberResponse = {};
var _deleteMyMemberRequest = {};
var _deleteMyMemberResponse = {};
var _disconnectMemberRequest = {};
var _disconnectMemberResponse = { member: "_member" };
var _getMemberRequest = {};
var _getMemberResponse = { member: "_member" };
var _getMyMemberRequest = {};
var _getMyMemberResponse = { member: "_member" };
var _joinCommunityRequest = {};
var _joinCommunityResponse = { member: "_member" };
var _leaveCommunityRequest = {};
var _leaveCommunityResponse = { member: "_member" };
var _listMembersRequest = {};
var _listMembersResponse = { members: "_member" };
var _member = {
  createdDate: "google.protobuf.Timestamp",
  updatedDate: "google.protobuf.Timestamp",
  lastLoginDate: "google.protobuf.Timestamp",
};
var _muteMemberRequest = {};
var _muteMemberResponse = { member: "_member" };
var _queryMembersRequest = {};
var _queryMembersResponse = { members: "_member" };
var _unmuteMemberRequest = {};
var _unmuteMemberResponse = { member: "_member" };
var _updateMemberRequest = { member: "_member" };
var _updateMemberResponse = { member: "_member" };
var _updateMemberSlugRequest = {};
var _updateMemberSlugResponse = { member: "_member" };
var _updateMySlugRequest = {};
var _updateMySlugResponse = { member: "_member" };
function resolveComWixpressMembersApiMembersUrl(opts) {
  var domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "api._api_base_domain_": [
      {
        srcPath: "/members-ng-api",
        destPath: "",
      },
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "create.editorx": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    _: [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
    "members.wixapps.net": [
      {
        srcPath: "/_api/members/v1/members",
        destPath: "/v1/members",
      },
    ],
  };
  return resolveUrl(
    Object.assign(opts, { domainToMappings: domainToMappings })
  );
}
/**
 * Updates the currently logged in member's slug.
 *
 * >**Note:**
 * >This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).
 */
export function updateMySlug(payload) {
  var _a = serializer(_updateMySlugRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_updateMySlugResponse, {
    _member: _member,
  }).fromJSON;
  function __updateMySlug(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.UpdateMySlug",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/my/slug",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __updateMySlug.fromReq = fromReq;
  __updateMySlug.__isAmbassador = true;
  return __updateMySlug;
}
/** Change member slug. */
export function updateMemberSlug(payload) {
  var _a = serializer(_updateMemberSlugRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_updateMemberSlugResponse, {
    _member: _member,
  }).fromJSON;
  function __updateMemberSlug(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.UpdateMemberSlug",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/slug",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __updateMemberSlug.fromReq = fromReq;
  __updateMemberSlug.__isAmbassador = true;
  return __updateMemberSlug;
}
/**
 * Joins the currently logged-in member to the site community and sets their profile to public.
 *
 * When a member's profile is public, they have access to the site's
 * [Members Area](https://support.wix.com/en/article/about-members-area)
 * features — such as chat, forum, and followers —
 * and their profile is visible to other members and site visitors.
 *
 * >**Note:**
 * >This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).
 */
export function joinCommunity(payload) {
  var _a = serializer(_joinCommunityRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_joinCommunityResponse, {
    _member: _member,
  }).fromJSON;
  function __joinCommunity(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.JoinCommunity",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/join-community",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __joinCommunity.fromReq = fromReq;
  __joinCommunity.__isAmbassador = true;
  return __joinCommunity;
}
/**
 * Removes the currently logged-in member from the site community and sets their profile to private.
 *
 * When a member's profile is private,
 * they do not have access to the site's
 * [Members Area](https://support.wix.com/en/article/about-members-area)
 * features — such as chat, forum, and followers —
 * and their profile is hidden from other members and site visitors.
 *
 * > **Note:**
 * > If a member leaves the site's community, their content (such as forum posts and blog comments) remain publicly visible.
 *
 * >**Note:**
 * >This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).
 */
export function leaveCommunity(payload) {
  var _a = serializer(_leaveCommunityRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_leaveCommunityResponse, {
    _member: _member,
  }).fromJSON;
  function __leaveCommunity(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.LeaveCommunity",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/leave-community",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __leaveCommunity.fromReq = fromReq;
  __leaveCommunity.__isAmbassador = true;
  return __leaveCommunity;
}
/**
 * Retrieves the currently logged-in member.
 *
 * >**Note:**
 * >This endpoint requires [visitor or member authentication](https://dev.wix.com/docs/rest/articles/getting-started/access-types-and-permissions).
 */
export function getMyMember(payload) {
  var _a = serializer(_getMyMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_getMyMemberResponse, { _member: _member }).fromJSON;
  function __getMyMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "GET",
      methodFqn: "com.wixpress.members.api.Members.GetMyMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/my",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __getMyMember.fromReq = fromReq;
  __getMyMember.__isAmbassador = true;
  return __getMyMember;
}
/**
 * Retrieves a member by ID.
 *
 * - `PUBLIC` fieldset returns `id`, `contactId`, and the `profile` object. `status`, `privacyStatus` and `activityStatus` are returned as `UNKNOWN`.
 * - `EXTENDED` fieldset returns `id`, `loginEmail`, `status`, `contactId`, `privacyStatus`, `activityStatus`, and the `profile` object.
 * - `FULL` fieldset returns all fields.
 *
 * Members are typically associated with a contact, each having a distinct member and contact ID. When passing the ID as a parameter, avoid presuming the IDs are identical since they represent separate entities.
 */
export function getMember(payload) {
  var _a = serializer(_getMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_getMemberResponse, { _member: _member }).fromJSON;
  function __getMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "GET",
      methodFqn: "com.wixpress.members.api.Members.GetMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __getMember.fromReq = fromReq;
  __getMember.__isAmbassador = true;
  return __getMember;
}
/**
 * Lists site members, given the provided paging and fieldsets.
 *
 * - `PUBLIC` fieldset returns `id` and `profile` object. `status`, `privacyStatus` and `activityStatus` are returned as `UNKNOWN`.
 * - `FULL` fieldset returns all fields.
 */
export function listMembers(payload) {
  var _a = serializer(_listMembersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_listMembersResponse, { _member: _member }).fromJSON;
  function __listMembers(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "GET",
      methodFqn: "com.wixpress.members.api.Members.ListMembers",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __listMembers.fromReq = fromReq;
  __listMembers.__isAmbassador = true;
  return __listMembers;
}
/**
 * Retrieves a list of up to 100 members, given the provided filters, fieldsets, sorting and paging.
 *
 * - `PUBLIC` fieldset returns `id` and `profile` object. `status`, `privacyStatus` and `activityStatus` are returned as `UNKNOWN`.
 * - `FULL` fieldset returns all fields.
 *
 * Currently supported fields for filtering:
 *
 * - `id`
 * - `profile.nickname`
 * - `profile.slug`
 * - `contact.firstName`
 * - `contact.lastName`
 * - `privacyStatus`
 * - `loginEmail`
 * - `createdDate`
 * - `status`
 * - `userId`
 *
 * Currently supported fields for sorting:
 *
 * - `profile.nickname`
 * - `contact.firstName`
 * - `contact.lastName`
 * - `createdDate`
 * - `lastLoginDate`
 */
export function queryMembers(payload) {
  var _a = serializer(_queryMembersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_queryMembersResponse, {
    _member: _member,
  }).fromJSON;
  function __queryMembers(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.QueryMembers",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/query",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __queryMembers.fromReq = fromReq;
  __queryMembers.__isAmbassador = true;
  return __queryMembers;
}
/**
 * Restricts member's social participation in the community.
 *
 * After this action, muted member cannot leave comments, like or share posts.
 *
 * Verticals, which are respecting this property:
 *
 * - Forum
 * - Blog
 *
 * Returns full member entity with updated activity_status.
 */
export function muteMember(payload) {
  var _a = serializer(_muteMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_muteMemberResponse, { _member: _member }).fromJSON;
  function __muteMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.MuteMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/mute",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __muteMember.fromReq = fromReq;
  __muteMember.__isAmbassador = true;
  return __muteMember;
}
/**
 * Lifts restrictions of member's social participation in the community
 *
 * After this action, unmuted member can leave comments, post likes or share posts.
 *
 * Verticals, which are respecting this property:
 *
 * - Forum
 * - Blog
 *
 * Returns full member entity with updated activity_status.
 */
export function unmuteMember(payload) {
  var _a = serializer(_unmuteMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_unmuteMemberResponse, {
    _member: _member,
  }).fromJSON;
  function __unmuteMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.UnmuteMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/unmute",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __unmuteMember.fromReq = fromReq;
  __unmuteMember.__isAmbassador = true;
  return __unmuteMember;
}
/** Approves a pending member, giving them access to members-only pages on the site. */
export function approveMember(payload) {
  var _a = serializer(_approveMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_approveMemberResponse, {
    _member: _member,
  }).fromJSON;
  function __approveMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.ApproveMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/approve",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __approveMember.fromReq = fromReq;
  __approveMember.__isAmbassador = true;
  return __approveMember;
}
/**
 * Blocks member.
 *
 * After this action, blocked member cannot log into Members-Only pages on a site.
 *
 * Returns full member entity with updated status.
 */
export function blockMember(payload) {
  var _a = serializer(_blockMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_blockMemberResponse, { _member: _member }).fromJSON;
  function __blockMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.BlockMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/block",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __blockMember.fromReq = fromReq;
  __blockMember.__isAmbassador = true;
  return __blockMember;
}
/**
 * Disconnects member.
 *
 * After this action, offline member cannot log into on a site. Member is not visible in Business Manager.
 *
 * Returns full member entity with updated status.
 */
export function disconnectMember(payload) {
  var _a = serializer(_disconnectMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_disconnectMemberResponse, {
    _member: _member,
  }).fromJSON;
  function __disconnectMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.DisconnectMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/disconnect",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __disconnectMember.fromReq = fromReq;
  __disconnectMember.__isAmbassador = true;
  return __disconnectMember;
}
/**
 * Deletes a member by ID.
 *
 * Members are typically associated with a contact, each having a distinct member and contact ID. When passing the ID as a parameter, avoid presuming the IDs are identical since they represent separate entities.
 */
export function deleteMember(payload) {
  var _a = serializer(_deleteMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_deleteMemberResponse, {}).fromJSON;
  function __deleteMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "DELETE",
      methodFqn: "com.wixpress.members.api.Members.DeleteMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __deleteMember.fromReq = fromReq;
  __deleteMember.__isAmbassador = true;
  return __deleteMember;
}
export function deleteMyMember(payload) {
  var _a = serializer(_deleteMyMemberRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_deleteMyMemberResponse, {}).fromJSON;
  function __deleteMyMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "DELETE",
      methodFqn: "com.wixpress.members.api.Members.DeleteMyMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/my",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __deleteMyMember.fromReq = fromReq;
  __deleteMyMember.__isAmbassador = true;
  return __deleteMyMember;
}
/** Deletes multiple members which satisfy the provided filter. */
export function bulkDeleteMembers(payload) {
  var _a = serializer(_bulkDeleteMembersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_bulkDeleteMembersResponse, {}).fromJSON;
  function __bulkDeleteMembers(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.BulkDeleteMembers",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/bulk/delete-by-filter",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __bulkDeleteMembers.fromReq = fromReq;
  __bulkDeleteMembers.__isAmbassador = true;
  return __bulkDeleteMembers;
}
/** Approves multiple members which satisfy the provided filter. */
export function bulkApproveMembers(payload) {
  var _a = serializer(_bulkApproveMembersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_bulkApproveMembersResponse, {}).fromJSON;
  function __bulkApproveMembers(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.BulkApproveMembers",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/bulk/approve-by-filter",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __bulkApproveMembers.fromReq = fromReq;
  __bulkApproveMembers.__isAmbassador = true;
  return __bulkApproveMembers;
}
/**
 * Blocks multiple members which satisfy the provided filter.
 *
 * See documentation for blocking of a single member [here](https://bo.wix.com/wix-docs/rest/members/members/block-member)
 */
export function bulkBlockMembers(payload) {
  var _a = serializer(_bulkBlockMembersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_bulkBlockMembersResponse, {}).fromJSON;
  function __bulkBlockMembers(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.BulkBlockMembers",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/bulk/block-by-filter",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __bulkBlockMembers.fromReq = fromReq;
  __bulkBlockMembers.__isAmbassador = true;
  return __bulkBlockMembers;
}
/**
 * Creates a site member.
 *
 * After creation, you can use
 * [Send Set Password Email](https://dev.wix.com/api/rest/members/member-authentication/send-set-password-email)
 * to email the member with a link to set their password.
 * The member can log in to the site
 * when they set their password for the first time.
 *
 * > **Note:**
 * > When creating multiple members,
 * > set your requests at least 1 second apart to keep below rate limits.
 */
export function createMember(payload) {
  var _a = serializer(_createMemberRequest, { _member: _member }),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_createMemberResponse, {
    _member: _member,
  }).fromJSON;
  function __createMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "POST",
      methodFqn: "com.wixpress.members.api.Members.CreateMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __createMember.fromReq = fromReq;
  __createMember.__isAmbassador = true;
  return __createMember;
}
/**
 * Updates a member's properties.
 *
 * To clear a field's value, set an empty value with an empty string `""`.
 *
 * To clear the member's addresses, emails, or phone numbers,
 * use these endpoints:
 *
 * - To clear `contact.addresses`, use [`Delete Member Addresses`](https://dev.wix.com/api/rest/members/members/delete-member-addresses).
 * - To clear `contact.emails`, use [`Delete Member Emails`](https://dev.wix.com/api/rest/members/members/delete-member-emails).
 * - To clear `contact.phones`, use [`Delete Member Phones`](https://dev.wix.com/api/rest/members/members/delete-member-phones).
 *
 * Members are typically associated with a contact, each having a distinct member and contact ID. When passing the ID as a parameter, avoid presuming the IDs are identical since they represent separate entities.
 *
 * Privacy settings cannot be updated using [Update Member](https://dev.wix.com/docs/rest/api-reference/members/members/update-member). A member can use [Leave Community]([https://dev.wix.com/docs/rest/api-reference/members/members/leave-community](https://dev.wix.com/docs/rest/api-reference/members/members/leave-community)) or [Join Community](https://dev.wix.com/docs/rest/api-reference/members/members/join-community) to update their privacy settings.
 */
export function updateMember(payload) {
  var _a = serializer(_updateMemberRequest, { _member: _member }),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_updateMemberResponse, {
    _member: _member,
  }).fromJSON;
  function __updateMember(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "PATCH",
      methodFqn: "com.wixpress.members.api.Members.UpdateMember",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{member.id}",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __updateMember.fromReq = fromReq;
  __updateMember.__isAmbassador = true;
  return __updateMember;
}
/**
 * Clears a member's phone numbers.
 *
 *
 * Members are typically associated with a contact, each having a distinct member and contact ID. When passing the ID as a parameter, avoid presuming the IDs are identical since they represent separate entities.
 */
export function deleteMemberPhones(payload) {
  var _a = serializer(_deleteMemberPhonesRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_deleteMemberPhonesResponse, {
    _member: _member,
  }).fromJSON;
  function __deleteMemberPhones(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "DELETE",
      methodFqn: "com.wixpress.members.api.Members.DeleteMemberPhones",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/phones",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __deleteMemberPhones.fromReq = fromReq;
  __deleteMemberPhones.__isAmbassador = true;
  return __deleteMemberPhones;
}
/**
 * Clears a member's email addresses.
 *
 * Members are typically associated with a contact, each having a distinct member and contact ID. When passing the ID as a parameter, avoid presuming the IDs are identical since they represent separate entities.
 */
export function deleteMemberEmails(payload) {
  var _a = serializer(_deleteMemberEmailsRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_deleteMemberEmailsResponse, {
    _member: _member,
  }).fromJSON;
  function __deleteMemberEmails(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "DELETE",
      methodFqn: "com.wixpress.members.api.Members.DeleteMemberEmails",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/emails",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __deleteMemberEmails.fromReq = fromReq;
  __deleteMemberEmails.__isAmbassador = true;
  return __deleteMemberEmails;
}
/**
 * Deletes a member's street addresses.
 *
 * Members are typically associated with a contact, each having a distinct member and contact ID. When passing the ID as a parameter, avoid presuming the IDs are identical since they represent separate entities.
 */
export function deleteMemberAddresses(payload) {
  var _a = serializer(_deleteMemberAddressesRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = serializer(_deleteMemberAddressesResponse, {
    _member: _member,
  }).fromJSON;
  function __deleteMemberAddresses(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.member",
      method: "DELETE",
      methodFqn: "com.wixpress.members.api.Members.DeleteMemberAddresses",
      url: resolveComWixpressMembersApiMembersUrl({
        protoPath: "/v1/members/{id}/addresses",
        data: serializedData,
        host: host,
      }),
      params: toURLSearchParams(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __deleteMemberAddresses.fromReq = fromReq;
  __deleteMemberAddresses.__isAmbassador = true;
  return __deleteMemberAddresses;
}
//# sourceMappingURL=http.impl.js.map
