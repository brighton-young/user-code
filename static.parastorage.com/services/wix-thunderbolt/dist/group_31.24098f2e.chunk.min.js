"use strict";
(self.webpackJsonp__wix_thunderbolt_app =
  self.webpackJsonp__wix_thunderbolt_app || []).push([
  [8919],
  {
    24334: function (e, t, r) {
      r.r(t),
        r.d(t, {
          ClassNameApiSymbol: function () {
            return m._c;
          },
          page: function () {
            return P;
          },
        });
      var a = r(62155),
        n = r.n(a),
        o = r(77748),
        c = r(20590),
        i = r(66225),
        s = r(32166),
        g = r(39218),
        d = r(87711),
        l = r(35406),
        p = r(10553),
        m = r(79904),
        f = r(789);
      const u = (e, t) => {
          if (!e) return !1;
          const r = e;
          return r.id === t || (!!r.parentNode && u(r.parentNode, t));
        },
        h = (e, t) => (
          (t = t || window.innerWidth),
          !(e.min && t < e.min) && !(e.max && t > e.max)
        );
      var v = r(56656),
        E = r(49698),
        T = r(89301),
        y = r(59058);
      const R = { addCompId: !0 },
        b = (0, o.Og)(
          [
            (0, o.KT)(c.Gp, m.UU),
            (0, o.KT)(c.wk, m.UU),
            (0, o.KT)(c.AF, m.UU),
            m.cZ,
            i.T,
            s.RV,
            g.Is,
            d.Ji,
            s.Ht,
            m.o2,
            m.LI,
            m.RB,
            m.P0,
            m._c,
            l.Q,
            m.LY,
            p.n,
            (0, o.lq)(T.J0),
            (0, o.lq)(y.h),
          ],
          (
            {
              compsToTriggers: e,
              isTouchDevice: t,
              compIdsWithAccessibleTrigger: r,
              effectTriggerToReaction: a,
              dynamicCompToDescendants: o,
            },
            c,
            i,
            s,
            g,
            d,
            l,
            p,
            m,
            h,
            { isTriggerBpRangeInCurrentBreakpoint: T },
            y,
            { shouldEnableTriggersAndReactions: b },
            { addClassName: C },
            k,
            I,
            $,
            w,
            D
          ) => {
            let O;
            const U = ({
                compToRegister: e,
                triggerData: t,
                triggerType: r,
              }) => {
                g.register(e, v.FV[r], s.createReaction(t, e), R);
              },
              S = ({ compToRegister: e, triggerData: t, triggerType: r }) => {
                const o = {};
                n().reduce(
                  t,
                  (e, t, r) => (
                    t.forEach((t) => {
                      const o = t.triggerBpRange;
                      t.reactions.forEach((t) => {
                        const c = t.reactionData.name
                          ? t.reactionData.name
                          : t.reactionData.effect;
                        n().forEach(a, (a, n) => {
                          a.includes(`#${c}`) &&
                            ((e[n] = e[n] || {}),
                            (e[n][r] = e[n][r] || []),
                            (e[n][r] = [
                              ...e[n][r],
                              { triggerBpRange: { ...o }, reactions: [t] },
                            ]));
                        });
                      });
                    }),
                    e
                  ),
                  o
                ),
                  n().forEach(o, (t, a) => {
                    O?.addEffectCallback(a, r, s.createReaction(t, e));
                  });
              },
              A = {};
            let _ = [];
            const N = (t) => {
                const r = t.target,
                  a = window.document.getElementById("SITE_CONTAINER");
                if (!E.c.some((e) => a.classList.contains(e))) return;
                _.push(t.target);
                const o = e[r.id]?.focus;
                o
                  ? s.handleReaction(t, o, r.id, !1)
                  : Object.entries(e).forEach(([e, a]) => {
                      if (a.focus) {
                        const n = (0, f.HP)(r.id),
                          o = n ? `${e}${f.Jx}${n}` : e,
                          c = d.document.getElementById(o);
                        c &&
                          c.contains(t.target) &&
                          s.handleReaction(t, a.focus, r.id, !1);
                      }
                    });
                _.filter((e) => !e.contains(t.target)).forEach((r) => {
                  const a = e[(0, f.vC)(r.id)]?.focus;
                  a && s.handleReaction(t, a, r.id, !0),
                    (_ = n().remove(_, (e) => !(e.id === r.id)));
                });
              },
              B = (t) => {
                if (("Space" === t.code || "Enter" === t.key) && t.target) {
                  const r = t.target,
                    a = e[(0, f.vC)(r.id)]?.keydown;
                  a && s.handleReaction(t, a, r.id, !1);
                }
              };
            let M;
            const P = new Promise((e) => (M = e)),
              L = {
                click: U,
                tap: U,
                "mouse-in": U,
                "mouse-out": U,
                hover: ({ compToRegister: e, triggerData: r, pageId: a }) => {
                  if (t) {
                    const t = (t) => {
                      let o;
                      const c = (0, f.HP)(t) || "",
                        i = (i) => {
                          if (u(i.target, e)) return;
                          const d = ((e, t, r = "") =>
                            n().mapValues(e, (e) =>
                              e
                                .map((e) => {
                                  let a = [];
                                  return (
                                    T(e) &&
                                      (a = e.reactions.filter(
                                        (e) =>
                                          A[e.reactionData.name + r] === t &&
                                          ((A[e.reactionData.name] = ""), !0)
                                      )),
                                    { ...e, reactions: a }
                                  );
                                })
                                .filter((e) => e)
                            ))(r, e, c);
                          (i.compId = t),
                            s.createReverseReaction(d, e)(i),
                            o && g.unregister(a, "onClick", o),
                            (o = null);
                        };
                      setTimeout(() => {
                        o = g.register(a, "onClick", i, R);
                      }, 0),
                        ((e, t, r) => {
                          Object.keys(e).forEach((a) => {
                            e[a].forEach((e) => {
                              T(e) &&
                                e.reactions.forEach((e) => {
                                  A[e.reactionData.name + t] = r;
                                });
                            });
                          });
                        })(r, c, e);
                    };
                    g.register(e, "onClick", s.createReaction(r, e, t), R);
                  } else
                    g.register(e, "onMouseEnter", s.createReaction(r, e), R),
                      g.register(
                        e,
                        "onMouseLeave",
                        s.createReverseReaction(r, e),
                        R
                      );
                },
                "animation-start": S,
                "animation-end": S,
                "page-visible": ({ pageId: e, triggerData: t }) => {
                  P.then(s.createReaction(t, e)).catch((e) =>
                    m.captureError(e, {
                      tags: {
                        feature: "triggers-and-reactions",
                        methodName: "registerPageVisibleTrigger",
                      },
                    })
                  );
                },
              },
              j = {
                click: ({ compToRegister: e, triggerData: t }) => {
                  Object.keys(t).forEach((r) => {
                    t[r].some((e) => T(e)) &&
                      ($["specs.thunderbolt.viewport_hydration_react_18"]
                        ? k
                            .waitForComponentToRender(e)
                            .then(() => {
                              C(e, "has-click-trigger");
                            })
                            .catch((e) =>
                              m.captureError(e, {
                                tags: {
                                  feature: "triggers-and-reactions",
                                  methodName: "addCssClassToClickTrigger",
                                },
                              })
                            )
                        : C(e, "has-click-trigger"));
                  });
                },
              },
              H = (t, r) => {
                Object.entries(e).forEach(([e, a]) => {
                  Object.entries(a).forEach(([a, n]) => {
                    t[a]?.({
                      compToRegister: e,
                      triggerData: n,
                      triggerType: a,
                      pageId: r,
                    });
                  });
                });
              },
              W = ({ element: e, compToRegister: t }) => {
                h.observe(e, t);
              },
              x = {
                "page-visible": ({ element: e, triggerData: t }) => {
                  P.then(s.createReaction(t, e.id)).catch((e) =>
                    m.captureError(e, {
                      tags: {
                        feature: "triggers-and-reactions",
                        methodName: "triggerPageVisibleOnDynamicComps",
                      },
                    })
                  );
                },
                "viewport-enter": W,
                "viewport-leave": W,
              },
              V = (e, t, r) => {
                const a = c.get(),
                  n = a?.dynamicCompToDescendants[e];
                if (n) {
                  const o = n.pageId;
                  a[o]?.observe(e, t, r);
                }
              };
            return {
              name: "triggersAndReactions",
              async pageWillMount(t) {
                if (
                  (r.forEach((e) => {
                    const t = p.get(e)?.a11y || {};
                    p.update({ [e]: { a11y: { tabIndex: 0, ...t } } });
                  }),
                  b)
                ) {
                  w ? (O = await w.getInstance()) : D && (O = D.getManager()),
                    H(L, t),
                    "masterPage" !== l &&
                      i.export({ observeChildListChange: V });
                  const r = I(l, x, e, o);
                  c.update(
                    (e) => (
                      e || (e = { dynamicCompToDescendants: {} }),
                      (e[l] = r),
                      e.dynamicCompToDescendants
                        ? Object.assign(e.dynamicCompToDescendants, o)
                        : (e.dynamicCompToDescendants = o),
                      e
                    )
                  );
                }
              },
              pageDidMount() {
                if (b) {
                  const e = r.length > 0 && !t;
                  "masterPage" !== l &&
                    e &&
                    (d.addEventListener("focusin", N),
                    d.addEventListener("keydown", B)),
                    O && y.init(),
                    h.init(),
                    H(j, l);
                }
              },
              pageDidLoad() {
                M();
              },
              pageDidUnmount() {
                if (b) {
                  r.length > 0 &&
                    !t &&
                    (d.removeEventListener("keydown", B),
                    d.removeEventListener("focusin", N)),
                    h.destroy();
                }
              },
              pageWillUnmount() {
                if (b) {
                  y.destroy(),
                    Object.keys(a).forEach((e) => {
                      O?.clearEffectCallbacks(e);
                    });
                  const e = c.get();
                  e &&
                    e[l] &&
                    (e[l].destroy(), c.update((e) => (delete e[l], e)));
                }
              },
            };
          }
        );
      var C = r(16537),
        k = r(36655);
      const I = (e, t) => `${t.id}__${e}`,
        $ = (0, o.Og)(
          [(0, o.KT)(c.Gp, m.UU), m.GG, d.Ji, m.LI, m.vZ],
          (
            { repeaterDescendantToRepeaterMapper: e },
            t,
            r,
            { isTriggerBpRangeInCurrentBreakpoint: a },
            n
          ) => {
            let o = new WeakMap();
            const c = ({ type: e, reactionData: a }, c, i) => {
                const s = document.getElementById(c),
                  g = I(c, a),
                  d = s && o.get(s)?.[g];
                if (s && !d) {
                  switch (e) {
                    case "AddState":
                      t.addState(a.name, c), i && i(c);
                      break;
                    case "RemoveState":
                      t.removeState(a.name, c), i && i(c);
                      break;
                    case "ToggleState":
                      t.toggleState(a.name, c);
                      break;
                    case "RemoveAllStates":
                      t.removeAllStates(c);
                      break;
                    case "ScrollForward":
                      (0, k.f)(r.get((0, f.vC)(c)), c, "forward");
                      break;
                    case "ScrollBackward":
                      (0, k.f)(r.get((0, f.vC)(c)), c, "backward");
                      break;
                    case "Play":
                      n.play(a.effect, c);
                  }
                  if (a.once) {
                    const e = o.get(s) || {};
                    (e[I(c, a)] = !0), o.set(s, e);
                  }
                }
              },
              i = (t, n, o, i, s) => {
                Object.keys(n).forEach((g) => {
                  const d = n[g],
                    l = ((e, t, r, a) => {
                      const n = r[e];
                      if (n) {
                        if (n !== r[(0, f.vC)(t)]) {
                          const { items: t = [] } = a.get(r[e]);
                          return t.map((t) => (0, f.Zr)(e, t));
                        }
                        return [(0, f.Zr)(e, (0, f.YJ)(t))];
                      }
                      return [e];
                    })(g, t && t.compId ? t.compId : o, e, r);
                  for (const e of l)
                    d.filter((e) => a(e)).forEach((t) =>
                      t.reactions.forEach((t) => {
                        if (i) {
                          const r = v.OY[t.type];
                          r && c({ ...t, type: r }, e);
                        } else c(t, e, s);
                      })
                    );
                });
              },
              s = (e, t, r, a) => (n) => {
                i(n, e, t, r, a);
              };
            return {
              createReaction(e, t, r) {
                return s(e, t, !1, r);
              },
              createReverseReaction(e, t) {
                return s(e, t, !0);
              },
              handleReaction: i,
              pageWillUnmount() {
                o = new WeakMap();
              },
            };
          }
        ),
        w = (0, o.Og)(
          [d.Ji, m._c],
          (e, { addClassName: t, removeClassName: r }) => {
            let a = {},
              n = () => {};
            const o = (e) => {
                n(e, a[e]);
              },
              c = (e, r) => {
                e && (t(r, e), a[r] || (a[r] = []), a[r].push(e), o(r));
              },
              i = (e, t) => {
                e &&
                  (r(t, e),
                  a[t] && ((a[t] = a[t].filter((t) => t !== e)), o(t)));
              };
            return {
              name: "reactionsStateApi",
              pageWillMount() {
                (a = {}), (n = () => {});
              },
              addState: c,
              removeState: i,
              toggleState: (e, t) => {
                e && (!a[t] || a[t].indexOf(e) < 0 ? c(e, t) : i(e, t));
              },
              removeAllStates: (e) => {
                a[e] &&
                  a[e].forEach((t) => {
                    r(e, t);
                  }),
                  (a[e] = []),
                  o(e);
              },
              registerToActiveEffectsChange: (e) => {
                n = e;
              },
            };
          }
        ),
        D = (0, o.Og)(
          [m.GG, (0, o.KT)(c.Gp, m.UU), (0, o.KT)(c.AF, m.UU)],
          (e, t, r) => {
            const a = (e, r) => {
                const a = (0, f.vC)(e);
                return t.compEffectsToVariantId[a][r];
              },
              n = (t, r) => {
                r.forEach((r) => {
                  e.toggleState(a(t, r), t);
                });
              },
              o = (t) => {
                e.removeAllStates(t);
              },
              c = (t, r) => {
                r.forEach((r) => {
                  e.addState(a(t, r), t);
                });
              },
              i = (t, r) => {
                r.forEach((r) => {
                  e.removeState(a(t, r), t);
                });
              },
              s = (r) => {
                e.registerToActiveEffectsChange((e, a) =>
                  r(
                    e,
                    a.map((e) => t.variantIdToEffect[e])
                  )
                );
              };
            return (
              r.export({ applyEffects: c, removeEffects: i }),
              {
                getSdkHandlers: () => ({
                  [m.UU]: {
                    toggleEffects: n,
                    removeAllEffects: o,
                    applyEffects: c,
                    removeEffects: i,
                    registerToActiveEffectsChange: s,
                  },
                }),
              }
            );
          }
        ),
        O = (0, o.Og)(
          [(0, o.KT)(c.Gp, m.UU), m.cZ, s.RV],
          ({ compsToTriggers: e, viewportTriggerCompsToParams: t }, r, a) => {
            const n = {},
              o = (t) => {
                const a = e[(0, f.vC)(t)]["viewport-enter"];
                r.handleReaction(null, a, t, !1);
              },
              c = () => {
                let t = !0;
                return (a) => {
                  if (t)
                    return (
                      a
                        .filter((e) => e.isIntersecting)
                        .forEach((e) => o(e.target.id)),
                      void (t = !1)
                    );
                  a.forEach((t) => {
                    t.isIntersecting
                      ? o(t.target.id)
                      : ((t) => {
                          const a = e[(0, f.vC)(t)]["viewport-leave"];
                          a && r.handleReaction(null, a, t, !1);
                        })(t.target.id);
                  });
                };
              },
              i = (e) => {
                const t = (({
                    threshold: e,
                    margin: { top: t, bottom: r, left: a, right: n },
                  }) =>
                    `${e}_${t.value}${t.type}_${n.value}${n.type}_${r.value}${r.type}_${a.value}${a.type}`)(
                    e
                  ),
                  {
                    threshold: r,
                    margin: { top: o, bottom: i, left: s, right: g },
                  } = e;
                return (
                  n[t] ||
                    (n[t] = new a.IntersectionObserver(c(), {
                      threshold: r,
                      rootMargin: `${o.value}${o.type} ${g.value}${g.type} ${i.value}${i.type} ${s.value}${s.type}`,
                    })),
                  n[t]
                );
              };
            return {
              init: () => {
                const e = a.document.getElementById("SITE_CONTAINER"),
                  r = a.innerHeight;
                Object.entries(t).forEach(([t, a]) => {
                  e.querySelectorAll(`#${t}, ${(0, f.pV)(t)}`).forEach((e) => {
                    if (e) {
                      e.offsetHeight > r && (a.threshold = 0.01);
                      i(a).observe(e);
                    }
                  });
                });
              },
              observe: (e, r) => {
                const a = t[r];
                i(a).observe(e);
              },
              destroy: () => {
                Object.values(n).forEach((e) => e.disconnect());
              },
            };
          }
        ),
        U = (0, o.Og)([], () => ({
          isTriggerBpRangeInCurrentBreakpoint: (e) => h(e.triggerBpRange),
        })),
        S = (0, o.Og)([(0, o.lq)(T.J0), (0, o.lq)(y.h), s.Ht], (e, t, r) => {
          let a;
          e
            ? e
                .getInstance()
                .then((e) => {
                  a = e;
                })
                .catch((e) =>
                  r.captureError(e, {
                    tags: { feature: "triggers-and-reactions" },
                    groupErrorsBy: "values",
                  })
                )
            : t && (a = t.getManager());
          return {
            play: (e, t) => {
              a?.trigger({ play: [{ effectId: e, targetId: t }] });
            },
            scrub: (e, t) => {
              a?.trigger({ scrub: e }, t);
            },
          };
        }),
        A = (0, o.Og)([d.Ji], (e) => {
          const t = (t) => {
            const r = e.get(t)?.className;
            return r ? r.split(" ") : [];
          };
          return {
            addClassName: (r, a) => {
              const n = t(r),
                o = [...new Set([...n, a])];
              e.update({ [r]: { className: o.join(" ") } });
            },
            removeClassName: (r, a) => {
              const n = t(r)
                .filter((e) => e !== a)
                .join(" ");
              e.update({ [r]: { className: n } });
            },
          };
        });
      var _ = r(82658);
      const N = (0, o.Og)(
          [(0, o.KT)(c.Gp, m.UU), s.RV, m.vZ],
          ({ scrubReactionWithBpRanges: e, scrubBpRanges: t }, r, a) => {
            const n = [];
            let o = !1;
            const c = (e) => {
                const t = r.innerWidth;
                a.scrub(s(t), e);
              },
              i = (e) => {
                e.matches && c(!0);
              },
              s = (t) =>
                e.reduce((e, r) => {
                  if (!(o || "pointer-move" !== r.triggerData.trigger))
                    return e;
                  return (
                    h(r.triggerBpRange, t) &&
                      r.reactions.forEach((t) => {
                        e[t.reactionData.effect] = r.triggerData;
                      }),
                    e
                  );
                }, {});
            return {
              init: () => {
                (0, _.fU)(r) ||
                  ((o = r.matchMedia("(hover: hover)").matches),
                  (() => {
                    let e = !1,
                      a = !1;
                    t.forEach((t) => {
                      const o = ((e) => {
                        const t = [];
                        return (
                          e.max && t.push(`(max-width:${e.max}px)`),
                          e.min && t.push(`(min-width:${e.min}px)`),
                          t.join(" and ")
                        );
                      })(t);
                      if (o) {
                        const e = r.matchMedia(o);
                        n.push(e),
                          e.addEventListener("change", i),
                          e.matches && ((a = !0), c());
                      } else e = !0;
                    }),
                      !a && e && c();
                  })());
              },
              destroy: () => {
                (0, _.fU)(r) ||
                  (n.forEach((e) => {
                    e.removeEventListener("change", i);
                  }),
                  (n.length = 0));
              },
            };
          }
        ),
        B = (0, o.Og)([s.RV], (e) => ({
          shouldEnableTriggersAndReactions: !(0, _.fU)(e),
        })),
        M = (0, o.Og)(
          [g.Is, (0, o.KT)(c.AF, m.UU), s.RV],
          () => (e, t, r, a) => {
            const n = new WeakMap(),
              o = function (n, o) {
                const c = a[n],
                  i = Array.from(c.children)
                    .map((e) => `#${e}, ${(0, f.pV)(e)}`)
                    .join();
                o.forEach((a) => {
                  const n = Array.from(a.querySelectorAll(i));
                  a.matches(i) && n.push(a),
                    n.forEach((a) => {
                      const n = (0, f.vC)(a.id),
                        o = r[n];
                      Object.entries(o).forEach(([r, o]) => {
                        t[r]?.({
                          compToRegister: n,
                          triggerData: o,
                          triggerType: r,
                          pageId: e,
                          element: a,
                        });
                      });
                    });
                });
              },
              c = new MutationObserver((e) => {
                e.forEach((e) => {
                  if (e.addedNodes.length) {
                    const t = n.get(e.target);
                    o?.(t, e.addedNodes);
                  }
                });
              });
            return {
              observe: (e, t, r) => {
                a[e] &&
                  (n.set(t, e),
                  c.observe(t, { childList: !0 }),
                  r && requestAnimationFrame(() => o(e, t.childNodes)));
              },
              destroy: () => {
                c.disconnect();
              },
            };
          }
        ),
        P = (e) => {
          e(m.cZ, C.$.PageWillUnmountHandler).to($),
            e(m.o2).to(O),
            e(C.$.PageWillMountHandler, m.GG).to(w),
            e(m._c).to(A),
            e(
              C.$.PageWillMountHandler,
              C.$.PageDidMountHandler,
              C.$.PageDidUnmountHandler,
              C.$.PageDidLoadHandler,
              C.$.PageWillUnmountHandler
            ).to(b),
            e(s.H9).to(D),
            e(m.LI).to(U),
            e(m.vZ).to(S),
            e(m.RB).to(N),
            e(m.P0).to(B),
            e(m.LY).to(M);
        };
    },
  },
]);
//# sourceMappingURL=https://static.parastorage.com/services/wix-thunderbolt/dist/group_31.24098f2e.chunk.min.js.map
