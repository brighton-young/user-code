"use strict";
(self.webpackJsonp__wix_thunderbolt_app =
  self.webpackJsonp__wix_thunderbolt_app || []).push([
  [1717],
  {
    13396: function (e, t, n) {
      n.r(t),
        n.d(t, {
          PageTransitionsCompletedSymbol: function () {
            return s.dB;
          },
          PageTransitionsSymbol: function () {
            return s.e$;
          },
          editor: function () {
            return h;
          },
          editorPage: function () {
            return v;
          },
          page: function () {
            return w;
          },
        });
      var o = n(77748),
        i = n(20590),
        r = n(32166),
        s = n(86046),
        a = n(41596);
      const d = (0, o.Og)(
          [(0, o.KT)(i.Gp, s.UU), (0, o.KT)(i.wk, s.UU), s.dB, a.s, r.RV],
          (e, t, n, o, i) => {
            const r =
              !!i &&
              "startViewTransition" in i.document &&
              e.shouldUseViewTransition;
            return {
              name: "pageTransitions",
              pageDidMount(o) {
                const i = t.get(),
                  r = i?.mountDoneHandler;
                r && r({ transitionName: e.transitionName, pageId: o }),
                  (i?.isFirstMount ?? 1) && n.notifyPageTransitionsCompleted(o),
                  t.update((e) => ({ ...e, isFirstMount: !1 }));
              },
              pageWillUnmount({ contextId: e }) {
                const s = t.get();
                if (r) {
                  const e = () => {
                      o.getScrollYHistoryState() || o.scrollToTop();
                    },
                    r = (e) => {
                      n.notifyPageTransitionsCompleted(e),
                        o.getScrollYHistoryState() && o.restoreScrollPosition();
                    };
                  !(function (e, t, n, o) {
                    let i, r;
                    t.document.documentElement.dataset.viewTransition =
                      "page-transition";
                    const s = document.startViewTransition(() =>
                      e.then((e) => {
                        (r = e.transitionName),
                          (i = e.pageId),
                          (t.document.documentElement.dataset.pageTransition =
                            r);
                      })
                    );
                    s.ready.then(n),
                      s.finished.then(() => {
                        delete t.document.documentElement.dataset
                          .viewTransition,
                          o(i);
                      });
                  })(
                    new Promise((e) => {
                      t.update((t) => ({ ...t, mountDoneHandler: e }));
                    }),
                    i,
                    e,
                    r
                  );
                }
                s?.propsUpdateListenersUnsubscribers?.[e]?.(),
                  t.update((t) => {
                    const n = t?.propsUpdateListenersUnsubscribers ?? {};
                    return (
                      delete n[e],
                      { ...t, propsUpdateListenersUnsubscribers: n }
                    );
                  });
              },
            };
          }
        ),
        l = (0, o.Og)([(0, o.KT)(i.wk, s.UU)], (e) => ({
          disableNextTransition: () =>
            e.update((e) => ({ ...e, nextTransitionEnabled: !1 })),
        })),
        p = (0, o.Og)([], () => {
          let e = [];
          return {
            onPageTransitionsCompleted: (t) => {
              e.push(t);
            },
            notifyPageTransitionsCompleted: (t) => {
              e.forEach((e) => e(t)), (e = []);
            },
          };
        });
      var u = n(16537),
        c = n(20636),
        g = n(87711);
      const m = (0, o.Og)(
        [(0, o.KT)(i.Gp, s.UU), g.Ji, s.dB, a.s, (0, o.KT)(i.wk, s.UU), r.RV],
        (e, t, n, o, i, r) => ({
          componentTypes: ["Page"],
          componentWillMount(s) {
            const a = i.get(),
              d = !a || a.nextTransitionEnabled,
              l = !a || a.isFirstMount,
              p =
                !!r &&
                "startViewTransition" in r.document &&
                e.shouldUseViewTransition,
              u = s.id;
            t.update({
              SITE_PAGES: {
                transitionEnabled: d,
                ...(p
                  ? {}
                  : {
                      onTransitionStarting: () => {
                        o.getScrollYHistoryState() || o.scrollToTop();
                      },
                      onTransitionComplete: () => {
                        n.notifyPageTransitionsCompleted(u),
                          o.getScrollYHistoryState() &&
                            o.restoreScrollPosition();
                      },
                    }),
              },
            }),
              i.update(() => ({
                ...a,
                isFirstMount: l,
                nextTransitionEnabled: !0,
              }));
          },
        })
      );
      var T = n(39218),
        U = n(62155),
        y = n.n(U);
      const b = [
          "video.videoInfo.videoId",
          "image.uri",
          "image.link.href",
          "image.displayMode",
          "backgroundImage.uri",
          "backgroundImage.link.href",
          "backgroundImage.displayMode",
        ],
        f = [
          "type",
          "alignType",
          "fittingType",
          "scrollType",
          "colorOverlay",
          "colorOverlayOpacity",
          "color",
          "opacity",
        ],
        P = (e, t, n, o) =>
          o.every((n) => (e && e[n]) === (t && t[n])) &&
          n.every((i) => (!e && !t) || P(e && e[i], t && t[i], n, o)),
        k = (0, o.Og)(
          [
            (0, o.KT)(i.Gp, s.UU),
            g.Ji,
            s.dB,
            a.s,
            (0, o.KT)(i.wk, s.UU),
            T.Is,
            T.DR,
          ],
          (e, t, n, o, i, r, s) => {
            const a = `pageBackground_${r}`,
              d = t.subscribeToChanges((n) => {
                if (a in n) {
                  const s = n[a]?.fillLayers,
                    d = i.get().pageBackgroundProp,
                    l = e.pageBackground,
                    p = i.get().pageBackground,
                    u = i.get()?.nextTransitionEnabled ?? !0,
                    c = !((e, t) => {
                      if (!t || !e) return !1;
                      const n = t.mediaRef,
                        o = n && n.type,
                        i = e.mediaRef,
                        r = i && i.type,
                        s = !n && !i,
                        a = s || o === r;
                      let d = [...f];
                      if ("WixVideo" === o && a) {
                        const e = d.indexOf("color");
                        d.splice(e, 1);
                      } else s && (d = ["color"]);
                      return a && P(t, e, ["mediaRef", "imageOverlay"], d);
                    })(l, p),
                    g =
                      ((o = s),
                      !(
                        (r = d) &&
                        o &&
                        b.every((e) => y().get(r, e) === y().get(o, e))
                      ) || c);
                  i.update((e) => ({
                    ...e,
                    pageBackgroundProp: s,
                    pageBackground: l,
                  })),
                    t.update({
                      BACKGROUND_GROUP: {
                        ...(e.shouldUseViewMode && {
                          key: `BACKGROUND_GROUP_${e.viewMode}`,
                        }),
                        transitionEnabled: u && g,
                      },
                    });
                }
                var o, r;
              });
            return (
              i.update((e) => {
                const t = e?.propsUpdateListenersUnsubscribers ?? {};
                return (
                  (t[s] = d),
                  { ...(e || {}), propsUpdateListenersUnsubscribers: t }
                );
              }),
              {
                componentTypes: ["PageBackground"],
                componentWillMount() {
                  const e = i.get(),
                    t = e?.isFirstMount ?? !0;
                  i.update(() => ({ ...e, isFirstMount: t }));
                },
              }
            );
          }
        ),
        w = (e) => {
          e(s.dB).to(p),
            e(s.e$).to(l),
            e(u.$.PageDidMountHandler, u.$.PageWillUnmountHandler).to(d),
            e(c.ls).to(m),
            e(c.ls).to(k);
        },
        v = (e) => {
          e(u.$.PageDidMountHandler, u.$.PageWillUnmountHandler).to(d),
            e(c.ls).to(m),
            e(c.ls).to(k);
        },
        h = (e) => {
          e(s.e$).to(l), e(s.dB).to(p);
        };
    },
  },
]);
//# sourceMappingURL=https://static.parastorage.com/services/wix-thunderbolt/dist/group_33.f6f5fc64.chunk.min.js.map
