"use strict";
(self.webpackJsonp__wix_thunderbolt_app =
  self.webpackJsonp__wix_thunderbolt_app || []).push([
  [3671],
  {
    18644: function (e, t, n) {
      n.r(t),
        n.d(t, {
          Animations: function () {
            return kn.Qw;
          },
          EditorAnimationsSym: function () {
            return kn._H;
          },
          name: function () {
            return kn.UU;
          },
          page: function () {
            return Ow;
          },
        });
      var a = {};
      n.r(a),
        n.d(a, {
          animate: function () {
            return ea;
          },
          name: function () {
            return Kn;
          },
          properties: function () {
            return Jn;
          },
        });
      var r = {};
      n.r(r),
        n.d(r, {
          animate: function () {
            return ra;
          },
          name: function () {
            return ta;
          },
          properties: function () {
            return na;
          },
        });
      var i = {};
      n.r(i),
        n.d(i, {
          animate: function () {
            return sa;
          },
          name: function () {
            return ia;
          },
          properties: function () {
            return oa;
          },
        });
      var o = {};
      n.r(o),
        n.d(o, {
          animate: function () {
            return Ia;
          },
          name: function () {
            return Sa;
          },
          properties: function () {
            return Ma;
          },
        });
      var s = {};
      n.r(s),
        n.d(s, {
          animate: function () {
            return $a;
          },
          name: function () {
            return Fa;
          },
          properties: function () {
            return Ra;
          },
        });
      var u = {};
      n.r(u),
        n.d(u, {
          animate: function () {
            return Aa;
          },
          name: function () {
            return Ca;
          },
          properties: function () {
            return Ea;
          },
        });
      var c = {};
      n.r(c),
        n.d(c, {
          animate: function () {
            return Xa;
          },
          name: function () {
            return Ya;
          },
          properties: function () {
            return Da;
          },
        });
      var d = {};
      n.r(d),
        n.d(d, {
          animate: function () {
            return Va;
          },
          name: function () {
            return qa;
          },
          properties: function () {
            return Ha;
          },
        });
      var l = {};
      n.r(l),
        n.d(l, {
          animate: function () {
            return La;
          },
          name: function () {
            return Na;
          },
          properties: function () {
            return za;
          },
        });
      var m = {};
      n.r(m),
        n.d(m, {
          animate: function () {
            return Wa;
          },
          name: function () {
            return Ua;
          },
          properties: function () {
            return ja;
          },
        });
      var f = {};
      n.r(f),
        n.d(f, {
          animate: function () {
            return Ka;
          },
          name: function () {
            return Qa;
          },
          properties: function () {
            return Za;
          },
        });
      var p = {};
      n.r(p),
        n.d(p, {
          animate: function () {
            return tr;
          },
          name: function () {
            return Ja;
          },
          properties: function () {
            return er;
          },
        });
      var h = {};
      n.r(h),
        n.d(h, {
          animate: function () {
            return rr;
          },
          name: function () {
            return nr;
          },
          properties: function () {
            return ar;
          },
        });
      var g = {};
      n.r(g),
        n.d(g, {
          animate: function () {
            return sr;
          },
          name: function () {
            return ir;
          },
          properties: function () {
            return or;
          },
        });
      var y = {};
      n.r(y),
        n.d(y, {
          animate: function () {
            return dr;
          },
          name: function () {
            return ur;
          },
          properties: function () {
            return cr;
          },
        });
      var b = {};
      n.r(b),
        n.d(b, {
          animate: function () {
            return fr;
          },
          name: function () {
            return lr;
          },
          properties: function () {
            return mr;
          },
        });
      var v = {};
      n.r(v),
        n.d(v, {
          baseAttribute: function () {
            return a;
          },
          baseClear: function () {
            return r;
          },
          baseClip: function () {
            return i;
          },
          baseClipPath: function () {
            return o;
          },
          baseDimensions: function () {
            return s;
          },
          baseFade: function () {
            return u;
          },
          baseFilter: function () {
            return c;
          },
          baseNone: function () {
            return d;
          },
          baseObjectProperties: function () {
            return l;
          },
          basePosition: function () {
            return m;
          },
          baseRotate: function () {
            return f;
          },
          baseRotate3D: function () {
            return p;
          },
          baseScale: function () {
            return h;
          },
          baseScroll: function () {
            return g;
          },
          baseSequence: function () {
            return y;
          },
          baseSkew: function () {
            return b;
          },
        });
      var x = {};
      n.r(x),
        n.d(x, {
          animate: function () {
            return gr;
          },
          name: function () {
            return pr;
          },
          properties: function () {
            return hr;
          },
        });
      var _ = {};
      n.r(_),
        n.d(_, {
          animate: function () {
            return vr;
          },
          name: function () {
            return yr;
          },
          properties: function () {
            return br;
          },
        });
      var w = {};
      n.r(w),
        n.d(w, {
          animate: function () {
            return wr;
          },
          name: function () {
            return xr;
          },
          properties: function () {
            return _r;
          },
        });
      var O = {};
      n.r(O),
        n.d(O, {
          animate: function () {
            return Tr;
          },
          name: function () {
            return Or;
          },
          properties: function () {
            return Br;
          },
        });
      var B = {};
      n.r(B),
        n.d(B, {
          animate: function () {
            return Sr;
          },
          name: function () {
            return Pr;
          },
          properties: function () {
            return kr;
          },
        });
      var T = {};
      n.r(T),
        n.d(T, {
          animate: function () {
            return Fr;
          },
          name: function () {
            return Mr;
          },
          properties: function () {
            return Ir;
          },
        });
      var P = {};
      n.r(P),
        n.d(P, {
          animate: function () {
            return Ar;
          },
          name: function () {
            return Rr;
          },
          properties: function () {
            return $r;
          },
        });
      var k = {};
      n.r(k),
        n.d(k, {
          animate: function () {
            return qr;
          },
          name: function () {
            return Yr;
          },
          properties: function () {
            return Dr;
          },
        });
      var S = {};
      n.r(S),
        n.d(S, {
          animate: function () {
            return Lr;
          },
          name: function () {
            return Hr;
          },
          properties: function () {
            return Vr;
          },
        });
      var M = {};
      n.r(M),
        n.d(M, {
          animate: function () {
            return Qr;
          },
          name: function () {
            return Ur;
          },
          properties: function () {
            return jr;
          },
        });
      var I = {};
      n.r(I),
        n.d(I, {
          animate: function () {
            return Jr;
          },
          name: function () {
            return Zr;
          },
          properties: function () {
            return Gr;
          },
        });
      var F = {};
      n.r(F),
        n.d(F, {
          animate: function () {
            return ni;
          },
          name: function () {
            return ei;
          },
          properties: function () {
            return ti;
          },
        });
      var R = {};
      n.r(R),
        n.d(R, {
          animate: function () {
            return oi;
          },
          name: function () {
            return ai;
          },
          properties: function () {
            return ri;
          },
        });
      var $ = {};
      n.r($),
        n.d($, {
          animate: function () {
            return di;
          },
          name: function () {
            return si;
          },
          properties: function () {
            return ui;
          },
        });
      var C = {};
      n.r(C),
        n.d(C, {
          animate: function () {
            return pi;
          },
          name: function () {
            return li;
          },
          properties: function () {
            return mi;
          },
        });
      var E = {};
      n.r(E),
        n.d(E, {
          animate: function () {
            return bi;
          },
          name: function () {
            return hi;
          },
          properties: function () {
            return gi;
          },
        });
      var A = {};
      n.r(A),
        n.d(A, {
          animate: function () {
            return _i;
          },
          name: function () {
            return vi;
          },
          properties: function () {
            return xi;
          },
        });
      var Y = {};
      n.r(Y),
        n.d(Y, {
          animate: function () {
            return Ti;
          },
          name: function () {
            return wi;
          },
          properties: function () {
            return Oi;
          },
        });
      var D = {};
      n.r(D),
        n.d(D, {
          animate: function () {
            return Ii;
          },
          name: function () {
            return Pi;
          },
          properties: function () {
            return ki;
          },
        });
      var X = {};
      n.r(X),
        n.d(X, {
          animate: function () {
            return Ei;
          },
          name: function () {
            return Fi;
          },
          properties: function () {
            return Ri;
          },
        });
      var q = {};
      n.r(q),
        n.d(q, {
          animate: function () {
            return Xi;
          },
          name: function () {
            return Ai;
          },
          properties: function () {
            return Yi;
          },
        });
      var H = {};
      n.r(H),
        n.d(H, {
          animate: function () {
            return Ni;
          },
          name: function () {
            return qi;
          },
          properties: function () {
            return Hi;
          },
        });
      var V = {};
      n.r(V),
        n.d(V, {
          animate: function () {
            return Wi;
          },
          name: function () {
            return zi;
          },
          properties: function () {
            return Li;
          },
        });
      var N = {};
      n.r(N),
        n.d(N, {
          animate: function () {
            return Ki;
          },
          name: function () {
            return Qi;
          },
          properties: function () {
            return Zi;
          },
        });
      var z = {};
      n.r(z),
        n.d(z, {
          animate: function () {
            return no;
          },
          name: function () {
            return Ji;
          },
          properties: function () {
            return eo;
          },
        });
      var L = {};
      n.r(L),
        n.d(L, {
          animate: function () {
            return io;
          },
          name: function () {
            return ao;
          },
          properties: function () {
            return ro;
          },
        });
      var U = {};
      n.r(U),
        n.d(U, {
          animate: function () {
            return co;
          },
          name: function () {
            return oo;
          },
          properties: function () {
            return so;
          },
        });
      var j = {};
      n.r(j),
        n.d(j, {
          animate: function () {
            return po;
          },
          name: function () {
            return lo;
          },
          properties: function () {
            return mo;
          },
        });
      var W = {};
      n.r(W),
        n.d(W, {
          animate: function () {
            return bo;
          },
          name: function () {
            return ho;
          },
          properties: function () {
            return go;
          },
        });
      var Q = {};
      n.r(Q),
        n.d(Q, {
          animate: function () {
            return wo;
          },
          name: function () {
            return vo;
          },
          properties: function () {
            return xo;
          },
        });
      var Z = {};
      n.r(Z),
        n.d(Z, {
          animate: function () {
            return To;
          },
          name: function () {
            return Oo;
          },
          properties: function () {
            return Bo;
          },
        });
      var G = {};
      n.r(G),
        n.d(G, {
          animate: function () {
            return Mo;
          },
          name: function () {
            return Po;
          },
          properties: function () {
            return ko;
          },
        });
      var K = {};
      n.r(K),
        n.d(K, {
          animate: function () {
            return Co;
          },
          name: function () {
            return Io;
          },
          properties: function () {
            return Fo;
          },
        });
      var J = {};
      n.r(J),
        n.d(J, {
          animate: function () {
            return Xo;
          },
          name: function () {
            return Eo;
          },
          properties: function () {
            return Ao;
          },
        });
      var ee = {};
      n.r(ee),
        n.d(ee, {
          animate: function () {
            return No;
          },
          name: function () {
            return qo;
          },
          properties: function () {
            return Ho;
          },
        });
      var te = {};
      n.r(te),
        n.d(te, {
          animate: function () {
            return Uo;
          },
          name: function () {
            return zo;
          },
          properties: function () {
            return Lo;
          },
        });
      var ne = {};
      n.r(ne),
        n.d(ne, {
          animate: function () {
            return Qo;
          },
          name: function () {
            return jo;
          },
          properties: function () {
            return Wo;
          },
        });
      var ae = {};
      n.r(ae),
        n.d(ae, {
          animate: function () {
            return Ko;
          },
          name: function () {
            return Zo;
          },
          properties: function () {
            return Go;
          },
        });
      var re = {};
      n.r(re),
        n.d(re, {
          animate: function () {
            return is;
          },
          name: function () {
            return as;
          },
          properties: function () {
            return rs;
          },
        });
      var ie = {};
      n.r(ie),
        n.d(ie, {
          animate: function () {
            return us;
          },
          name: function () {
            return os;
          },
          properties: function () {
            return ss;
          },
        });
      var oe = {};
      n.r(oe),
        n.d(oe, {
          animate: function () {
            return ls;
          },
          name: function () {
            return cs;
          },
          properties: function () {
            return ds;
          },
        });
      var se = {};
      n.r(se),
        n.d(se, {
          animate: function () {
            return ps;
          },
          name: function () {
            return ms;
          },
          properties: function () {
            return fs;
          },
        });
      var ue = {};
      n.r(ue),
        n.d(ue, {
          animate: function () {
            return ys;
          },
          name: function () {
            return hs;
          },
          properties: function () {
            return gs;
          },
        });
      var ce = {};
      n.r(ce),
        n.d(ce, {
          animate: function () {
            return xs;
          },
          name: function () {
            return bs;
          },
          properties: function () {
            return vs;
          },
        });
      var de = {};
      n.r(de),
        n.d(de, {
          animate: function () {
            return Os;
          },
          name: function () {
            return _s;
          },
          properties: function () {
            return ws;
          },
        });
      var le = {};
      n.r(le),
        n.d(le, {
          animate: function () {
            return Ps;
          },
          name: function () {
            return Bs;
          },
          properties: function () {
            return Ts;
          },
        });
      var me = {};
      n.r(me),
        n.d(me, {
          animate: function () {
            return Fs;
          },
          name: function () {
            return Ss;
          },
          properties: function () {
            return Ms;
          },
        });
      var fe = {};
      n.r(fe),
        n.d(fe, {
          animate: function () {
            return Cs;
          },
          name: function () {
            return Rs;
          },
          properties: function () {
            return $s;
          },
        });
      var pe = {};
      n.r(pe),
        n.d(pe, {
          animate: function () {
            return Ys;
          },
          name: function () {
            return Es;
          },
          properties: function () {
            return As;
          },
        });
      var he = {};
      n.r(he),
        n.d(he, {
          animate: function () {
            return qs;
          },
          name: function () {
            return Ds;
          },
          properties: function () {
            return Xs;
          },
        });
      var ge = {};
      n.r(ge),
        n.d(ge, {
          animate: function () {
            return Ns;
          },
          name: function () {
            return Hs;
          },
          properties: function () {
            return Vs;
          },
        });
      var ye = {};
      n.r(ye),
        n.d(ye, {
          animate: function () {
            return Us;
          },
          name: function () {
            return zs;
          },
          properties: function () {
            return Ls;
          },
        });
      var be = {};
      n.r(be),
        n.d(be, {
          animate: function () {
            return Qs;
          },
          name: function () {
            return js;
          },
          properties: function () {
            return Ws;
          },
        });
      var ve = {};
      n.r(ve),
        n.d(ve, {
          animate: function () {
            return Ks;
          },
          name: function () {
            return Zs;
          },
          properties: function () {
            return Gs;
          },
        });
      var xe = {};
      n.r(xe),
        n.d(xe, {
          animate: function () {
            return tu;
          },
          name: function () {
            return Js;
          },
          properties: function () {
            return eu;
          },
        });
      var _e = {};
      n.r(_e),
        n.d(_e, {
          animate: function () {
            return ru;
          },
          name: function () {
            return nu;
          },
          properties: function () {
            return au;
          },
        });
      var we = {};
      n.r(we),
        n.d(we, {
          animate: function () {
            return uu;
          },
          name: function () {
            return iu;
          },
          properties: function () {
            return su;
          },
        });
      var Oe = {};
      n.r(Oe),
        n.d(Oe, {
          animate: function () {
            return mu;
          },
          name: function () {
            return cu;
          },
          properties: function () {
            return lu;
          },
        });
      var Be = {};
      n.r(Be),
        n.d(Be, {
          animate: function () {
            return hu;
          },
          name: function () {
            return fu;
          },
          properties: function () {
            return pu;
          },
        });
      var Te = {};
      n.r(Te),
        n.d(Te, {
          animate: function () {
            return vu;
          },
          name: function () {
            return gu;
          },
          properties: function () {
            return bu;
          },
        });
      var Pe = {};
      n.r(Pe),
        n.d(Pe, {
          animate: function () {
            return wu;
          },
          name: function () {
            return xu;
          },
          properties: function () {
            return _u;
          },
        });
      var ke = {};
      n.r(ke),
        n.d(ke, {
          animate: function () {
            return Pu;
          },
          name: function () {
            return Ou;
          },
          properties: function () {
            return Tu;
          },
        });
      var Se = {};
      n.r(Se),
        n.d(Se, {
          animate: function () {
            return Mu;
          },
          name: function () {
            return ku;
          },
          properties: function () {
            return Su;
          },
        });
      var Me = {};
      n.r(Me),
        n.d(Me, {
          animate: function () {
            return Ru;
          },
          name: function () {
            return Iu;
          },
          properties: function () {
            return Fu;
          },
        });
      var Ie = {};
      n.r(Ie),
        n.d(Ie, {
          animate: function () {
            return Au;
          },
          name: function () {
            return $u;
          },
          properties: function () {
            return Eu;
          },
        });
      var Fe = {};
      n.r(Fe),
        n.d(Fe, {
          animate: function () {
            return qu;
          },
          name: function () {
            return Du;
          },
          properties: function () {
            return Xu;
          },
        });
      var Re = {};
      n.r(Re),
        n.d(Re, {
          animate: function () {
            return Nu;
          },
          name: function () {
            return Hu;
          },
          properties: function () {
            return Vu;
          },
        });
      var $e = {};
      n.r($e),
        n.d($e, {
          animate: function () {
            return Uu;
          },
          name: function () {
            return zu;
          },
          properties: function () {
            return Lu;
          },
        });
      var Ce = {};
      n.r(Ce),
        n.d(Ce, {
          animate: function () {
            return Qu;
          },
          name: function () {
            return ju;
          },
          properties: function () {
            return Wu;
          },
        });
      var Ee = {};
      n.r(Ee),
        n.d(Ee, {
          animate: function () {
            return tc;
          },
          name: function () {
            return Ju;
          },
          properties: function () {
            return ec;
          },
        });
      var Ae = {};
      n.r(Ae),
        n.d(Ae, {
          animate: function () {
            return rc;
          },
          name: function () {
            return nc;
          },
          properties: function () {
            return ac;
          },
        });
      var Ye = {};
      n.r(Ye),
        n.d(Ye, {
          animate: function () {
            return sc;
          },
          name: function () {
            return ic;
          },
          properties: function () {
            return oc;
          },
        });
      var De = {};
      n.r(De),
        n.d(De, {
          animate: function () {
            return dc;
          },
          name: function () {
            return uc;
          },
          properties: function () {
            return cc;
          },
        });
      var Xe = {};
      n.r(Xe),
        n.d(Xe, {
          animate: function () {
            return fc;
          },
          name: function () {
            return lc;
          },
          properties: function () {
            return mc;
          },
        });
      var qe = {};
      n.r(qe),
        n.d(qe, {
          animate: function () {
            return gc;
          },
          name: function () {
            return pc;
          },
          properties: function () {
            return hc;
          },
        });
      var He = {};
      n.r(He),
        n.d(He, {
          animate: function () {
            return xc;
          },
          name: function () {
            return yc;
          },
          properties: function () {
            return bc;
          },
        });
      var Ve = {};
      n.r(Ve),
        n.d(Ve, {
          animate: function () {
            return Bc;
          },
          name: function () {
            return _c;
          },
          properties: function () {
            return Oc;
          },
        });
      var Ne = {};
      n.r(Ne),
        n.d(Ne, {
          HeaderFadeOut: function () {
            return Xe;
          },
          HeaderFadeOutCustom: function () {
            return qe;
          },
          HeaderMoveCustom: function () {
            return Ve;
          },
          ModesMotionNoDimensions: function () {
            return te;
          },
          ModesMotionNoScale: function () {
            return ne;
          },
          ModesMotionScale: function () {
            return ae;
          },
          arcIn: function () {
            return k;
          },
          arcOut: function () {
            return H;
          },
          backgroundBlurIn: function () {
            return $e;
          },
          backgroundFadeIn: function () {
            return Ce;
          },
          backgroundParallax: function () {
            return Ee;
          },
          backgroundParallaxZoom: function () {
            return fe;
          },
          backgroundReveal: function () {
            return Ae;
          },
          backgroundZoom: function () {
            return Ye;
          },
          baseBgClipPath: function () {
            return re;
          },
          baseBgFade: function () {
            return ie;
          },
          baseBgParallaxY: function () {
            return oe;
          },
          baseBgPositionX: function () {
            return se;
          },
          baseBgPositionY: function () {
            return ue;
          },
          baseBgRotate: function () {
            return ce;
          },
          baseBgScale: function () {
            return de;
          },
          baseBgSkew: function () {
            return le;
          },
          baseBgZoom: function () {
            return me;
          },
          bgCloseUp: function () {
            return ye;
          },
          bgExpand: function () {
            return be;
          },
          bgFadeBack: function () {
            return ve;
          },
          bgFadeIn: function () {
            return pe;
          },
          bgFadeOut: function () {
            return xe;
          },
          bgFake3D: function () {
            return _e;
          },
          bgPanLeft: function () {
            return we;
          },
          bgPanRight: function () {
            return Oe;
          },
          bgParallax: function () {
            return he;
          },
          bgPullBack: function () {
            return Be;
          },
          bgReveal: function () {
            return ge;
          },
          bgRotate: function () {
            return Te;
          },
          bgShrink: function () {
            return Pe;
          },
          bgSkew: function () {
            return ke;
          },
          bgUnwind: function () {
            return Se;
          },
          bgZoomIn: function () {
            return Me;
          },
          bgZoomOut: function () {
            return Ie;
          },
          bounceIn: function () {
            return S;
          },
          bounceOut: function () {
            return V;
          },
          clearSequence: function () {
            return x;
          },
          collapseOut: function () {
            return N;
          },
          conceal: function () {
            return z;
          },
          dropIn: function () {
            return M;
          },
          expandIn: function () {
            return I;
          },
          fade: function () {
            return _;
          },
          fadeIn: function () {
            return F;
          },
          fadeOut: function () {
            return L;
          },
          flipIn: function () {
            return R;
          },
          flipOut: function () {
            return U;
          },
          floatIn: function () {
            return $;
          },
          floatOut: function () {
            return j;
          },
          flyIn: function () {
            return C;
          },
          flyOut: function () {
            return W;
          },
          foldIn: function () {
            return E;
          },
          foldOut: function () {
            return Q;
          },
          glideIn: function () {
            return A;
          },
          glideOut: function () {
            return Z;
          },
          headerHideToTop: function () {
            return He;
          },
          imageParallax: function () {
            return Fe;
          },
          imageReveal: function () {
            return Re;
          },
          popOut: function () {
            return G;
          },
          position: function () {
            return w;
          },
          reveal: function () {
            return Y;
          },
          rotate: function () {
            return O;
          },
          scale: function () {
            return B;
          },
          sequence: function () {
            return T;
          },
          siteBackgroundParallax: function () {
            return De;
          },
          slideIn: function () {
            return D;
          },
          slideOut: function () {
            return K;
          },
          spinIn: function () {
            return X;
          },
          spinOut: function () {
            return J;
          },
          timelineAnimation: function () {
            return P;
          },
          turnIn: function () {
            return q;
          },
          turnOut: function () {
            return ee;
          },
        });
      var ze = {};
      n.r(ze),
        n.d(ze, {
          animate: function () {
            return Sc;
          },
          name: function () {
            return Tc;
          },
          properties: function () {
            return Pc;
          },
        });
      var Le = {};
      n.r(Le),
        n.d(Le, {
          animate: function () {
            return Cc;
          },
          name: function () {
            return Mc;
          },
          properties: function () {
            return Ic;
          },
        });
      var Ue = {};
      n.r(Ue),
        n.d(Ue, {
          animate: function () {
            return Dc;
          },
          name: function () {
            return Ec;
          },
          properties: function () {
            return Ac;
          },
        });
      var je = {};
      n.r(je),
        n.d(je, {
          animate: function () {
            return Vc;
          },
          name: function () {
            return Xc;
          },
          properties: function () {
            return qc;
          },
        });
      var We = {};
      n.r(We),
        n.d(We, {
          animate: function () {
            return Uc;
          },
          name: function () {
            return Nc;
          },
          properties: function () {
            return zc;
          },
        });
      var Qe = {};
      n.r(Qe),
        n.d(Qe, {
          animate: function () {
            return Zc;
          },
          name: function () {
            return jc;
          },
          properties: function () {
            return Wc;
          },
        });
      var Ze = {};
      n.r(Ze),
        n.d(Ze, {
          animate: function () {
            return Jc;
          },
          name: function () {
            return Gc;
          },
          properties: function () {
            return Kc;
          },
        });
      var Ge = {};
      n.r(Ge),
        n.d(Ge, {
          animate: function () {
            return ad;
          },
          name: function () {
            return ed;
          },
          properties: function () {
            return td;
          },
        });
      var Ke = {};
      n.r(Ke),
        n.d(Ke, {
          animate: function () {
            return sd;
          },
          name: function () {
            return rd;
          },
          properties: function () {
            return id;
          },
        });
      var Je = {};
      n.r(Je),
        n.d(Je, {
          animate: function () {
            return ld;
          },
          name: function () {
            return ud;
          },
          properties: function () {
            return cd;
          },
        });
      var et = {};
      n.r(et),
        n.d(et, {
          animate: function () {
            return hd;
          },
          name: function () {
            return md;
          },
          properties: function () {
            return fd;
          },
        });
      var tt = {};
      n.r(tt),
        n.d(tt, {
          animate: function () {
            return bd;
          },
          name: function () {
            return gd;
          },
          properties: function () {
            return yd;
          },
        });
      var nt = {};
      n.r(nt),
        n.d(nt, {
          animate: function () {
            return wd;
          },
          name: function () {
            return vd;
          },
          properties: function () {
            return xd;
          },
        });
      var at = {};
      n.r(at),
        n.d(at, {
          animate: function () {
            return kd;
          },
          name: function () {
            return Od;
          },
          properties: function () {
            return Bd;
          },
        });
      var rt = {};
      n.r(rt),
        n.d(rt, {
          animate: function () {
            return Rd;
          },
          name: function () {
            return Sd;
          },
          properties: function () {
            return Md;
          },
        });
      var it = {};
      n.r(it),
        n.d(it, {
          animate: function () {
            return Ad;
          },
          name: function () {
            return $d;
          },
          properties: function () {
            return Cd;
          },
        });
      var ot = {};
      n.r(ot),
        n.d(ot, {
          arcInMobile: function () {
            return ze;
          },
          bounceInMobile: function () {
            return Le;
          },
          cornerInMobile: function () {
            return Ue;
          },
          dropClipInMobile: function () {
            return je;
          },
          dropInMobile: function () {
            return We;
          },
          expandInMobile: function () {
            return Qe;
          },
          fadeInMobile: function () {
            return Ze;
          },
          flipInMobile: function () {
            return Ge;
          },
          floatInMobile: function () {
            return Ke;
          },
          flyInMobile: function () {
            return Je;
          },
          foldInMobile: function () {
            return et;
          },
          glideInMobile: function () {
            return tt;
          },
          revealMobile: function () {
            return nt;
          },
          slideInMobile: function () {
            return at;
          },
          spinInMobile: function () {
            return rt;
          },
          turnInMobile: function () {
            return it;
          },
        });
      var st = {};
      n.r(st),
        n.d(st, {
          animate: function () {
            return Hd;
          },
          name: function () {
            return Yd;
          },
          properties: function () {
            return Dd;
          },
        });
      var ut = {};
      n.r(ut),
        n.d(ut, {
          animate: function () {
            return Zd;
          },
          name: function () {
            return Vd;
          },
          properties: function () {
            return Nd;
          },
        });
      var ct = {};
      n.r(ct),
        n.d(ct, {
          animate: function () {
            return el;
          },
          name: function () {
            return Gd;
          },
          properties: function () {
            return Kd;
          },
        });
      var dt = {};
      n.r(dt),
        n.d(dt, {
          animate: function () {
            return rl;
          },
          name: function () {
            return tl;
          },
          properties: function () {
            return nl;
          },
        });
      var lt = {};
      n.r(lt),
        n.d(lt, {
          animate: function () {
            return ul;
          },
          name: function () {
            return il;
          },
          properties: function () {
            return ol;
          },
        });
      var mt = {};
      n.r(mt),
        n.d(mt, {
          animate: function () {
            return ml;
          },
          name: function () {
            return cl;
          },
          properties: function () {
            return dl;
          },
        });
      var ft = {};
      n.r(ft),
        n.d(ft, {
          animate: function () {
            return yl;
          },
          name: function () {
            return fl;
          },
          properties: function () {
            return pl;
          },
        });
      var pt = {};
      n.r(pt),
        n.d(pt, {
          animate: function () {
            return xl;
          },
          name: function () {
            return bl;
          },
          properties: function () {
            return vl;
          },
        });
      var ht = {};
      n.r(ht),
        n.d(ht, {
          animate: function () {
            return Bl;
          },
          name: function () {
            return _l;
          },
          properties: function () {
            return wl;
          },
        });
      var gt = {};
      n.r(gt),
        n.d(gt, {
          animate: function () {
            return Ml;
          },
          name: function () {
            return Tl;
          },
          properties: function () {
            return Pl;
          },
        });
      var yt = {};
      n.r(yt),
        n.d(yt, {
          animate: function () {
            return Cl;
          },
          name: function () {
            return Il;
          },
          properties: function () {
            return Fl;
          },
        });
      var bt = {};
      n.r(bt),
        n.d(bt, {
          animate: function () {
            return Dl;
          },
          name: function () {
            return El;
          },
          properties: function () {
            return Al;
          },
        });
      var vt = {};
      n.r(vt),
        n.d(vt, {
          animate: function () {
            return Vl;
          },
          name: function () {
            return Xl;
          },
          properties: function () {
            return ql;
          },
        });
      var xt = {};
      n.r(xt),
        n.d(xt, {
          animate: function () {
            return Ul;
          },
          name: function () {
            return Nl;
          },
          properties: function () {
            return zl;
          },
        });
      var _t = {};
      n.r(_t),
        n.d(_t, {
          animate: function () {
            return Kl;
          },
          name: function () {
            return jl;
          },
          properties: function () {
            return Wl;
          },
        });
      var wt = {};
      n.r(wt),
        n.d(wt, {
          animate: function () {
            return nm;
          },
          name: function () {
            return Jl;
          },
          properties: function () {
            return em;
          },
        });
      var Ot = {};
      n.r(Ot),
        n.d(Ot, {
          animate: function () {
            return om;
          },
          name: function () {
            return am;
          },
          properties: function () {
            return rm;
          },
        });
      var Bt = {};
      n.r(Bt),
        n.d(Bt, {
          animate: function () {
            return lm;
          },
          name: function () {
            return sm;
          },
          properties: function () {
            return um;
          },
        });
      var Tt = {};
      n.r(Tt),
        n.d(Tt, {
          animate: function () {
            return gm;
          },
          name: function () {
            return mm;
          },
          properties: function () {
            return fm;
          },
        });
      var Pt = {};
      n.r(Pt),
        n.d(Pt, {
          animate: function () {
            return xm;
          },
          name: function () {
            return ym;
          },
          properties: function () {
            return bm;
          },
        });
      var kt = {};
      n.r(kt),
        n.d(kt, {
          animate: function () {
            return Tm;
          },
          name: function () {
            return _m;
          },
          properties: function () {
            return wm;
          },
        });
      var St = {};
      n.r(St),
        n.d(St, {
          animate: function () {
            return Mm;
          },
          name: function () {
            return Pm;
          },
          properties: function () {
            return km;
          },
        });
      var Mt = {};
      n.r(Mt),
        n.d(Mt, {
          animate: function () {
            return Cm;
          },
          name: function () {
            return Im;
          },
          properties: function () {
            return Fm;
          },
        });
      var It = {};
      n.r(It),
        n.d(It, {
          animate: function () {
            return Xm;
          },
          name: function () {
            return Em;
          },
          properties: function () {
            return Am;
          },
        });
      var Ft = {};
      n.r(Ft),
        n.d(Ft, {
          animate: function () {
            return Nm;
          },
          name: function () {
            return qm;
          },
          properties: function () {
            return Hm;
          },
        });
      var Rt = {};
      n.r(Rt),
        n.d(Rt, {
          animate: function () {
            return Gm;
          },
          name: function () {
            return zm;
          },
          properties: function () {
            return Lm;
          },
        });
      var $t = {};
      n.r($t),
        n.d($t, {
          animate: function () {
            return ef;
          },
          name: function () {
            return Km;
          },
          properties: function () {
            return Jm;
          },
        });
      var Ct = {};
      n.r(Ct),
        n.d(Ct, {
          animate: function () {
            return of;
          },
          name: function () {
            return tf;
          },
          properties: function () {
            return nf;
          },
        });
      var Et = {};
      n.r(Et),
        n.d(Et, {
          animate: function () {
            return mf;
          },
          name: function () {
            return sf;
          },
          properties: function () {
            return uf;
          },
        });
      var At = {};
      n.r(At),
        n.d(At, {
          animate: function () {
            return yf;
          },
          name: function () {
            return ff;
          },
          properties: function () {
            return pf;
          },
        });
      var Yt = {};
      n.r(Yt),
        n.d(Yt, {
          animate: function () {
            return Of;
          },
          name: function () {
            return bf;
          },
          properties: function () {
            return vf;
          },
        });
      var Dt = {};
      n.r(Dt),
        n.d(Dt, {
          animate: function () {
            return Sf;
          },
          name: function () {
            return Bf;
          },
          properties: function () {
            return Tf;
          },
        });
      var Xt = {};
      n.r(Xt),
        n.d(Xt, {
          animate: function () {
            return $f;
          },
          name: function () {
            return Mf;
          },
          properties: function () {
            return If;
          },
        });
      var qt = {};
      n.r(qt),
        n.d(qt, {
          animate: function () {
            return Df;
          },
          name: function () {
            return Cf;
          },
          properties: function () {
            return Ef;
          },
        });
      var Ht = {};
      n.r(Ht),
        n.d(Ht, {
          animate: function () {
            return Vf;
          },
          name: function () {
            return Xf;
          },
          properties: function () {
            return qf;
          },
        });
      var Vt = {};
      n.r(Vt),
        n.d(Vt, {
          animate: function () {
            return jf;
          },
          name: function () {
            return Nf;
          },
          properties: function () {
            return zf;
          },
        });
      var Nt = {};
      n.r(Nt),
        n.d(Nt, {
          animate: function () {
            return Jf;
          },
          name: function () {
            return Wf;
          },
          properties: function () {
            return Qf;
          },
        });
      var zt = {};
      n.r(zt),
        n.d(zt, {
          animate: function () {
            return ip;
          },
          name: function () {
            return ep;
          },
          properties: function () {
            return tp;
          },
        });
      var Lt = {};
      n.r(Lt),
        n.d(Lt, {
          animate: function () {
            return dp;
          },
          name: function () {
            return op;
          },
          properties: function () {
            return sp;
          },
        });
      var Ut = {};
      n.r(Ut),
        n.d(Ut, {
          animate: function () {
            return yp;
          },
          name: function () {
            return lp;
          },
          properties: function () {
            return mp;
          },
        });
      var jt = {};
      n.r(jt),
        n.d(jt, {
          animate: function () {
            return Op;
          },
          api: function () {
            return Bp;
          },
          name: function () {
            return bp;
          },
          properties: function () {
            return vp;
          },
        });
      var Wt = {};
      n.r(Wt),
        n.d(Wt, {
          animate: function () {
            return Mp;
          },
          api: function () {
            return Ip;
          },
          name: function () {
            return Tp;
          },
          properties: function () {
            return Pp;
          },
        });
      var Qt = {};
      n.r(Qt),
        n.d(Qt, {
          animate: function () {
            return Ap;
          },
          name: function () {
            return Fp;
          },
          properties: function () {
            return Rp;
          },
        });
      var Zt = {};
      n.r(Zt),
        n.d(Zt, {
          animate: function () {
            return Hp;
          },
          api: function () {
            return Np;
          },
          name: function () {
            return Yp;
          },
          properties: function () {
            return Dp;
          },
        });
      var Gt = {};
      n.r(Gt),
        n.d(Gt, {
          animate: function () {
            return Zp;
          },
          name: function () {
            return zp;
          },
          properties: function () {
            return Lp;
          },
        });
      var Kt = {};
      n.r(Kt),
        n.d(Kt, {
          animate: function () {
            return ah;
          },
          name: function () {
            return Gp;
          },
          properties: function () {
            return Kp;
          },
        });
      var Jt = {};
      n.r(Jt),
        n.d(Jt, {
          animate: function () {
            return ch;
          },
          api: function () {
            return dh;
          },
          name: function () {
            return rh;
          },
          properties: function () {
            return ih;
          },
        });
      var en = {};
      n.r(en),
        n.d(en, {
          animate: function () {
            return yh;
          },
          name: function () {
            return lh;
          },
          properties: function () {
            return mh;
          },
        });
      var tn = {};
      n.r(tn),
        n.d(tn, {
          animate: function () {
            return Bh;
          },
          name: function () {
            return bh;
          },
          properties: function () {
            return vh;
          },
        });
      var nn = {};
      n.r(nn),
        n.d(nn, {
          animate: function () {
            return Fh;
          },
          api: function () {
            return Rh;
          },
          name: function () {
            return Th;
          },
          properties: function () {
            return Ph;
          },
        });
      var an = {};
      n.r(an),
        n.d(an, {
          animate: function () {
            return Xh;
          },
          name: function () {
            return $h;
          },
          properties: function () {
            return Ch;
          },
        });
      var rn = {};
      n.r(rn),
        n.d(rn, {
          animate: function () {
            return Lh;
          },
          name: function () {
            return qh;
          },
          properties: function () {
            return Hh;
          },
        });
      var on = {};
      n.r(on),
        n.d(on, {
          animate: function () {
            return og;
          },
          api: function () {
            return sg;
          },
          name: function () {
            return Uh;
          },
          properties: function () {
            return jh;
          },
        });
      var sn = {};
      n.r(sn),
        n.d(sn, {
          animate: function () {
            return hg;
          },
          name: function () {
            return ug;
          },
          properties: function () {
            return cg;
          },
        });
      var un = {};
      n.r(un),
        n.d(un, {
          animate: function () {
            return bg;
          },
          name: function () {
            return gg;
          },
          properties: function () {
            return yg;
          },
        });
      var cn = {};
      n.r(cn),
        n.d(cn, {
          animate: function () {
            return wg;
          },
          name: function () {
            return xg;
          },
          properties: function () {
            return _g;
          },
        });
      var dn = {};
      n.r(dn),
        n.d(dn, {
          animate: function () {
            return Tg;
          },
          name: function () {
            return Og;
          },
          properties: function () {
            return Bg;
          },
        });
      var ln = {};
      n.r(ln),
        n.d(ln, {
          animate: function () {
            return Sg;
          },
          name: function () {
            return Pg;
          },
          properties: function () {
            return kg;
          },
        });
      var mn = {};
      n.r(mn),
        n.d(mn, {
          animate: function () {
            return $g;
          },
          name: function () {
            return Fg;
          },
          properties: function () {
            return Rg;
          },
        });
      var fn = {};
      n.r(fn),
        n.d(fn, {
          animate: function () {
            return Ag;
          },
          name: function () {
            return Cg;
          },
          properties: function () {
            return Eg;
          },
        });
      var pn = {};
      n.r(pn),
        n.d(pn, {
          animate: function () {
            return Xg;
          },
          name: function () {
            return Yg;
          },
          properties: function () {
            return Dg;
          },
        });
      var hn = {};
      n.r(hn),
        n.d(hn, {
          animate: function () {
            return Vg;
          },
          name: function () {
            return qg;
          },
          properties: function () {
            return Hg;
          },
        });
      var gn = {};
      n.r(gn),
        n.d(gn, {
          animate: function () {
            return Lg;
          },
          name: function () {
            return Ng;
          },
          properties: function () {
            return zg;
          },
        });
      var yn = {};
      n.r(yn),
        n.d(yn, {
          animate: function () {
            return Wg;
          },
          name: function () {
            return Ug;
          },
          properties: function () {
            return jg;
          },
        });
      var bn = {};
      n.r(bn),
        n.d(bn, {
          animate: function () {
            return Gg;
          },
          name: function () {
            return Qg;
          },
          properties: function () {
            return Zg;
          },
        });
      var vn = {};
      n.r(vn),
        n.d(vn, {
          airyMouseMotion: function () {
            return gn;
          },
          arcInMotion: function () {
            return st;
          },
          arcScrollMotion: function () {
            return Nt;
          },
          blobMouseMotion: function () {
            return ln;
          },
          blurInMotion: function () {
            return ct;
          },
          blurMouseMotion: function () {
            return hn;
          },
          blurScrollMotion: function () {
            return zt;
          },
          bounceInMotion: function () {
            return ut;
          },
          bounceMotion: function () {
            return Mt;
          },
          bounceMouseMotion: function () {
            return bn;
          },
          breatheMotion: function () {
            return It;
          },
          circleInMotion: function () {
            return dt;
          },
          crossMotion: function () {
            return Ft;
          },
          curveInMotion: function () {
            return lt;
          },
          dropInMotion: function () {
            return mt;
          },
          dvdMotion: function () {
            return Rt;
          },
          expandInMotion: function () {
            return ft;
          },
          fadeInMotion: function () {
            return pt;
          },
          fadeScrollMotion: function () {
            return Lt;
          },
          flashMotion: function () {
            return $t;
          },
          flipInMotion: function () {
            return gt;
          },
          flipMotion: function () {
            return Ct;
          },
          flipScrollMotion: function () {
            return Ut;
          },
          floatInMotion: function () {
            return ht;
          },
          foldInMotion: function () {
            return yt;
          },
          foldMotion: function () {
            return Et;
          },
          glideInMotion: function () {
            return bt;
          },
          glitchInMotion: function () {
            return vt;
          },
          growInMotion: function () {
            return xt;
          },
          growScrollMotion: function () {
            return jt;
          },
          jelloMotion: function () {
            return At;
          },
          moveScrollMotion: function () {
            return Wt;
          },
          panScrollMotion: function () {
            return Qt;
          },
          parallaxScrollMotion: function () {
            return Zt;
          },
          pokeMotion: function () {
            return Yt;
          },
          pulseMotion: function () {
            return Dt;
          },
          punchInMotion: function () {
            return _t;
          },
          revealInMotion: function () {
            return wt;
          },
          revealScrollMotion: function () {
            return Gt;
          },
          rubberMotion: function () {
            return Xt;
          },
          scaleMouseMotion: function () {
            return fn;
          },
          shapeInMotion: function () {
            return Ot;
          },
          shapeScrollMotion: function () {
            return Kt;
          },
          shrinkScrollMotion: function () {
            return Jt;
          },
          skewMouseMotion: function () {
            return mn;
          },
          skewPanScrollMotion: function () {
            return en;
          },
          slideInMotion: function () {
            return Bt;
          },
          slideScrollMotion: function () {
            return tn;
          },
          spin3dScrollMotion: function () {
            return nn;
          },
          spinInMotion: function () {
            return Tt;
          },
          spinMotion: function () {
            return qt;
          },
          spinMouseMotion: function () {
            return pn;
          },
          spinScrollMotion: function () {
            return an;
          },
          stretchScrollMotion: function () {
            return rn;
          },
          swingMotion: function () {
            return Ht;
          },
          swivelMouseMotion: function () {
            return cn;
          },
          tilt3DMouseMotion: function () {
            return un;
          },
          tiltInMotion: function () {
            return Pt;
          },
          tiltScrollMotion: function () {
            return on;
          },
          track3DMouseMotion: function () {
            return yn;
          },
          trackMouseMotion: function () {
            return dn;
          },
          turnInMotion: function () {
            return kt;
          },
          turnScrollMotion: function () {
            return sn;
          },
          wiggleMotion: function () {
            return Vt;
          },
          winkInMotion: function () {
            return St;
          },
        });
      var xn = {};
      n.r(xn),
        n.d(xn, {
          name: function () {
            return Kg;
          },
          properties: function () {
            return Jg;
          },
          transition: function () {
            return ey;
          },
        });
      var _n = {};
      n.r(_n),
        n.d(_n, {
          name: function () {
            return ty;
          },
          properties: function () {
            return ny;
          },
          transition: function () {
            return ay;
          },
        });
      var wn = {};
      n.r(wn),
        n.d(wn, {
          name: function () {
            return ry;
          },
          properties: function () {
            return iy;
          },
          transition: function () {
            return oy;
          },
        });
      var On = {};
      n.r(On),
        n.d(On, {
          name: function () {
            return sy;
          },
          properties: function () {
            return uy;
          },
          transition: function () {
            return cy;
          },
        });
      var Bn = {};
      n.r(Bn),
        n.d(Bn, {
          name: function () {
            return dy;
          },
          properties: function () {
            return ly;
          },
          transition: function () {
            return my;
          },
        });
      var Tn = {};
      n.r(Tn),
        n.d(Tn, {
          name: function () {
            return fy;
          },
          properties: function () {
            return py;
          },
          transition: function () {
            return hy;
          },
        });
      var Pn = {};
      n.r(Pn),
        n.d(Pn, {
          crossFade: function () {
            return xn;
          },
          noTransition: function () {
            return _n;
          },
          outIn: function () {
            return wn;
          },
          shrink: function () {
            return On;
          },
          slideHorizontal: function () {
            return Bn;
          },
          slideVertical: function () {
            return Tn;
          },
        });
      var kn = n(83407),
        Sn = n(16537),
        Mn = n(32166),
        In = n(20590),
        Fn = n(77748),
        Rn = n(77212),
        $n = n(45468);
      const Cn = (0, Fn.Og)(
        [(0, Fn.KT)(In.wk, kn.UU), Mn.CB, kn.$o],
        (e, t, n) => {
          const a = e.get()?.managers,
            { promise: r, resolver: i } = (0, Rn.Q)();
          return (
            a || e.update(() => ({ managers: r })),
            {
              name: "animationsInit",
              pageWillMount() {
                if (!a) {
                  const e = Promise.resolve().then(() =>
                    (0, $n.a)(() => ({
                      animatorManager: n(t),
                      effectManager: n("motion"),
                    }))
                  );
                  i(e);
                }
              },
              getInstance() {
                return e.get().managers.then(({ animatorManager: e }) => e);
              },
              getEffectsInstance() {
                return e.get().managers.then(({ effectManager: e }) => e);
              },
            }
          );
        }
      );
      var En = n(87711);
      function An(e) {
        const t = window.getComputedStyle(e);
        return {
          top: parseFloat(t.getPropertyValue("border-top-width")),
          left: parseFloat(t.getPropertyValue("border-left-width")),
        };
      }
      const Yn = (e) =>
          "visible" === window.getComputedStyle(e).getPropertyValue("overflow"),
        Dn = (e, t) =>
          Array.from(e.children || []).filter(
            (e) => !t || t.includes(e.tagName.toLowerCase())
          );
      function Xn(e, t) {
        let n = e.offsetTop,
          a = e.offsetLeft;
        const r = e.offsetWidth,
          i = e.offsetHeight;
        for (; e.offsetParent; ) {
          const r = An((e = e.offsetParent));
          if (((n += r.top), (a += r.left), t && e === t)) break;
          (n += e.offsetTop), (a += e.offsetLeft);
        }
        return {
          top: n,
          left: a,
          width: r,
          height: i,
          bottom: n + i,
          right: a + r,
        };
      }
      function qn(e, t, n = window) {
        const a = Xn(e, t);
        if (n) {
          const e = n.scrollY || n.scrollTop || 0,
            t = n.scrollX || n.scrollLeft || 0;
          (a.top -= e), (a.bottom -= e), (a.left -= t), (a.right -= t);
        }
        return a;
      }
      function Hn(e, t, n = ["div", "section"], a = Xn(e, t)) {
        return (
          Dn(e, n).forEach((e) => {
            const r = Xn(e, t);
            r.width > 0 &&
              r.height > 0 &&
              (r.left < a.left && (a.left = r.left),
              r.right > a.right && (a.right = r.right),
              r.top < a.top && (a.top = r.top),
              r.bottom > a.bottom && (a.bottom = r.bottom)),
              Yn(e) && Hn(e, t, n, a);
          }),
          (a.width = a.right - a.left),
          (a.height = a.bottom - a.top),
          a
        );
      }
      function Vn(e, t, n, a = window) {
        const r = Hn(e, t, n);
        if (a) {
          const e = a.scrollY || a.scrollTop || 0,
            t = a.scrollX || a.scrollLeft || 0;
          (r.top -= e), (r.bottom -= e), (r.left -= t), (r.right -= t);
        }
        return r;
      }
      const Nn = function (e) {
          return (
            void 0 === e && (e = []),
            null !== (t = e) &&
            Symbol.iterator in Object(t) &&
            "string" != typeof e
              ? Array.from(e)
              : null === e
              ? []
              : [e]
          );
          var t;
        },
        zn = function () {
          return Array.from(new Set([].concat(...arguments)));
        };
      class Ln {
        constructor(e, t = {}) {
          (this.timeline = e.timeline({ ...t }, [])),
            (this.add = this.add.bind(this)),
            (this.get = this.get.bind(this)),
            (this.event = this.event.bind(this)),
            (this.play = this.play.bind(this)),
            (this.reverse = this.reverse.bind(this)),
            (this.pause = this.pause.bind(this)),
            (this.seek = this.seek.bind(this)),
            (this.clear = this.clear.bind(this));
        }
        add(e, t = "+=0") {
          return this.timeline.add(e, t), this;
        }
        get() {
          return this.timeline;
        }
        event(e, t, ...n) {
          return this.timeline.eventCallback(e, t, ...n), this;
        }
        play() {
          return this.timeline.play(), this;
        }
        reverse() {
          return this.timeline.reverse(), this;
        }
        pause() {
          return this.timeline.pause(), this;
        }
        seek(e) {
          return this.timeline.totalProgress(e), this;
        }
        clear() {
          return this.timeline.clear(), this;
        }
      }
      const Un = [
          "ease",
          "duration",
          "delay",
          "to",
          "from",
          "repeat",
          "yoyo",
          "repeatDelay",
          "easeParams",
          "stagger",
          "transformOrigin",
          "clearProps",
          "paused",
          "overwrite",
          "autoClear",
          "parseTransform",
          "fireUpdateCommand",
          "data",
          "elementClearParams",
          "perspective",
          "transformPerspective",
          "immediateRender",
          "callbacks",
          "force3D",
          "transformStyle",
        ],
        jn = [
          "delay",
          "repeat",
          "yoyo",
          "repeatDelay",
          "stagger",
          "paused",
          "align",
          "tweens",
          "autoClear",
          "data",
          "elementClearParams",
          "callbacks",
        ],
        Wn = [
          {
            ease: (e) => {
              const { ease: t, easeParams: n } = e;
              if (t?.includes("ease")) {
                let [a, r] = t.split(".");
                (a = a.charAt(0).toLowerCase() + a.slice(1)),
                  (r = r.replace("ease", "")),
                  (r = r.charAt(0).toLowerCase() + r.slice(1));
                const i = Array.isArray(n) ? `(${n.join(",")})` : "";
                (e.ease = `${a}.${r}${i}`.replace("linear.", "")),
                  delete e.easeParams;
              } else
                t &&
                  !t?.includes(".") &&
                  (e.ease = t.replace(/[IO]/, (e) => `.${e.toLowerCase()}`));
            },
          },
        ];
      function Qn(e, t) {
        const { data: n } = e,
          a = n?.callbacks?.[t];
        "function" == typeof a && e.data.callbacks[t](e);
      }
      class Zn {
        constructor(e, t = []) {
          (this.gsap = e),
            (this.getElementRect = Xn),
            (this.getContentRect = Hn),
            (this.getBoundingRect = qn),
            (this.getBoundingContentRect = Vn),
            this.gsap.registerPlugin(...t),
            (this.tween = this.tween.bind(this)),
            (this.timeline = this.timeline.bind(this)),
            (this.set = this.set.bind(this)),
            (this.kill = this.kill.bind(this)),
            (this.addTickerEvent = this.addTickerEvent.bind(this)),
            (this.removeTickerEvent = this.removeTickerEvent.bind(this)),
            (this.isTweening = this.isTweening.bind(this)),
            (this.getTweensOf = this.getTweensOf.bind(this)),
            (this._from = this._from.bind(this)),
            (this._to = this._to.bind(this)),
            (this._fromTo = this._fromTo.bind(this)),
            (this.delayedCall = this.delayedCall.bind(this)),
            (this.animateTimeScale = this.animateTimeScale.bind(this)),
            (this.adjustLagSmoothing = this.adjustLagSmoothing.bind(this));
        }
        tween(e, t = {}, n) {
          let a;
          e = Nn(e);
          const r = zn(n, Un);
          return (
            (t = this._validateAnimationParams(t, r)),
            this._assignCallbacks(t),
            (a =
              t.from && t.to ? this._fromTo : t.from ? this._from : this._to),
            a(e, t)
          );
        }
        timeline(e, t = []) {
          const n = zn(t, jn);
          return (
            (e = this._validateAnimationParams(e, n)),
            this._assignCallbacks(e),
            this.gsap.timeline(e)
          );
        }
        set(e, t = {}) {
          return (
            (t.duration = 0),
            (t.delay = 0),
            (t.to = t.to || {}),
            this.tween(e, t, Object.keys(t))
          );
        }
        kill(e, t) {
          e.paused() || (e.pause(), this._onInterruptHandler.apply(e)),
            "number" == typeof t && isFinite(t) && e.progress(t, !0),
            e.kill(),
            e.clear?.();
        }
        addTickerEvent(e) {
          this.gsap.ticker.add(e);
        }
        removeTickerEvent(e) {
          this.gsap.ticker.remove(e);
        }
        isTweening(e) {
          return this.gsap.isTweening(e);
        }
        getTweensOf(e, t) {
          return this.gsap.getTweensOf(e, t);
        }
        _from(e, t = {}) {
          let n, a;
          const r = { ...t.from, ...t };
          if (((r.data = r.data || {}), delete r.from, void 0 !== r.stagger)) {
            const { data: i } = t,
              { delay: o } = t;
            (r.data = {}),
              delete r.delay,
              (n = this.gsap.from(e, r)),
              (a = this.timeline({ data: i, delay: o }).add(n));
          } else n = this.gsap.from(e, r);
          return a || n;
        }
        _to(e, t = {}) {
          let n, a;
          const r = { ...t.to, ...t };
          if (((r.data = r.data || {}), delete r.to, void 0 !== r.stagger)) {
            const { data: i } = t,
              { delay: o } = t;
            (r.data = {}),
              delete r.delay,
              (n = this.gsap.to(e, r)),
              (a = this.timeline({ data: i, delay: o }).add(n));
          } else n = this.gsap.to(e, r);
          return a || n;
        }
        _fromTo(e, t = {}) {
          const { from: n = {}, to: a = {} } = t;
          return (
            (a.data = a?.data || {}),
            delete t.to,
            delete t.from,
            Object.assign(a, t),
            this.gsap.fromTo(e, n, a)
          );
        }
        _assignCallbacks(e) {
          return (
            (e.data = e.data || {}),
            e.callbacks &&
              ((e.data.callbacks = {}),
              e.callbacks.onComplete &&
                ((e.data.callbacks.onComplete = e.callbacks.onComplete),
                (e.onComplete = this._onCompleteHandler)),
              e.callbacks.onReverseComplete &&
                ((e.data.callbacks.onReverseComplete =
                  e.callbacks.onReverseComplete),
                (e.onReverseComplete = this._onReverseCompleteHandler)),
              e.callbacks.onStart &&
                ((e.data.callbacks.onStart = e.callbacks.onStart),
                (e.onStart = this._onStartHandler)),
              e.callbacks.onUpdate &&
                ((e.data.callbacks.onUpdate = e.callbacks.onUpdate),
                (e.onUpdate = this._onUpdateHandler)),
              e.callbacks.onInterrupt &&
                (e.data.callbacks.onInterrupt = e.callbacks.onInterrupt)),
            delete e.callbacks,
            e
          );
        }
        _onCompleteHandler() {
          Qn(this, "onComplete");
        }
        _onReverseCompleteHandler() {
          Qn(this, "onReverseComplete");
        }
        _onStartHandler() {
          Qn(this, "onStart");
        }
        _onUpdateHandler() {
          Qn(this, "onUpdate");
        }
        _onInterruptHandler() {
          Qn(this, "onInterrupt");
        }
        _validateAnimationParams(e = {}, t) {
          return (
            Object.keys(e).forEach((n) => {
              if ("to" === n || "from" === n)
                this._validateAnimationParams(e[n], t);
              else if (t.includes(n)) {
                const t = Wn.find((e) => e[n]);
                t && t[n](e);
              } else delete e[n];
            }),
            e
          );
        }
        delayedCall(e, t, n) {
          return this.gsap.delayedCall(e, t, n);
        }
        animateTimeScale(e, t, n, a, r = "Linear.easeNone", i) {
          const o = { timeScale: n },
            s = { duration: t, timeScale: a, easing: r };
          return (
            i && Object.assign(s, i),
            0 === n && e.paused() && e.play(),
            this.gsap.fromTo(e, o, s)
          );
        }
        adjustLagSmoothing(e, t) {
          this.gsap.ticker.lagSmoothing?.(e, t);
        }
        sequence(e) {
          return new Ln(this, e);
        }
        getProperty(e, t) {
          return this.gsap.getProperty(e, t);
        }
      }
      class Gn {
        constructor(e, t) {
          this.engine = new Zn(e, t);
        }
      }
      const Kn = "BaseAttribute",
        Jn = {};
      function ea(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r }, ["attr"]);
      }
      const ta = "BaseClear",
        na = {},
        aa = [
          {
            domAttr: "data-angle",
            gsapAttr: "rotation",
            conditionAttr: "data-angle-style-location",
            conditionValue: "inline",
          },
          { domAttr: "data-scale", gsapAttr: "scale" },
        ];
      function ra(
        e,
        t,
        n = 0,
        a = 0,
        { props: r = "", parentProps: i = "", to: o = {}, ...s } = {}
      ) {
        t = Nn(t);
        const u = new Set(t.map((e) => e.parentNode)),
          c = Array.from(u),
          d = { duration: n, delay: a, to: o, clearProps: r, ...s },
          l = i ? { ...d, clearProps: i } : null,
          m = e.sequence({
            callbacks: {
              onComplete: () =>
                (function (e) {
                  e.forEach((e) => delete e._gsTransform);
                })(t),
            },
          });
        return (
          m.add(e.engine.tween(t, d, [])),
          l && m.add(e.engine.tween(c, l, []), 0),
          (function (e, t, n) {
            Array.isArray(e) &&
              e.forEach((e) => {
                const a = {},
                  r = { duration: 0, delay: 0, immediateRender: !1 };
                aa.forEach((t) => {
                  const n = e.getAttribute(t.domAttr),
                    r = t.conditionAttr && e.getAttribute(t.conditionAttr),
                    i = !r || r === t.conditionValue;
                  n && i && (a[t.gsapAttr] = n);
                }),
                  Object.keys(a).length &&
                    t.add(n.tween(e, { ...a, ...r }, Object.keys(a)));
              });
          })(t, m, e.engine),
          m.get()
        );
      }
      const ia = "BaseClip",
        oa = {};
      function sa(e, t, n = 0, a = 0, { to: r = {}, from: i = {}, ...o } = {}) {
        t = Nn(t);
        const s = (function (e, t) {
          const n = t.top - e.top,
            a = t.left - e.left;
          return `rect(${[n, t.width + a, t.height + n, a].join("px,")}px)`;
        })(
          e.engine.getBoundingRect(t[0]),
          e.engine.getBoundingContentRect(t[0])
        );
        return (
          r.clip || (r.clip = s),
          i.clip || (i.clip = s),
          e.engine.tween(t, { duration: n, delay: a, from: i, to: r, ...o }, [
            "clip",
          ])
        );
      }
      var ua = n(16956);
      function ca(
        e,
        t,
        n,
        {
          useClipRect: a = !1,
          inset: r = !1,
          scaleX: i = 1,
          scaleY: o = 1,
          minimum: s = 0,
        } = {}
      ) {
        return a
          ? (function (
              e,
              t,
              { scaleX: n = 1, scaleY: a = 1, minimum: r = 0 } = {}
            ) {
              let i = (e.height * (1 - a)) / 2,
                o = (e.width * (1 - n)) / 2,
                s = (e.width * (1 + n)) / 2,
                u = (e.height * (1 + a)) / 2;
              const c = r / 100;
              "center" === t
                ? ((i = (u * (1 - c)) / 2),
                  (u = (u * (1 + c)) / 2),
                  (o = (s * (1 - c)) / 2),
                  (s = (s * (1 + c)) / 2))
                : "top" === t
                ? (u *= c)
                : "bottom" === t
                ? (i = u * c)
                : "left" === t
                ? (s *= c)
                : "right" === t && (o = s * c);
              return { clip: `rect(${i}px ${s}px ${u}px ${o}px)` };
            })(e, n, { scaleX: i, scaleY: o, minimum: s })
          : r
          ? (function (
              e,
              t,
              n,
              { scaleX: a = 1, scaleY: r = 1, minimum: i = 0 } = {}
            ) {
              const { width: o, height: s } = t,
                u = t.top - e.top + (e.height * (1 - r)) / 2,
                c = t.left - e.left + (e.width * (1 - a)) / 2,
                d =
                  e.width -
                  t.width -
                  c +
                  ((e.width - t.left - e.left) * (1 - a)) / 2,
                l =
                  e.height -
                  t.height -
                  u +
                  ((e.height - t.top - e.top) * (1 - r)) / 2,
                m = 1 - i / 100,
                f = {
                  initial: `${u}px ${d}px ${l}px ${c}px`,
                  top: `${u}px ${d}px ${(s + l) * m}px ${c}px`,
                  right: `${u}px ${d}px ${l}px ${(o + c) * m}px`,
                  center: `${(u + s / 2) * m}px ${(d + o / 2) * m}px ${
                    (l + s / 2) * m
                  }px ${(c + o / 2) * m}px`,
                  bottom: `${(s + u) * m}px ${d}px ${l}px ${c}px`,
                  left: `${u}px ${(o + d) * m}px ${l}px ${c}px`,
                  vertical: `${(u + s / 2) * m}px ${d}px ${
                    (l + s / 2) * m
                  }px ${c}px`,
                  horizontal: `${u}px ${(d + o / 2) * m}px ${l}px ${
                    (c + o / 2) * m
                  }px`,
                };
              return {
                webkitClipPath: `inset(${f[n]})`,
                clipPath: `inset(${f[n]})`,
              };
            })(e, t, n, { scaleX: i, scaleY: o, minimum: s })
          : (function (
              e,
              t,
              n,
              { scaleX: a = 1, scaleY: r = 1, minimum: i = 0 } = {}
            ) {
              const o =
                  ((t.top - e.top) / e.height) * 100 + ((1 - r) / 2) * 100,
                s = ((t.left - e.left) / e.width) * 100 + ((1 - a) / 2) * 100,
                u = (t.width / e.width) * 100 + s - 100 * (1 - a),
                c = (t.height / e.height) * 100 + o - 100 * (1 - r),
                d = (u + s) / 2,
                l = (c + o) / 2,
                m = {
                  initial: `${s}% ${o}%, ${u}% ${o}%, ${u}% ${c}%, ${s}% ${c}%`,
                  top: `${s}% ${o}%, ${u}% ${o}%, ${u}% ${o + i}%, ${s}% ${
                    o + i
                  }%`,
                  right: `${u - i}% ${o}%, ${u}% ${o}%, ${u}% ${c}%, ${
                    u - i
                  }% ${c}%`,
                  center: `${d - i / 2}% ${l - i / 2}%, ${d + i / 2}% ${
                    l - i / 2
                  }%, ${d + i / 2}% ${l + i / 2}%, ${d - i / 2}% ${l + i / 2}%`,
                  bottom: `${s}% ${c - i}%, ${u}% ${
                    c - i
                  }%, ${u}% ${c}%, ${s}% ${c}%`,
                  left: `${s}% ${o}%, ${s + i}% ${o}%, ${
                    s + i
                  }% ${c}%, ${s}% ${c}%`,
                  vertical: `${s}% ${o + i / 2}%, ${u}% ${o + i / 2}%, ${u}% ${
                    c - i / 2
                  }%, ${s}% ${c - i / 2}%`,
                  horizontal: `${s + i / 2}% ${o}%, ${u - i / 2}% ${o}%, ${
                    u - i / 2
                  }% ${c}%, ${s + i / 2}% ${c}%`,
                };
              return {
                webkitClipPath: `polygon(${m[n]})`,
                clipPath: `polygon(${m[n]})`,
              };
            })(e, t, n, { scaleX: i, scaleY: o, minimum: s });
      }
      function da(e) {
        return {
          initial: { scaleX: 1, scaleY: 1 },
          top: { scaleX: 1, scaleY: 0 },
          right: { scaleX: 0, scaleY: 1 },
          center: { scaleY: 0, scaleX: 0 },
          bottom: { scaleX: 1, scaleY: 0 },
          left: { scaleX: 0, scaleY: 1 },
        }[e];
      }
      function la(e, t, n) {
        const a = Object.keys(e),
          r = e[t].idx,
          i = Math.round((n / 360) * a.length);
        return a[(r + (a.length - 1) * i) % a.length];
      }
      function ma(e, t, n) {
        const a = t.width / 2,
          r = t.height / 2,
          i = (t.width * parseInt(e.x, 10)) / 100,
          o = (t.height * parseInt(e.y, 10)) / 100,
          s = a - a * Math.cos(n) + r * Math.sin(n),
          u = r - a * Math.sin(n) - r * Math.cos(n);
        return {
          x: s - (i - i * Math.cos(n) + o * Math.sin(n)),
          y: u - (o - i * Math.sin(n) - o * Math.cos(n)),
        };
      }
      function fa(e, t, n) {
        return `${t.left + t.width * (parseInt(n.x, 10) / 100) - e.left}px ${
          t.top + t.height * (parseInt(n.y, 10) / 100) - e.top
        }px`;
      }
      function pa(e, t, n) {
        const a = e.getBoundingClientRect();
        e.style.transformOrigin = t;
        const r = e.getBoundingClientRect();
        return n("BasePosition", e, 0, 0, {
          x: "+=" + (a.left - r.left),
          y: "+=" + (a.top - r.top),
          immediateRender: !0,
        });
      }
      function ha(e, t, n, a = 1) {
        const r = e.width * a,
          i = e.height * a;
        return {
          x: t.dy * i * Math.sin(-n) + t.dx * r * Math.cos(n),
          y: t.dy * i * Math.cos(-n) + t.dx * r * Math.sin(n),
        };
      }
      function ga(e, t, n) {
        const a = (0, ua.kU)(n);
        return {
          x: e * Math.cos(a) - t * Math.sin(a),
          y: e * Math.sin(a) + t * Math.cos(a),
        };
      }
      function ya(e, t, n = !1) {
        const a = n
          ? (function (e, t) {
              const n = e.width,
                a = e.height;
              return { x: (t.width - n) / 2, y: (t.height - a) / 2 };
            })(e, t)
          : { x: 0, y: 0 };
        return { x: t.left - e.left + a.x, y: t.top - e.top + a.y };
      }
      const ba = {
        normal: (e, { maxTravelHeight: t }) => e / t,
        legacy_in: (
          e,
          { maxTravelHeight: t, travelLastFold: n, travelFirstFold: a }
        ) => Math.min(e, n, a) / t,
        in_last_fold: (e, { maxTravelHeight: t, travelLastFold: n }) =>
          Math.min(e, n) / t,
        out_first_fold: (e, { maxTravelHeight: t, extraOutDistance: n }) =>
          Math.min(1, (n + e) / t),
      };
      function va(e, t, n, a, r = ba.normal) {
        const i = {
            maxTravelHeight: e + a,
            travelLastFold: n - t,
            travelFirstFold: Math.min(e, a) + t,
            extraOutDistance: Math.max(0, a - t),
          },
          o = {
            TOP_TO_BOTTOM: r(0, i),
            TOP_TO_CENTER: r(0.5 * a, i),
            TOP_TO_TOP: r(a, i),
            CENTER_TO_BOTTOM: r(0.5 * e, i),
            CENTER_TO_CENTER: r(0.5 * a + 0.5 * e, i),
            CENTER_TO_TOP: r(a + 0.5 * e, i),
            BOTTOM_TO_BOTTOM: r(e, i),
            BOTTOM_TO_CENTER: r(0.5 * a + e, i),
            BOTTOM_TO_TOP: r(a + e, i),
          },
          s = t < a,
          u = n - (t + e) < a;
        return {
          ...o,
          withOffset: (e, t) =>
            Math.min(1, Math.max(0, e + (o.TOP_TO_TOP * t) / 100)),
          isInFirstFold: s,
          isInLastFold: u,
        };
      }
      function xa(e, t, n) {
        const a = Math.sign(Math.cos((n * Math.PI) / 180)),
          r = Math.sign(Math.sin((n * Math.PI) / 180)),
          i = t.left - e.left,
          o = t.top - e.top,
          s = a < 0 ? -i - t.width : e.width - i,
          u = r < 0 ? -o - t.height : e.height - o,
          c = Math.min(
            u / Math.sin((n * Math.PI) / 180),
            s / Math.cos((n * Math.PI) / 180)
          );
        return {
          distance: Math.abs(c),
          x: Math.round(c * Math.cos((n * Math.PI) / 180)),
          y: Math.round(c * Math.sin((n * Math.PI) / 180)),
        };
      }
      function _a(e, t) {
        return e.map(({ keyframe: n }, a) => {
          const r = n - (a > 0 ? e[a - 1].keyframe : 0);
          return t * (r / 100);
        });
      }
      function wa(e) {
        const t = e.replace(/In|Out/g, "");
        return { in: `${t}In`, inOut: `${t}InOut`, out: `${t}Out` };
      }
      function Oa(e, t) {
        const n = t.x - e.x,
          a = t.y - e.y;
        return Math.hypot(n, a);
      }
      function Ba(e, t) {
        const n = (e * Math.PI) / 180;
        return [Math.cos(n) * t, Math.sin(n) * t];
      }
      const Ta = {
        linear: "linear",
        easeOut: "ease-out",
        hardBackOut: "cubic-bezier(0.58, 2.5, 0, 0.95)",
        elastic:
          "linear( 0, 0.2178 2.1%, 1.1144 8.49%, 1.2959 10.7%, 1.3463 11.81%, 1.3705 12.94%, 1.3726, 1.3643 14.48%, 1.3151 16.2%, 1.0317 21.81%, 0.941 24.01%, 0.8912 25.91%, 0.8694 27.84%, 0.8698 29.21%, 0.8824 30.71%, 1.0122 38.33%, 1.0357, 1.046 42.71%, 1.0416 45.7%, 0.9961 53.26%, 0.9839 57.54%, 0.9853 60.71%, 1.0012 68.14%, 1.0056 72.24%, 0.9981 86.66%, 1 )",
        bounce:
          "linear( 0, 0.0039, 0.0157, 0.0352, 0.0625 9.09%, 0.1407, 0.25, 0.3908, 0.5625, 0.7654, 1, 0.8907, 0.8125 45.45%, 0.7852, 0.7657, 0.7539, 0.75, 0.7539, 0.7657, 0.7852, 0.8125 63.64%, 0.8905, 1 72.73%, 0.9727, 0.9532, 0.9414, 0.9375, 0.9414, 0.9531, 0.9726, 1, 0.9883, 0.9844, 0.9883, 1 )",
      };
      function Pa(e) {
        return Ta[e] || "linear";
      }
      function ka(e) {
        return "percentage" === e ? "%" : e || "px";
      }
      const Sa = "BaseClipPath",
        Ma = {};
      function Ia(
        e,
        t,
        n = 0,
        a = 0,
        { to: r = {}, from: i = {}, useClipRect: o = !1, ...s } = {}
      ) {
        const u = e.sequence();
        return (
          (t = Nn(t)).forEach((t) => {
            const c = ca(
              e.engine.getBoundingRect(t),
              e.engine.getBoundingContentRect(t),
              "initial",
              { useClipRect: o }
            );
            u.add(
              e.engine.tween(
                t,
                {
                  duration: n,
                  delay: a,
                  to: { ...c, ...r },
                  from: { ...c, ...i },
                  ...s,
                },
                ["clipPath", "webkitClipPath", "clip"]
              ),
              0
            );
          }),
          u.get()
        );
      }
      const Fa = "BaseDimensions",
        Ra = {};
      function $a(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r }, [
          "width",
          "height",
          "top",
          "left",
          "maxWidth",
          "maxHeight",
          "minWidth",
          "minHeight",
          "bottom",
          "right",
          "margin",
          "padding",
          "marginTop",
          "marginBottom",
          "marginLeft",
          "marginRight",
          "paddingTop",
          "paddingBottom",
          "paddingRight",
          "paddingLeft",
          "zIndex",
        ]);
      }
      const Ca = "BaseFade",
        Ea = {};
      function Aa(
        e,
        t,
        n = 0,
        a = 0,
        { lazy: r = !1, to: i = {}, from: o = {}, ...s } = {}
      ) {
        return (
          i.opacity > 0 && ((i.autoAlpha = i.opacity), delete i.opacity),
          o.opacity > 0 && ((o.autoAlpha = o.opacity), delete o.opacity),
          e.engine.tween(
            t,
            { duration: n, delay: a, lazy: r, to: i, from: o, ...s },
            ["opacity", "autoAlpha"]
          )
        );
      }
      const Ya = "BaseFilter",
        Da = {};
      function Xa(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r }, ["filter"]);
      }
      const qa = "BaseNone",
        Ha = {};
      function Va(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r, to: {} }, []);
      }
      const Na = "BaseObjectProps",
        za = {};
      function La(e, t, n = 0, a = 0, r = {}) {
        t = Nn(t);
        const i = new Set(t.reduce((e, t) => e.concat(Object.keys(t)), [])),
          o = Array.from(i);
        return e.engine.tween(t, { duration: n, delay: a, ...r }, o);
      }
      const Ua = "BasePosition",
        ja = {};
      function Wa(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r }, [
          "left",
          "top",
          "x",
          "y",
          "z",
          "bezier",
          "perspectiveOrigin",
          "perspective",
        ]);
      }
      const Qa = "BaseRotate",
        Za = {},
        Ga = { cw: !0, ccw: !0, short: !0 };
      function Ka(e, t, n = 0, a = 0, r = {}) {
        const { to: i, from: o } = r;
        return (
          i &&
            void 0 !== i.rotation &&
            Ga[i.direction] &&
            (r.to.rotation = `${i.rotation}_${i.direction}`),
          o &&
            void 0 !== o.rotation &&
            Ga[o.direction] &&
            (r.from.rotation = `${o.rotation}_${o.direction}`),
          e.engine.tween(t, { duration: n, delay: a, ...r }, ["rotation"])
        );
      }
      const Ja = "BaseRotate3D",
        er = {};
      function tr(e, t, n = 0, a = 0, { perspective: r, ...i } = {}) {
        t = Nn(t);
        const o = new Set(t.map((e) => e.parentNode)),
          s = e.sequence();
        return (
          (function (e) {
            e.forEach((e) => {
              let t = e.getAttribute("data-z-counter");
              (t = t ? Number(t) : 0),
                e.setAttribute("data-z-counter", (t + 1).toString());
            });
          })(o),
          r && s.add(e.engine.set(t, { transformPerspective: r }), 0),
          s.add(
            e.engine.tween(t, { duration: n, delay: a, ...i }, [
              "rotationX",
              "rotationY",
              "rotationZ",
            ])
          ),
          (function (e, t, n) {
            e.forEach((e) =>
              t.add(
                n.set(e, {
                  attr: { "data-z-counter": "-=1" },
                  immediateRender: !1,
                })
              )
            );
          })(o, s, e.engine),
          s.get()
        );
      }
      const nr = "BaseScale",
        ar = {};
      function rr(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r }, [
          "scale",
          "scaleX",
          "scaleY",
        ]);
      }
      const ir = "BaseScroll",
        or = {};
      function sr(
        e,
        t,
        n = 0,
        a = 0,
        { x: r = 0, y: i = 0, autoKill: o = !1, ...s } = {}
      ) {
        const u = { x: r, y: i, autoKill: o };
        return e.engine.tween(t, { duration: n, delay: a, scrollTo: u, ...s }, [
          "scrollTo",
          "autoKill",
        ]);
      }
      const ur = "BaseSequence",
        cr = {};
      function dr(e, t) {
        return e.engine.timeline(t, []);
      }
      const lr = "BaseSkew",
        mr = {};
      function fr(e, t, n = 0, a = 0, r = {}) {
        return e.engine.tween(t, { duration: n, delay: a, ...r }, [
          "skewX",
          "skewY",
        ]);
      }
      const pr = "ClearSequence",
        hr = { groups: ["animation"], schema: {} };
      function gr(e, t, n = {}) {
        t.reduce((t, n) => t.concat(e.engine.getTweensOf(n)), []).forEach((t) =>
          e.engine.kill(t)
        );
        const a = e.sequence(n);
        return a.add(e.animate("BaseNone", t, 0, 0, {})), a.get();
      }
      const yr = "Fade",
        br = {
          groups: ["animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            from: {
              type: "object",
              properties: {
                opacity: { type: "number", min: 0, max: 1 },
                autoAlpha: { type: "number", min: 0, max: 1 },
              },
            },
            to: {
              type: "object",
              properties: {
                opacity: { type: "number", min: 0, max: 1 },
                autoAlpha: { type: "number", min: 0, max: 1, default: 1 },
              },
            },
          },
        };
      function vr(
        e,
        t,
        n,
        a,
        { from: r = {}, to: i = {}, ease: o = "Sine.easeIn", ...s } = {}
      ) {
        const u = e.sequence(s);
        return (
          void 0 === i.opacity &&
            void 0 === i.autoAlpha &&
            (i.autoAlpha = br.schema.to.properties.autoAlpha.default),
          u.add(e.animate("BaseFade", t, n, a, { from: r, to: i, ease: o })),
          u.get()
        );
      }
      const xr = "Position",
        _r = {
          groups: ["animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            from: {
              type: "object",
              properties: {
                left: { type: "numberLike" },
                top: { type: "numberLike" },
                x: { type: "numberLike" },
                y: { type: "numberLike" },
                z: { type: "numberLike" },
                bezier: { type: "numberLike" },
              },
            },
            to: {
              type: "object",
              properties: {
                left: { type: "numberLike" },
                top: { type: "numberLike" },
                x: { type: "numberLike" },
                y: { type: "numberLike" },
                z: { type: "numberLike" },
                bezier: { type: "string" },
              },
            },
          },
        };
      function wr(
        e,
        t,
        n,
        a,
        { from: r = {}, to: i = {}, ease: o = "Sine.easeIn", ...s } = {}
      ) {
        const u = e.sequence(s);
        return (
          u.add(
            e.animate("BasePosition", t, n, a, { from: r, to: i, ease: o })
          ),
          u.get()
        );
      }
      const Or = "Rotate",
        Br = {
          groups: ["animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            from: {
              type: "object",
              properties: { rotation: { type: "number" } },
            },
            to: {
              type: "object",
              properties: {
                rotation: { type: "numberLike", default: 360 },
                direction: { type: "string", enum: ["cw", "ccw", "short"] },
              },
            },
          },
        };
      function Tr(
        e,
        t,
        n,
        a,
        { from: r = {}, to: i = {}, ease: o = "Sine.easeIn", ...s } = {}
      ) {
        const u = e.sequence(s);
        return (
          (i.rotation = i.rotation || Br.schema.to.properties.rotation.default),
          u.add(e.animate("BaseRotate", t, n, a, { from: r, to: i, ease: o })),
          u.get()
        );
      }
      const Pr = "Scale",
        kr = {
          groups: ["animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            from: {
              type: "object",
              properties: {
                scale: { type: "number", min: 0 },
                scaleX: { type: "number", min: 0 },
                scaleY: { type: "number", min: 0 },
              },
            },
            to: {
              type: "object",
              properties: {
                scale: { type: "number", min: 0 },
                scaleX: { type: "number", min: 0 },
                scaleY: { type: "number", min: 0 },
              },
            },
          },
        };
      function Sr(
        e,
        t,
        n,
        a,
        { from: r = {}, to: i = {}, ease: o = "Sine.easeIn", ...s } = {}
      ) {
        const u = e.sequence(s);
        return (
          u.add(e.animate("BaseScale", t, n, a, { from: r, to: i, ease: o })),
          u.get()
        );
      }
      const Mr = "Sequence",
        Ir = {
          groups: ["animation"],
          schema: {
            delay: { type: "number", min: 0, default: 0 },
            animations: { type: "array" },
            repeat: { type: "integer", min: -1 },
            repeatDelay: { type: "number", min: 0 },
            yoyo: { type: "boolean" },
          },
        };
      function Fr(e, t, n = {}, { animations: a, ...r } = {}) {
        const i = e.sequence({ delay: n, ...r });
        return (
          a.forEach((n) => {
            const {
              name: a,
              duration: r,
              delay: o,
              offset: s,
              from: u = {},
              to: c = {},
              ease: d,
            } = n;
            i.add(e.animate(a, t, r, o, { from: u, to: c, ease: d }), s);
          }),
          i.get()
        );
      }
      const Rr = "TimelineAnimation",
        $r = {
          groups: ["animation", "timeline"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            ease: { type: "string", default: "Sine.easeIn" },
            to: {
              type: "object",
              properties: {
                x: { type: "numberLike" },
                y: { type: "numberLike" },
                scale: { type: "number", min: 0 },
                scaleX: { type: "number", min: 0 },
                scaleY: { type: "number", min: 0 },
                rotation: { type: "numberLike" },
                direction: { type: "string", enum: ["cw", "ccw", "short"] },
                opacity: { type: "number", min: 0, max: 1 },
                autoAlpha: { type: "number", min: 0, max: 1 },
              },
            },
          },
        },
        Cr = (e, t) =>
          Object.fromEntries(
            t.map((t) => [t, e[t]]).filter(([, e]) => void 0 !== e)
          ),
        Er = {
          BasePosition: ["x", "y"],
          BaseScale: ["scale", "scaleX", "scaleY"],
          BaseRotate: ["rotation", "direction"],
          BaseFade: ["opacity", "autoAlpha"],
        };
      function Ar(
        e,
        t,
        n,
        a,
        { to: r = {}, ease: i = $r.schema.ease.default, ...o } = {}
      ) {
        const s = e.sequence(o),
          u = (function (e) {
            return Object.entries(Er)
              .map(([t, n]) => {
                const a = Cr(e, n);
                return Object.keys(a).length ? [t, a] : null;
              })
              .filter((e) => e);
          })(r).map(([r, o]) => e.animate(r, t, n, a, { to: o, ease: i }));
        return s.add(u), s.get();
      }
      const Yr = "ArcIn",
        Dr = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["3d", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "left",
            },
          },
        },
        Xr = {
          pseudoRight: { angleX: "180", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "180", idx: 1 },
          pseudoLeft: { angleX: "-180", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-180", idx: 3 },
        };
      function qr(
        e,
        t,
        n,
        a,
        { direction: r = Dr.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Sine.easeInOut",
            })
          ),
          t.forEach((t) => {
            const i = t.getAttribute("data-angle") || 0,
              s = (function (e) {
                return { rotationX: Xr[e].angleX, rotationY: Xr[e].angleY };
              })(la(Xr, r, Number(i))),
              u = (function (e) {
                return "50% 50% " + -1.5 * e.offsetWidth;
              })(t);
            o.add(e.engine.set(t, { transformOrigin: u }), 0).add(
              e.animate("BaseRotate3D", t, n, a, {
                from: s,
                perspective: 200,
                ease: "Sine.easeInOut",
              }),
              0
            );
          }),
          o.get()
        );
      }
      const Hr = "BounceIn",
        Vr = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            bounce: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "medium",
            },
            direction: {
              type: "string",
              enum: [
                "top left",
                "top right",
                "center",
                "bottom right",
                "bottom left",
              ],
              default: "top left",
            },
          },
        },
        Nr = {
          "top left": { y: -1.1, x: -1.1, idx: 0 },
          "top right": { y: -1.1, x: 1.1, idx: 1 },
          "bottom right": { y: 1.1, x: 1.1, idx: 2 },
          "bottom left": { y: 1.1, x: -1.1, idx: 3 },
        },
        zr = { soft: [0.6, 0.25], medium: [0.9, 0.22], hard: [1.3, 0.2] };
      function Lr(
        e,
        t,
        n,
        a,
        {
          direction: r = Vr.schema.direction.default,
          bounce: i = Vr.schema.bounce.default,
          ...o
        } = {}
      ) {
        const s = 0.3 * n,
          u = n - s,
          c = e.sequence(o);
        return (
          c.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          c.add(
            e.animate("BaseFade", t, s, a, {
              to: { opacity: 1 },
              ease: "Cubic.easeIn",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const n = e.engine.getElementRect(t),
              o = t.getAttribute("data-angle") || 0,
              d = "center" !== r ? la(Nr, r, Number(o)) : r,
              l = Nr[d] || { y: 0, x: 0 },
              m = ga((n.width / 2) * l.x, (n.height / 2) * l.y, Number(o)),
              f = ga((n.width / 3) * l.x, (n.height / 3) * l.y, Number(o));
            c.add(
              [
                e.animate("BasePosition", t, s, a, {
                  from: { x: m.x, y: m.y },
                  to: { x: f.x, y: f.y },
                  ease: "Expo.easeIn",
                }),
                e.animate("BaseScale", t, s, a, {
                  from: { scale: 0 },
                  to: { scale: 0.3 },
                  ease: "Expo.easeIn",
                  immediateRender: !1,
                }),
              ],
              "animation-start"
            ),
              c.add(
                [
                  e.animate("BasePosition", t, u, 0, {
                    to: { x: 0, y: 0 },
                    ease: "Elastic.easeOut",
                    easeParams: zr[i],
                  }),
                  e.animate("BaseScale", t, u, 0, {
                    to: { scale: 1 },
                    ease: "Elastic.easeOut",
                    easeParams: zr[i],
                  }),
                ],
                `animation-start+=${s + a}`
              );
          }),
          c.get()
        );
      }
      const Ur = "DropIn",
        jr = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        Wr = { soft: 1.2, medium: 3.6, hard: 6 };
      function Qr(
        e,
        t,
        n,
        a,
        { power: r = jr.schema.power.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = Wr[r];
        return (
          o.add([
            e.animate("BaseFade", t, 0.25 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Sine.easeIn",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: s },
              ease: "Sine.easeIn",
            }),
          ]),
          o.get()
        );
      }
      const Zr = "ExpandIn",
        Gr = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        Kr = { soft: 0.85, medium: 0.4, hard: 0 };
      function Jr(
        e,
        t,
        n,
        a,
        { power: r = Gr.schema.power.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = Kr[r];
        return (
          o.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          o.add([
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "Cubic.easeIn",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: s },
              ease: "Sine.easeIn",
              immediateRender: !1,
            }),
          ]),
          o.get()
        );
      }
      const ei = "FadeIn",
        ti = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function ni(e, t, n, a, r) {
        const i = e.sequence(r);
        return (
          i.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeIn",
            })
          ),
          i.get()
        );
      }
      const ai = "FlipIn",
        ri = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["3d", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
          },
        },
        ii = {
          top: { angleX: "90", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "90", idx: 1 },
          bottom: { angleX: "-90", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-90", idx: 3 },
        };
      function oi(
        e,
        t,
        n,
        a,
        { direction: r = ri.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          o.add(
            e.animate("BaseFade", t, 0.25 * n, a, {
              to: { opacity: 1 },
              ease: "Strong.easeIn",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const i = t.getAttribute("data-angle") || 0,
              s = la(ii, r, Number(i)),
              u = { rotationX: ii[s].angleX, rotationY: ii[s].angleY };
            o.add(
              e.animate("BaseRotate3D", t, 0.75 * n, a, {
                from: u,
                perspective: 800,
                ease: "Strong.easeIn",
                immediateRender: !1,
              }),
              "animation-start"
            );
          }),
          o.get()
        );
      }
      const si = "FloatIn",
        ui = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "right",
            },
          },
        },
        ci = {
          top: { dx: 0, dy: -1, distance: 60 },
          right: { dx: 1, dy: 0, distance: 120 },
          bottom: { dx: 0, dy: 1, distance: 60 },
          left: { dx: -1, dy: 0, distance: 120 },
        };
      function di(
        e,
        t,
        n,
        a,
        { direction: r = ui.schema.direction.default, ...i } = {}
      ) {
        const o = ci[r],
          s = e.frame.innerWidth,
          u = (e.frame.innerHeight, e.sequence(i));
        return (
          u.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t);
            let i;
            const c = o.dy * o.distance;
            (i =
              o.dx > 0
                ? o.dx * Math.max(0, Math.min(s - r.right, o.distance))
                : o.dx * Math.max(0, Math.min(r.left, o.distance))),
              u.add(
                e.animate("BasePosition", t, n, a, {
                  from: { x: i, y: c },
                  ease: "Sine.easeOut",
                }),
                0
              );
          }),
          u.get()
        );
      }
      const li = "FlyIn",
        mi = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: [
                "top",
                "top left",
                "top right",
                "left",
                "bottom",
                "bottom left",
                "bottom right",
                "right",
              ],
              default: "right",
            },
          },
        },
        fi = {
          top: { dy: -1 },
          right: { dx: 1 },
          bottom: { dy: 1 },
          left: { dx: -1 },
        };
      function pi(
        e,
        t,
        n,
        a,
        { direction: r = mi.schema.direction.default, ...i } = {}
      ) {
        const o = (function (e) {
            const t = { dx: 0, dy: 0 };
            return (
              e.forEach((e) => {
                fi[e] && Object.assign(t, fi[e]);
              }),
              t
            );
          })(r.split(" ")),
          s = e.frame.innerWidth,
          u = e.frame.innerHeight,
          c = e.sequence(i);
        return (
          c.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = o.dx > 0 ? s - r.right : o.dx * r.left,
              d = o.dy > 0 ? u - r.top : o.dy * r.bottom;
            c.add(
              e.animate("BasePosition", t, n, a, {
                from: { x: i, y: d },
                ease: "Sine.easeOut",
              }),
              0
            );
          }),
          c.get()
        );
      }
      const hi = "FoldIn",
        gi = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["3d", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
          },
        },
        yi = {
          top: {
            angleX: "-90",
            angleY: "0",
            origin: { x: "50%", y: "0" },
            idx: 0,
          },
          right: {
            angleX: "0",
            angleY: "-90",
            origin: { x: "100%", y: "50%" },
            idx: 1,
          },
          bottom: {
            angleX: "90",
            angleY: "0",
            origin: { x: "50%", y: "100%" },
            idx: 2,
          },
          left: {
            angleX: "0",
            angleY: "90",
            origin: { x: "0", y: "50%" },
            idx: 3,
          },
        };
      function bi(
        e,
        t,
        n,
        a,
        { direction: r = gi.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          o.add(
            e.animate("BaseFade", t, 0.25 * n, a, {
              to: { opacity: 1 },
              ease: "Cubic.easeInOut",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = (i * Math.PI) / 180,
              u = la(yi, r, i),
              c = e.engine.getBoundingRect(t),
              d = e.engine.getBoundingContentRect(t),
              { x: l, y: m } = ma(yi[u].origin, d, s),
              f = fa(c, d, yi[u].origin),
              p = { rotationX: yi[u].angleX, rotationY: yi[u].angleY };
            o.add(
              [
                e.animate("BasePosition", t, 0, a, {
                  transformOrigin: f,
                  x: l,
                  y: m,
                  immediateRender: !1,
                }),
                e.animate("BaseRotate3D", t, n, a, {
                  from: p,
                  perspective: 800,
                  ease: "Cubic.easeInOut",
                  immediateRender: !1,
                }),
              ],
              "animation-start"
            );
          }),
          o.get()
        );
      }
      const vi = "GlideIn",
        xi = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            angle: { type: "number", min: 0, max: 360, default: 0 },
            distance: { type: "number", min: 0, default: 0 },
          },
        };
      function _i(
        e,
        t,
        n,
        a,
        {
          angle: r = xi.schema.angle.default,
          distance: i = xi.schema.distance.default,
          ...o
        } = {}
      ) {
        const s = (r * Math.PI) / 180,
          u = Math.sin(s) * i,
          c = Math.cos(s) * i * -1,
          d = e.sequence(o);
        return (
          d.add(
            [
              e.animate("BaseFade", t, 0, 0, {
                from: { opacity: 0 },
                to: { opacity: 1 },
                ease: "Sine.easeIn",
              }),
              e.animate("BasePosition", t, n, a, {
                from: { x: u, y: c },
                ease: "Sine.easeInOut",
              }),
            ],
            0
          ),
          d.get()
        );
      }
      const wi = "Reveal",
        Oi = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["mask", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "center", "bottom", "left"],
              default: "left",
            },
          },
        },
        Bi = {
          top: { dx: 0, dy: -1, idx: 0 },
          right: { dx: 1, dy: 0, idx: 1 },
          bottom: { dx: 0, dy: 1, idx: 2 },
          left: { dx: -1, dy: 0, idx: 3 },
        };
      function Ti(
        e,
        t,
        n,
        a,
        { direction: r = Oi.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, 0.25 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeInOut",
            })
          ),
          t.forEach((t) => {
            const i = e.engine.getBoundingRect(t),
              s = e.engine.getBoundingContentRect(t),
              u = Number(t.getAttribute("data-angle")) || 0,
              c = (u * Math.PI) / 180,
              d = "center" !== r ? la(Bi, r, u) : r;
            if (void 0 === t.style.clipPath) {
              const r = da(d),
                i = Bi[d] || { dx: 0, dy: 0 },
                u = ha(s, { dx: i.dx / 2, dy: i.dy / 2 }, c);
              o.add(
                [
                  e.animate("BaseScale", t, n, a, {
                    from: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    from: u,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            } else {
              const r = ca(i, s, d);
              o.add(
                e.animate("BaseClipPath", t, n, a, {
                  from: r,
                  ease: "Cubic.easeInOut",
                }),
                0
              );
            }
          }),
          o.get()
        );
      }
      const Pi = "SlideIn",
        ki = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["mask", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        Si = {
          top: { dx: 0, dy: -1, idx: 0, clip: "bottom" },
          right: { dx: 1, dy: 0, idx: 1, clip: "left" },
          bottom: { dx: 0, dy: 1, idx: 2, clip: "top" },
          left: { dx: -1, dy: 0, idx: 3, clip: "right" },
        },
        Mi = { soft: 70, medium: 35, hard: 0 };
      function Ii(
        e,
        t,
        n,
        a,
        {
          direction: r = ki.schema.direction.default,
          power: i = ki.schema.power.default,
          ...o
        } = {}
      ) {
        const s = e.sequence(o);
        return (
          s.add(
            e.animate("BaseFade", t, 0.25 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeInOut",
            })
          ),
          t.forEach((t) => {
            const o = e.engine.getBoundingRect(t),
              u = e.engine.getBoundingContentRect(t),
              c = Number(t.getAttribute("data-angle")) || 0,
              d = (c * Math.PI) / 180,
              l = la(Si, r, c);
            if (void 0 === t.style.clipPath) {
              const r = da(l),
                i = ha(u, { dx: Si[l].dx / 2, dy: Si[l].dy / 2 }, d);
              s.add(
                [
                  e.animate("BaseScale", t, n, a, {
                    from: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    from: i,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            } else {
              const r = ca(o, u, Si[l].clip, { minimum: Mi[i] }),
                c = ha(u, Si[l], d, (100 - Mi[i]) / 100);
              s.add(
                [
                  e.animate("BaseClipPath", t, n, a, {
                    from: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    from: c,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            }
          }),
          s.get()
        );
      }
      const Fi = "SpinIn",
        Ri = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            cycles: { type: "number", step: 0.25, min: 0, default: 5 },
            direction: { type: "string", enum: ["cw", "ccw"], default: "cw" },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        $i = { cw: { direction: -1 }, ccw: { direction: 1 } },
        Ci = { soft: 0.8, medium: 0.5, hard: 0 };
      function Ei(
        e,
        t,
        n,
        a,
        {
          direction: r = Ri.schema.direction.default,
          cycles: i = Ri.schema.cycles.default,
          power: o = Ri.schema.power.default,
          ...s
        } = {}
      ) {
        const u = Ci[o],
          c = ($i[r].direction > 0 ? "+=" : "-=") + 360 * i,
          d = e.sequence(s);
        return (
          d.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          d.add([
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "Sine.easeIn",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: u },
              ease: "Sine.easeOut",
              immediateRender: !1,
            }),
            e.animate("BaseRotate", t, n, a, {
              from: { rotation: c },
              ease: "Sine.easeIn",
              immediateRender: !1,
            }),
          ]),
          d.get()
        );
      }
      const Ai = "TurnIn",
        Yi = {
          hideOnStart: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "left",
            },
          },
        },
        Di = { left: { dx: -1, angle: 90 }, right: { dx: 1, angle: 90 } };
      function Xi(
        e,
        t,
        n,
        a,
        { direction: r = Yi.schema.direction.default, ...i } = {}
      ) {
        const o = Di[r],
          s = e.frame.innerWidth,
          u = (e.frame.innerHeight, (o.dx > 0 ? "+=" : "-=") + o.angle),
          c = e.sequence(i);
        return (
          c.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = o.dx > 0 ? s - r.right : o.dx * r.left,
              d = Math.min(-1.5 * r.height, Math.max(-300, -5.5 * r.height));
            c.add(
              [
                e.animate("BasePosition", t, n, a, {
                  from: { x: i },
                  ease: "Circ.easeOut",
                  immediateRender: !1,
                }),
                e.animate("BasePosition", t, n, a, {
                  from: { y: d },
                  ease: "Linear.easeOut",
                  immediateRender: !1,
                }),
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: u },
                  ease: "Linear.easeOut",
                  immediateRender: !1,
                }),
              ],
              0
            );
          }),
          c.get()
        );
      }
      const qi = "ArcOut",
        Hi = {
          groups: ["3d", "exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "left",
            },
          },
        },
        Vi = {
          pseudoRight: { angleX: "180", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "180", idx: 1 },
          pseudoLeft: { angleX: "-180", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-180", idx: 3 },
        };
      function Ni(
        e,
        t,
        n,
        a,
        { direction: r = Hi.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Sine.easeInOut",
            })
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = (function (e) {
                return { rotationX: Vi[e].angleX, rotationY: Vi[e].angleY };
              })(la(Vi, r, i)),
              u = (function (e) {
                return "50% 50% " + -1.5 * e.offsetWidth;
              })(t);
            o.add(e.engine.set(t, { transformOrigin: u }), 0).add(
              e.animate("BaseRotate3D", t, n, a, {
                to: s,
                perspective: 200,
                ease: "Sine.easeInOut",
              }),
              0
            );
          }),
          o.get()
        );
      }
      const zi = "BounceOut",
        Li = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            bounce: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "medium",
            },
            direction: {
              type: "string",
              enum: [
                "top left",
                "top right",
                "center",
                "bottom right",
                "bottom left",
              ],
              default: "top left",
            },
          },
        },
        Ui = {
          "top left": "0 0",
          "top right": "100% 0",
          "bottom left": "0 100%",
          "bottom right": "100% 100%",
          center: "50% 50%",
        },
        ji = { soft: [0.6], medium: [1], hard: [1.5] };
      function Wi(
        e,
        t,
        n,
        a,
        {
          direction: r = Li.schema.direction.default,
          bounce: i = Li.schema.bounce.default,
          ...o
        } = {}
      ) {
        const s = Ui[r],
          u = e.sequence(o);
        return (
          u
            .add(e.animate("BaseNone", t, 0, 0, { transformOrigin: s }), 0)
            .add(
              e.animate("BaseScale", t, n, a, {
                to: { scale: 0 },
                ease: "Quint.easeIn",
                easeParams: ji[i],
              }),
              0
            )
            .add(
              e.animate("BaseFade", t, 0.15, a, {
                to: { autoAlpha: 0 },
                ease: "Sine.easeOut",
              }),
              "-=0.15"
            ),
          u.get()
        );
      }
      const Qi = "CollapseOut",
        Zi = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        Gi = { soft: 0.85, medium: 0.4, hard: 0 };
      function Ki(
        e,
        t,
        n,
        a,
        { power: r = Zi.schema.power.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = Gi[r];
        return (
          o.add([
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Cubic.easeOut",
            }),
            e.animate("BaseScale", t, n, a, {
              to: { scale: s },
              ease: "Sine.easeOut",
            }),
          ]),
          o.get()
        );
      }
      const Ji = "Conceal",
        eo = {
          groups: ["mask", "exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "center", "bottom", "left"],
              default: "left",
            },
          },
        },
        to = {
          top: { dx: 0, dy: -1, idx: 0 },
          right: { dx: 1, dy: 0, idx: 1 },
          bottom: { dx: 0, dy: 1, idx: 2 },
          left: { dx: -1, dy: 0, idx: 3 },
        };
      function no(
        e,
        t,
        n,
        a,
        { direction: r = eo.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, 0.75 * n, a + 0.25 * n, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Cubic.easeInOut",
            })
          ),
          t.forEach((t) => {
            const i = e.engine.getBoundingRect(t),
              s = e.engine.getBoundingContentRect(t),
              u = Number(t.getAttribute("data-angle")) || 0,
              c = (u * Math.PI) / 180,
              d = "center" !== r ? la(to, r, u) : r;
            if (void 0 === t.style.clipPath) {
              const r = da(d),
                i = to[d] || { dx: 0, dy: 0 },
                u = ha(s, { dx: i.dx / 2, dy: i.dy / 2 }, c);
              o.add(
                [
                  e.animate("BaseScale", t, n, a, {
                    to: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    to: u,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            } else {
              const r = ca(i, s, d);
              o.add(
                e.animate("BaseClipPath", t, n, a, {
                  to: r,
                  ease: "Cubic.easeInOut",
                }),
                0
              );
            }
          }),
          o.get()
        );
      }
      const ao = "FadeOut",
        ro = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function io(e, t, n, a, r) {
        const i = e.sequence(r);
        return (
          i.add(
            e.animate("BaseFade", t, n, a, {
              to: { autoAlpha: 0 },
              ease: "Cubic.easeIn",
            })
          ),
          i.get()
        );
      }
      const oo = "FlipOut",
        so = {
          groups: ["3d", "exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
          },
        },
        uo = {
          top: { angleX: "90", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "90", idx: 1 },
          bottom: { angleX: "-90", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-90", idx: 3 },
        };
      function co(
        e,
        t,
        n,
        a,
        { direction: r = so.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, 0.75 * n, a + 0.25 * n, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Sine.easeOut",
            })
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = la(uo, r, i),
              u = { rotationX: uo[s].angleX, rotationY: uo[s].angleY };
            o.add(
              e.animate("BaseRotate3D", t, 0.75 * n, a, {
                to: u,
                perspective: 800,
                ease: "Strong.easeOut",
              }),
              0
            );
          }),
          o.get()
        );
      }
      const lo = "FloatOut",
        mo = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "right",
            },
          },
        },
        fo = {
          top: { dx: 0, dy: -1, distance: 60 },
          right: { dx: 1, dy: 0, distance: 120 },
          bottom: { dx: 0, dy: 1, distance: 60 },
          left: { dx: -1, dy: 0, distance: 120 },
        };
      function po(
        e,
        t,
        n,
        a,
        { direction: r = mo.schema.direction.default, ...i } = {}
      ) {
        const o = fo[r],
          s = e.frame.innerWidth,
          u = (e.frame.innerHeight, e.sequence(i));
        return (
          u.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Cubic.easeOut",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t);
            let i;
            const c = o.dy * o.distance;
            (i =
              o.dx > 0
                ? o.dx * Math.max(0, Math.min(s - r.right, o.distance))
                : o.dx * Math.max(0, Math.min(r.left, o.distance))),
              u.add(
                e.animate("BasePosition", t, n, a, {
                  to: { x: i, y: c },
                  ease: "Sine.easeIn",
                }),
                0
              );
          }),
          u.get()
        );
      }
      const ho = "FlyOut",
        go = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: [
                "top",
                "top left",
                "top right",
                "left",
                "bottom",
                "bottom left",
                "bottom right",
                "right",
              ],
              default: "right",
            },
          },
        },
        yo = {
          top: { dy: -1 },
          right: { dx: 1 },
          bottom: { dy: 1 },
          left: { dx: -1 },
        };
      function bo(
        e,
        t,
        n,
        a,
        { direction: r = go.schema.direction.default, ...i } = {}
      ) {
        const o = (function (e) {
            const t = { dx: 0, dy: 0 };
            return (
              e.forEach((e) => {
                yo[e] && Object.assign(t, yo[e]);
              }),
              t
            );
          })(r.split(" ")),
          s = e.frame.innerWidth,
          u = e.frame.innerHeight,
          c = e.sequence(i);
        return (
          c.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = o.dx > 0 ? s - r.right : o.dx * r.left,
              d = o.dy > 0 ? u - r.top : o.dy * r.bottom;
            c.add(
              e.animate("BasePosition", t, n, a, {
                to: { x: i, y: d },
                ease: "Sine.easeIn",
              }),
              0
            );
          }),
          c.get()
        );
      }
      const vo = "FoldOut",
        xo = {
          groups: ["3d", "exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
          },
        },
        _o = {
          top: {
            angleX: "-90",
            angleY: "0",
            origin: { x: "50%", y: "0" },
            idx: 0,
          },
          right: {
            angleX: "0",
            angleY: "-90",
            origin: { x: "100%", y: "50%" },
            idx: 1,
          },
          bottom: {
            angleX: "90",
            angleY: "0",
            origin: { x: "50%", y: "100%" },
            idx: 2,
          },
          left: {
            angleX: "0",
            angleY: "90",
            origin: { x: "0", y: "50%" },
            idx: 3,
          },
        };
      function wo(
        e,
        t,
        n,
        a,
        { direction: r = xo.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, 0.75 * n, a + 0.25 * n, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Sine.easeInOut",
            })
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = (i * Math.PI) / 180,
              u = la(_o, r, i),
              c = e.engine.getBoundingRect(t),
              d = e.engine.getBoundingContentRect(t),
              l = ma(_o[u].origin, d, s),
              m = fa(c, d, _o[u].origin),
              f = { rotationX: _o[u].angleX, rotationY: _o[u].angleY };
            o.add(
              [
                e.animate("BasePosition", t, 0, a, {
                  from: { transformOrigin: m, x: l.x, y: l.y },
                }),
                e.animate("BaseRotate3D", t, n, a, {
                  to: f,
                  perspective: 800,
                  ease: "Cubic.easeInOut",
                }),
              ],
              0
            );
          }),
          o.get()
        );
      }
      const Oo = "GlideOut",
        Bo = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            angle: { type: "number", min: 0, max: 360, default: 0 },
            distance: { type: "number", min: 0, default: 0 },
          },
        };
      function To(
        e,
        t,
        n,
        a,
        {
          angle: r = Bo.schema.angle.default,
          distance: i = Bo.schema.distance.default,
          ...o
        } = {}
      ) {
        const s = (r * Math.PI) / 180,
          u = Math.sin(s) * i,
          c = Math.cos(s) * i * -1,
          d = e.sequence(o);
        return (
          d
            .add(
              e.animate("BasePosition", t, n, a, {
                to: { x: u, y: c },
                ease: "Sine.easeInOut",
              }),
              0
            )
            .add(
              e.animate("BaseFade", t, 0.1, 0, {
                from: { opacity: 1 },
                to: { autoAlpha: 0 },
                ease: "Sine.easeOut",
                immediateRender: !1,
              }),
              "-=0.1"
            ),
          d.get()
        );
      }
      const Po = "PopOut",
        ko = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        So = { soft: 0.8, medium: 2.4, hard: 4 };
      function Mo(
        e,
        t,
        n,
        a,
        { power: r = ko.schema.power.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = So[r];
        return (
          o.add([
            e.animate("BaseFade", t, 0.75 * n, a + 0.25 * n, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Sine.easeOut",
            }),
            e.animate("BaseScale", t, n, a, {
              to: { scale: s },
              ease: "Sine.easeOut",
            }),
          ]),
          o.get()
        );
      }
      const Io = "SlideOut",
        Fo = {
          groups: ["mask", "exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        Ro = {
          top: { dx: 0, dy: -1, idx: 0, clip: "bottom" },
          right: { dx: 1, dy: 0, idx: 1, clip: "left" },
          bottom: { dx: 0, dy: 1, idx: 2, clip: "top" },
          left: { dx: -1, dy: 0, idx: 3, clip: "right" },
        },
        $o = { soft: 70, medium: 35, hard: 0 };
      function Co(
        e,
        t,
        n,
        a,
        {
          direction: r = Fo.schema.direction.default,
          power: i = Fo.schema.power.default,
          ...o
        } = {}
      ) {
        const s = (a || 0) + 0.75 * n,
          u = 0.25 * n,
          c = e.sequence(o);
        return (
          c.add(
            e.animate("BaseFade", t, u, s, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Cubic.easeInOut",
            })
          ),
          t.forEach((t) => {
            const o = e.engine.getBoundingRect(t),
              s = e.engine.getBoundingContentRect(t),
              u = Number(t.getAttribute("data-angle")) || 0,
              d = (u * Math.PI) / 180,
              l = la(Ro, r, u);
            if (void 0 === t.style.clipPath) {
              const r = da(l),
                i = ha(s, { dx: Ro[l].dx / 2, dy: Ro[l].dy / 2 }, d);
              c.add(
                [
                  e.animate("BaseScale", t, n, a, {
                    to: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    to: i,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            } else {
              const r = ca(o, s, Ro[l].clip, { minimum: $o[i] }),
                u = ha(s, Ro[l], d, (100 - $o[i]) / 100);
              c.add(
                [
                  e.animate("BaseClipPath", t, n, a, {
                    to: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    to: u,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            }
          }),
          c.get()
        );
      }
      const Eo = "SpinOut",
        Ao = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            cycles: { type: "number", min: 0, default: 5 },
            direction: { type: "string", enum: ["cw", "ccw"], default: "cw" },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "hard",
            },
          },
        },
        Yo = { cw: { direction: -1 }, ccw: { direction: 1 } },
        Do = { soft: 0.8, medium: 0.5, hard: 0 };
      function Xo(
        e,
        t,
        n,
        a,
        {
          direction: r = Ao.schema.direction.default,
          cycles: i = Ao.schema.cycles.default,
          power: o = Ao.schema.power.default,
          ...s
        } = {}
      ) {
        const u = Do[o],
          c = (Yo[r].direction > 0 ? "+=" : "-=") + 360 * i,
          d = e.sequence(s);
        return (
          d.add([
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Sine.easeIn",
            }),
            e.animate("BaseScale", t, n, a, {
              to: { scale: u },
              ease: "Sine.easeIn",
            }),
            e.animate("BaseRotate", t, n, a, {
              to: { rotation: c },
              ease: "Sine.easeOut",
            }),
          ]),
          d.get()
        );
      }
      const qo = "TurnOut",
        Ho = {
          groups: ["exit", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "right",
            },
          },
        },
        Vo = { left: { dx: -1, angle: 90 }, right: { dx: 1, angle: 90 } };
      function No(
        e,
        t,
        n,
        a,
        { direction: r = Ho.schema.direction.default, ...i } = {}
      ) {
        const o = Vo[r],
          s = e.frame.innerWidth,
          u = (e.frame.innerHeight, e.sequence(i));
        return (
          u.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 1 },
              to: { autoAlpha: 0 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = o.dx > 0 ? s - r.right : o.dx * r.left,
              c = Math.min(-1.5 * r.height, Math.max(-300, -5.5 * r.height)),
              d = (o.dx > 0 ? "+=" : "-=") + o.angle,
              l = [
                { x: i, y: c },
                { x: o.dx * r.width, y: c },
              ];
            u.add(
              [
                e.animate("BasePosition", t, n, a, {
                  to: { bezier: { values: l, type: "soft" } },
                  ease: "Sine.easeIn",
                }),
                e.animate("BaseRotate", t, n, a, {
                  to: { rotation: d },
                  ease: "Sine.easeIn",
                }),
              ],
              0
            );
          }),
          u.get()
        );
      }
      const zo = "ModesMotionNoDimensions",
        Lo = {
          groups: ["entrance", "animation"],
          modeChange: !0,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Uo(e, t, n, a, { from: r, ...i }) {
        const o = e.sequence(i);
        return (
          t.forEach((t) => {
            const i = ya(e.engine.getBoundingRect(t), r);
            o.add(
              e.animate("BasePosition", t, n, a, {
                from: i,
                ease: "Cubic.easeInOut",
              }),
              0
            ),
              o.add(
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: r.rotation },
                  ease: "Cubic.easeInOut",
                }),
                0
              );
          }),
          o.get()
        );
      }
      const jo = "ModesMotionNoScale",
        Wo = {
          groups: ["entrance", "animation"],
          modeChange: !0,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Qo(e, t, n, a, { from: r, ...i }) {
        const o = e.sequence(i),
          { width: s, height: u, rotation: c } = r;
        return (
          t.forEach((t) => {
            const i = ya(e.engine.getBoundingRect(t), r);
            o.add(
              e.animate("BasePosition", t, n, a, {
                from: i,
                ease: "Cubic.easeInOut",
              }),
              0
            ),
              o.add(
                e.animate("BaseDimensions", t, n, a, {
                  from: { width: s, height: u },
                  ease: "Cubic.easeInOut",
                }),
                0
              ),
              o.add(
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: c },
                  ease: "Cubic.easeInOut",
                }),
                0
              );
          }),
          o.get()
        );
      }
      const Zo = "ModesMotionScale",
        Go = {
          groups: ["entrance", "animation"],
          modeChange: !0,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Ko(e, t, n, a, { from: r, ...i }) {
        const o = e.sequence(i);
        return (
          t.forEach((t) => {
            const i = e.engine.getBoundingRect(t),
              s = ya(i, r, !0),
              u = (function (e, t) {
                return {
                  scaleX: t.width / e.width,
                  scaleY: t.height / e.height,
                };
              })(i, r);
            o.add(
              e.animate("BasePosition", t, n, a, {
                from: s,
                ease: "Cubic.easeInOut",
              }),
              0
            ),
              o.add(
                e.animate("BaseScale", t, n, a, {
                  from: u,
                  ease: "Cubic.easeInOut",
                }),
                0
              ),
              o.add(
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: r.rotation },
                  ease: "Cubic.easeInOut",
                }),
                0
              );
          }),
          o.get()
        );
      }
      function Jo(e) {
        return !Number.isNaN(e) && Number.isFinite(e);
      }
      function es(e) {
        const t = typeof e;
        return "function" === t || ("object" === t && !Array.isArray(e) && !!e);
      }
      const ts = {
        string(e, t, n) {
          return (
            "string" == typeof n &&
            (t.enum ? t.enum.includes(n) : !t.pattern || n.match(t.pattern))
          );
        },
        number(e, t, n) {
          if (!Jo(n)) return !1;
          const {
            min: a = Number.MIN_SAFE_INTEGER,
            max: r = Number.MAX_SAFE_INTEGER,
          } = t;
          return n >= a && n <= r && (!t.enum || t.enum.includes(n));
        },
        integer(e, t, n) {
          return ts.number(e, t, n) && parseInt(n, 10) === n;
        },
        numberLike(e, t, n) {
          return (
            Jo(+(a = n)) ||
            (function (e) {
              return "string" == typeof e && /^(-|[+-]=)?\d*\.?\d+$/.test(e);
            })(a)
          );
          var a;
        },
        boolean(e, t, n) {
          return "boolean" == typeof n;
        },
        object(e, t, n) {
          return !!es(n) && (!es(t.properties) || ns(t.properties, n));
        },
        array(e, t, n) {
          return Array.isArray(n);
        },
        element(e, t, n) {
          return !!es(n) && Boolean(n.tagName);
        },
        elements(e, t, n) {
          return !!es(n) && Nn(n).every((n) => ts.element(e, t, n));
        },
      };
      function ns(e, t, n) {
        const a = Object.entries(e)
          .map(([e, n]) => {
            const a = t[e],
              r = ts[n.type];
            return (
              !(void 0 === a || !r || r(e, n, a)) && {
                key: e,
                value: JSON.stringify(a),
                expected: n,
              }
            );
          })
          .filter((e) => e);
        return n && a.length && n(a), !a.length;
      }
      const as = "BaseBgClipPath",
        rs = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            clipParent: { type: "element" },
            baseDirection: {
              type: "string",
              enum: ["top", "right", "center", "bottom", "left", "initial"],
              default: "initial",
            },
            baseMinimum: { type: "number", min: 0, max: 1, default: 0 },
            in: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                direction: {
                  type: "string",
                  enum: ["top", "right", "center", "bottom", "left", "initial"],
                },
                minimum: { type: "number", min: 0, max: 1, default: 0 },
              },
            },
            out: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                direction: {
                  type: "string",
                  enum: ["top", "right", "center", "bottom", "left", "initial"],
                },
                minimum: { type: "number", min: 0, max: 1, default: 0 },
              },
            },
          },
        };
      function is(
        e,
        t,
        n,
        a,
        {
          baseDirection: r = rs.schema.baseDirection.default,
          baseMinimum: i = rs.schema.baseMinimum.default,
          clipParent: o,
          in: {
            start: s,
            end: u,
            ease: c,
            direction: d,
            minimum: l = rs.schema.in.properties.minimum.default,
          } = {},
          out: {
            start: m,
            end: f,
            ease: p,
            direction: h,
            minimum: g = rs.schema.out.properties.minimum.default,
          } = {},
          ...y
        } = {}
      ) {
        o ||
          console.warn(
            `animations-kit: ${as}: "clipParent: element" is a mandatory parameter for this animation`
          );
        const b = !!e.frame.chrome,
          v = e.sequence(y),
          x = Jo(s) && Jo(u),
          _ = Jo(m) && Jo(f),
          w = e.engine.getBoundingRect(o),
          O = ca(w, w, r, { minimum: i, useClipRect: b });
        if ((v.add(e.animate("BaseNone", t, n, a), 0), x)) {
          u < s &&
            console.warn(
              `animations-kit: ${as}: "in" end value ${u} must be larger than "in" start value ${s}`
            );
          const r = n * Math.max(u - s, 0),
            i = a + n * s,
            o = ca(w, w, d, { minimum: l, useClipRect: b });
          v.add(
            e.animate("BaseClipPath", t, r, i, {
              from: o,
              to: O,
              ease: c,
              force3D: !0,
              immediateRender: !_ || s < m,
              useClipRect: b,
            }),
            0
          );
        }
        if (_) {
          f < m &&
            console.warn(
              `animations-kit: ${as}: "out" end value ${f} must be larger than "out" start value ${m}`
            );
          const r = n * Math.max(f - m, 0),
            i = a + n * m,
            o = ca(w, w, h, { minimum: g, useClipRect: b });
          v.add(
            e.animate("BaseClipPath", t, r, i, {
              from: O,
              to: o,
              ease: p,
              force3D: !0,
              immediateRender: !x || m < s,
              useClipRect: b,
            }),
            0
          );
        }
        return v.get();
      }
      const os = "BaseBgFade",
        ss = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            baseOpacity: { type: "number", min: 0, default: 1 },
            in: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                opacity: { type: "number", min: 0, max: 1 },
              },
            },
            out: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                opacity: { type: "number", min: 0, max: 1 },
              },
            },
          },
        };
      function us(
        e,
        t,
        n,
        a,
        {
          baseOpacity: r = ss.schema.baseOpacity.default,
          in: { start: i, end: o, ease: s, opacity: u } = {},
          out: { start: c, end: d, ease: l, opacity: m } = {},
          ...f
        } = {}
      ) {
        const p = e.sequence(f),
          h = Jo(i) && Jo(o),
          g = Jo(c) && Jo(d);
        if ((p.add(e.animate("BaseNone", t, n, a), 0), h)) {
          o < i &&
            console.warn(
              `animations-kit: ${os}: "in" end value ${o} must be larger than "in" start value ${i}`
            );
          const d = n * Math.max(o - i, 0),
            l = a + n * i;
          p.add(
            e.animate("BaseFade", t, d, l, {
              from: { opacity: u },
              to: { opacity: r },
              ease: s,
              force3D: !0,
              immediateRender: !g || i < c,
            }),
            0
          );
        }
        if (g) {
          d < c &&
            console.warn(
              `animations-kit: ${os}: "out" end value ${d} must be larger than "out" start value ${c}`
            );
          const o = n * Math.max(d - c, 0),
            s = a + n * c;
          p.add(
            e.animate("BaseFade", t, o, s, {
              from: { opacity: r },
              to: { opacity: m },
              ease: l,
              force3D: !0,
              immediateRender: !h || c < i,
            }),
            0
          );
        }
        return p.get();
      }
      const cs = "BaseBgParallaxY",
        ds = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            start: { type: "number", min: 0, max: 1 },
            end: { type: "number", min: 0, max: 1 },
            ease: { type: "string" },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            speedFactor: { type: "number" },
          },
        };
      function ls(
        e,
        t,
        n,
        a,
        {
          speedFactor: r,
          start: i,
          end: o,
          ease: s,
          componentHeight: u,
          viewPortHeight: c,
          ...d
        } = {}
      ) {
        t = Nn(t);
        const l = e.sequence(d);
        t.forEach((e) => {
          e.style.willChange = "transform";
        });
        const m = -c * r,
          f = u * r,
          p = f - m;
        return (
          l.add(
            e.animate("BaseBgPositionY", t, n, a, {
              from: m + p * i,
              to: f - p * (1 - o),
              start: i,
              end: o,
              ease: s,
            }),
            0
          ),
          l.get()
        );
      }
      const ms = "BaseBgPositionX",
        fs = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            start: { type: "number", min: 0, max: 1 },
            end: { type: "number", min: 0, max: 1 },
            from: { type: "number" },
            to: { type: "number" },
            ease: { type: "string" },
          },
        };
      function ps(
        e,
        t,
        n,
        a,
        { start: r, end: i, from: o, to: s, ease: u, ...c } = {}
      ) {
        const d = e.sequence(c);
        d.add(e.animate("BaseNone", t, n, a), 0),
          i < r &&
            console.warn(
              `animations-kit: ${ms}: end value ${i} should be larger than start value ${r}`
            );
        const l = n * Math.max(i - r, 0),
          m = a + n * r;
        return (
          d.add(
            e.animate("BasePosition", t, l, m, {
              from: { x: o },
              to: { x: s },
              ease: u,
              force3D: !0,
              immediateRender: !0,
            }),
            0
          ),
          d.get()
        );
      }
      const hs = "BaseBgPositionY",
        gs = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            start: { type: "number", min: 0, max: 1 },
            end: { type: "number", min: 0, max: 1 },
            from: { type: "number" },
            to: { type: "number" },
            ease: { type: "string" },
          },
        };
      function ys(
        e,
        t,
        n,
        a,
        { start: r, end: i, from: o, to: s, ease: u, ...c } = {}
      ) {
        const d = e.sequence(c);
        d.add(e.animate("BaseNone", t, n, a), 0),
          i < r &&
            console.warn(
              `animations-kit: ${hs}: end value ${i} should be larger than start value ${r}`
            );
        const l = n * Math.max(i - r, 0),
          m = a + n * r;
        return (
          d.add(
            e.animate("BasePosition", t, l, m, {
              from: { y: o },
              to: { y: s },
              ease: u,
              force3D: !0,
              immediateRender: !0,
            }),
            0
          ),
          d.get()
        );
      }
      const bs = "BaseBgRotate",
        vs = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            baseRotation: { type: "number", default: 0 },
            in: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                rotation: { type: "number" },
              },
            },
            out: {
              type: "object",
              properties: {
                start: { type: "number", min: 0 },
                end: { type: "number", min: 0 },
                ease: { type: "string" },
                rotation: { type: "number" },
              },
            },
          },
        };
      function xs(
        e,
        t,
        n,
        a,
        {
          baseRotation: r = vs.schema.baseRotation.default,
          in: { start: i, end: o, ease: s, rotation: u } = {},
          out: { start: c, end: d, ease: l, rotation: m } = {},
          ...f
        } = {}
      ) {
        const p = e.sequence(f),
          h = Jo(i) && Jo(o),
          g = Jo(c) && Jo(d);
        if ((p.add(e.animate("BaseNone", t, n, a), 0), h)) {
          o < i &&
            console.warn(
              `animations-kit: ${bs}: "in" end value ${o} must be larger than "in" start value ${i}`
            );
          const d = n * Math.max(o - i, 0),
            l = a + n * i;
          p.add(
            e.animate("BaseRotate", t, d, l, {
              from: { rotation: u },
              to: { rotation: r },
              ease: s,
              force3D: !0,
              immediateRender: !g || i < c,
            }),
            0
          );
        }
        if (g) {
          d < c &&
            console.warn(
              `animations-kit: ${bs}: "out" end value ${d} must be larger than "out" start value ${c}`
            );
          const o = n * Math.max(d - c, 0),
            s = a + n * c;
          p.add(
            e.animate("BaseRotate", t, o, s, {
              from: { rotation: r },
              to: { rotation: m },
              ease: l,
              force3D: !0,
              immediateRender: !h || c < i,
            }),
            0
          );
        }
        return p.get();
      }
      const _s = "BaseBgScale",
        ws = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            baseScaleX: { type: "number", default: 1 },
            baseScaleY: { type: "number", default: 1 },
            in: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                scaleX: { type: "number" },
                scaleY: { type: "number" },
              },
            },
            out: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                scaleX: { type: "number" },
                scaleY: { type: "number" },
              },
            },
          },
        };
      function Os(
        e,
        t,
        n,
        a,
        {
          baseScaleX: r = ws.schema.baseScaleX.default,
          baseScaleY: i = ws.schema.baseScaleY.default,
          in: { start: o = 0, end: s = 0, ease: u, scaleX: c, scaleY: d } = {},
          out: { start: l = 0, end: m = 0, ease: f, scaleX: p, scaleY: h } = {},
          ...g
        } = {}
      ) {
        const y = e.sequence(g),
          b = Jo(o) && Jo(s),
          v = Jo(l) && Jo(m);
        if ((y.add(e.animate("BaseNone", t, n, a), 0), b)) {
          const m = {},
            f = {};
          s < o &&
            console.warn(
              `animations-kit: ${_s}: "in" end value ${s} must be larger than "in" start value ${o}`
            ),
            void 0 !== c && ((m.scaleX = c), (f.scaleX = r)),
            void 0 !== d && ((m.scaleY = d), (f.scaleY = i));
          const p = n * Math.max(s - o, 0),
            h = a + n * o;
          y.add(
            e.animate("BaseScale", t, p, h, {
              from: m,
              to: f,
              ease: u,
              force3D: !0,
              immediateRender: !v || o < l,
            }),
            0
          );
        }
        if (v) {
          const s = {},
            u = {};
          m < l &&
            console.warn(
              `animations-kit: ${_s}: "out" end value ${m} must be larger than "out" start value ${l}`
            ),
            void 0 !== p && ((s.scaleX = r), (u.scaleX = p)),
            void 0 !== h && ((s.scaleY = i), (u.scaleY = h));
          const c = n * Math.max(m - l, 0),
            d = a + n * l;
          y.add(
            e.animate("BaseScale", t, c, d, {
              from: s,
              to: u,
              ease: f,
              force3D: !0,
              immediateRender: !b || l < o,
            }),
            0
          );
        }
        return y.get();
      }
      const Bs = "BaseBgSkew",
        Ts = {
          hideOnStart: !1,
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            baseSkewX: { type: "number", default: 0 },
            baseSkewY: { type: "number", default: 0 },
            in: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                skewX: { type: "number" },
                skewY: { type: "number" },
              },
            },
            out: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                skewX: { type: "number" },
                skewY: { type: "number" },
              },
            },
          },
        };
      function Ps(
        e,
        t,
        n,
        a,
        {
          baseSkewX: r = Ts.schema.baseSkewX.default,
          baseSkewY: i = Ts.schema.baseSkewY.default,
          in: { start: o = 0, end: s = 0, ease: u, skewX: c, skewY: d } = {},
          out: { start: l = 0, end: m = 0, ease: f, skewX: p, skewY: h } = {},
          ...g
        } = {}
      ) {
        const y = e.sequence(g),
          b = Jo(o) && Jo(s),
          v = Jo(l) && Jo(m);
        if ((y.add(e.animate("BaseNone", t, n, a), 0), b)) {
          const m = {},
            f = {};
          s < o &&
            console.warn(
              `animations-kit: ${Bs}: "in" end value ${s} must be larger than "in" start value ${o}`
            ),
            void 0 !== c && ((m.skewX = c), (f.skewX = r)),
            void 0 !== d && ((m.skewY = d), (f.skewY = i));
          const p = n * Math.max(s - o, 0),
            h = a + n * o;
          y.add(
            e.animate("BaseSkew", t, p, h, {
              from: m,
              to: f,
              ease: u,
              force3D: !0,
              immediateRender: !v || o < l,
            }),
            0
          );
        }
        if (v) {
          const s = {},
            u = {};
          m < l &&
            console.warn(
              `animations-kit: ${Bs}: "out" end value ${m} must be larger than "out" start value ${l}`
            ),
            void 0 !== p && ((s.skewX = r), (u.skewX = p)),
            void 0 !== h && ((s.skewY = i), (u.skewY = h));
          const c = n * Math.max(m - l, 0),
            d = a + n * l;
          y.add(
            e.animate("BaseSkew", t, c, d, {
              from: s,
              to: u,
              ease: f,
              force3D: !0,
              immediateRender: !b || l < o,
            }),
            0
          );
        }
        return y.get();
      }
      const ks = (e, t) => (t * (e - 1)) / (e || 1e-4),
        Ss = "BaseBgZoom",
        Ms = {
          hideOnStart: !1,
          getMaxTravel(e, t) {
            return t + e.height;
          },
          groups: ["animation", "background", "base"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            perspectiveParent: { type: "element" },
            viewPortHeight: { type: "number", min: 0 },
            componentHeight: { type: "number", min: 0 },
            speedFactor: { type: "number", default: 0 },
            baseScale: { type: "number", min: 0, default: 1 },
            in: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                scale: { type: "number", min: 0 },
              },
            },
            out: {
              type: "object",
              properties: {
                start: { type: "number", min: 0, max: 1 },
                end: { type: "number", min: 0, max: 1 },
                ease: { type: "string" },
                scale: { type: "number", min: 0 },
              },
            },
          },
        },
        Is = 100;
      function Fs(
        e,
        t,
        n,
        a,
        {
          speedFactor: r = Ms.schema.speedFactor.default,
          baseScale: i = Ms.schema.baseScale.default,
          perspectiveParent: o,
          componentHeight: s,
          viewPortHeight: u,
          in: { start: c = 0, end: d = 0, ease: l, scale: m } = {},
          out: { start: f = 0, end: p = 0, ease: h, scale: g } = {},
          ...y
        } = {}
      ) {
        o ||
          console.warn(
            `animations-kit: ${Ss}: "perspectiveParent: element" is a mandatory parameter for this animation`
          );
        const b = e.sequence(y),
          v = Jo(c) && Jo(d),
          x = Jo(f) && Jo(p);
        if (
          (b.add(
            e.animate("BasePosition", o, n, a, {
              from: {
                perspective: Is,
                perspectiveOrigin: `50% ${s / 2 - u * r}px`,
              },
              to: {
                perspective: Is,
                perspectiveOrigin: `50% ${s / 2 + s * r}px`,
              },
              ease: "none",
              immediateRender: !0,
            }),
            0
          ),
          v)
        ) {
          d < c &&
            console.warn(
              `animations-kit: ${Ss}: "in" end value ${d} must be larger than "in" start value ${c}`
            );
          const r = n * Math.max(d - c, 0),
            o = a + n * c;
          b.add(
            e.animate("BasePosition", t, r, o, {
              from: { z: ks(i, Is) },
              to: { z: ks(m, Is) },
              ease: l,
              force3D: !0,
              immediateRender: !x || c < f,
            }),
            0
          );
        }
        if (x) {
          p < f &&
            console.warn(
              `animations-kit: ${Ss}: "out" end value ${p} must be larger than "out" start value ${f}`
            );
          const r = n * Math.max(p - f, 0),
            o = a + n * f;
          b.add(
            e.animate("BasePosition", t, r, o, {
              from: { z: ks(g, Is) },
              to: { z: ks(i, Is) },
              ease: h,
              force3D: !0,
              immediateRender: !v || f < c,
            }),
            0
          );
        }
        return b.get();
      }
      const Rs = "BackgroundParallaxZoom",
        $s = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          groups: ["animation", "background", "legacy"],
          schema: {},
        };
      function Cs(e, t) {
        return e.sequence(t).get();
      }
      const Es = "BgFadeIn",
        As = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Ys(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          { TOP_TO_BOTTOM: d, CENTER_TO_CENTER: l } = va(
            r,
            i,
            o,
            s,
            ba.legacy_in
          );
        return (
          c.add(
            e.animate("BaseBgFade", t, n, a, {
              in: { start: d, end: l, opacity: 0, ease: "sine.in" },
            })
          ),
          c.get()
        );
      }
      const Ds = "BgParallax",
        Xs = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          getMediaDimensions(e, t, n) {
            return { width: e, height: Math.max(t, n) };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            speedFactor: { type: "number", default: 0.8 },
          },
        };
      function qs(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          speedFactor: u = Xs.schema.speedFactor.default,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          { TOP_TO_BOTTOM: l, BOTTOM_TO_TOP: m } = va(r, i, o, s, ba.normal);
        return (
          d.add(
            e.animate("BaseBgParallaxY", t, n, a, {
              viewPortHeight: s,
              componentHeight: r,
              speedFactor: u,
              start: l,
              end: m,
              ease: "none",
            })
          ),
          d.get()
        );
      }
      const Hs = "BgReveal",
        Vs = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          getMediaDimensions(e, t, n) {
            return { width: e, height: Math.max(t, n) };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            speedFactor: { type: "number", default: 1 },
            viewPortHeight: { type: "number", min: 0 },
            componentHeight: { type: "number", min: 0 },
          },
        };
      function Ns(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          speedFactor: u = Vs.schema.speedFactor.default,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          { TOP_TO_BOTTOM: l, BOTTOM_TO_TOP: m } = va(r, i, o, s, ba.normal);
        return (
          d.add(
            e.animate("BaseBgParallaxY", t, n, a, {
              viewPortHeight: s,
              componentHeight: r,
              speedFactor: u,
              start: l,
              end: m,
              ease: "none",
            })
          ),
          d.get()
        );
      }
      const zs = "BgCloseUp",
        Ls = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            perspectiveParent: { type: "element" },
          },
        };
      function Us(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          perspectiveParent: u,
          ...c
        } = {}
      ) {
        const d = e.sequence(c);
        {
          const { TOP_TO_BOTTOM: c, BOTTOM_TO_TOP: l } = va(
            r,
            i,
            o,
            s,
            ba.out_first_fold
          );
          d.add([
            ...t.map((t) =>
              e.animate("BaseBgZoom", t.children, n, a, {
                viewPortHeight: s,
                componentHeight: r,
                perspectiveParent: u,
                in: { start: c, end: l, scale: 5, ease: "none" },
              })
            ),
          ]);
        }
        {
          const {
            CENTER_TO_CENTER: u,
            BOTTOM_TO_TOP: c,
            withOffset: l,
            isInFirstFold: m,
          } = va(r, i, o, s, ba.normal);
          d.add(
            e.animate("BaseBgFade", t, n, a, {
              out: {
                start: l(u, m ? 0 : 5),
                end: l(c, m ? 0 : -5),
                opacity: 0,
                ease: "none",
              },
            }),
            0
          );
        }
        return d.get();
      }
      const js = "BgExpand",
        Ws = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Qs(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          {
            TOP_TO_BOTTOM: d,
            CENTER_TO_CENTER: l,
            withOffset: m,
          } = va(r, i, o, s, ba.in_last_fold);
        return (
          c.add([
            e.animate("BaseBgScale", t, n, a, {
              in: {
                start: d,
                end: m(l, 5),
                scaleX: 0.8,
                scaleY: 0.8,
                ease: "sine.out",
              },
            }),
            ...t.map((t) =>
              e.animate("BaseBgClipPath", t.children, n, a, {
                clipParent: t,
                in: {
                  start: d,
                  end: l,
                  direction: "center",
                  minimum: 60,
                  ease: "sine.out",
                },
              })
            ),
          ]),
          c.get()
        );
      }
      const Zs = "BgFadeBack",
        Gs = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Ks(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          {
            TOP_TO_TOP: d,
            CENTER_TO_TOP: l,
            BOTTOM_TO_TOP: m,
          } = va(r, i, o, s, ba.normal);
        return (
          c.add([
            e.animate("BaseBgFade", t, n, a, {
              out: { start: d, end: m, opacity: 0, ease: "none" },
            }),
            e.animate("BaseBgScale", t, n, a, {
              out: {
                start: d,
                end: l,
                scaleX: 0.7,
                scaleY: 0.7,
                ease: "sine.out",
              },
            }),
          ]),
          c.get()
        );
      }
      const Js = "BgFadeOut",
        eu = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function tu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          { TOP_TO_TOP: d, BOTTOM_TO_TOP: l } = va(r, i, o, s, ba.normal);
        return (
          c.add(
            e.animate("BaseBgFade", t, n, a, {
              out: { start: d, end: l, opacity: 0, ease: "sine.out" },
            })
          ),
          c.get()
        );
      }
      const nu = "BgFake3D",
        au = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          getMediaDimensions(e, t, n) {
            return { width: e, height: Math.max(t, n) };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            speedFactor: { type: "number", default: 0.9 },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
          },
        };
      function ru(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          speedFactor: u = au.schema.speedFactor.default,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          { TOP_TO_BOTTOM: l, BOTTOM_TO_TOP: m } = va(r, i, o, s, ba.normal);
        return (
          d.add([
            e.animate("BaseBgParallaxY", t, n, a, {
              viewPortHeight: s,
              componentHeight: r,
              speedFactor: u,
              start: l,
              end: m,
              ease: "sine.out",
            }),
            ...t.map((t) =>
              e.animate("BaseBgZoom", t.children, n, a, {
                viewPortHeight: s,
                componentHeight: r,
                perspectiveParent: t,
                speedFactor: u,
                in: { start: l, end: m, scale: 1.2, ease: "sine.in" },
              })
            ),
            e.animate("BaseBgScale", t, n, a, {
              in: { start: l, end: m, scaleY: 1.3, ease: "none" },
            }),
          ]),
          d.get()
        );
      }
      const iu = "BgPanLeft",
        ou = 0.2,
        su = {
          hideOnStart: !1,
          getMediaDimensions(e, t) {
            return { width: e * (1 + ou), height: t };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            parallaxParent: { type: "element" },
          },
        };
      function uu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          parallaxParent: u,
          ...c
        } = {}
      ) {
        u ||
          console.warn(
            `animations-kit: ${iu}: "parallaxParent: element" is a mandatory parameter for this animation`
          );
        const d = e.sequence(c),
          { width: l } = e.engine.getBoundingRect(u),
          { TOP_TO_BOTTOM: m, BOTTOM_TO_TOP: f } = va(r, i, o, s, ba.normal);
        return (
          d.add([
            e.animate("BaseBgPositionX", t, n, a, {
              start: m,
              end: f,
              from: (l * ou) / 2,
              to: (-l * ou) / 2,
              ease: "none",
            }),
          ]),
          d.get()
        );
      }
      const cu = "BgPanRight",
        du = 0.2,
        lu = {
          hideOnStart: !1,
          getMediaDimensions(e, t) {
            return { width: e * (1 + du), height: t };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            parallaxParent: { type: "element" },
          },
        };
      function mu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          parallaxParent: u,
          ...c
        } = {}
      ) {
        u ||
          console.warn(
            `animations-kit: ${cu}: "parallaxParent: element" is a mandatory parameter for this animation`
          );
        const d = e.sequence(c),
          { width: l } = e.engine.getBoundingRect(u),
          { TOP_TO_BOTTOM: m, BOTTOM_TO_TOP: f } = va(r, i, o, s, ba.normal);
        return (
          d.add([
            e.animate("BaseBgPositionX", t, n, a, {
              start: m,
              end: f,
              from: (-l * du) / 2,
              to: (l * du) / 2,
              ease: "none",
            }),
          ]),
          d.get()
        );
      }
      const fu = "BgPullBack",
        pu = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            perspectiveParent: { type: "element" },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            speedFactor: { type: "number", default: 1 },
          },
        };
      function hu(
        e,
        t,
        n,
        a,
        {
          perspectiveParent: r,
          componentHeight: i,
          componentTop: o,
          siteHeight: s,
          viewPortHeight: u,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          { TOP_TO_BOTTOM: l, BOTTOM_TO_BOTTOM: m } = va(
            i,
            o,
            s,
            u,
            ba.in_last_fold
          );
        return (
          d.add([
            e.animate("BaseBgZoom", t, n, a, {
              viewPortHeight: u,
              componentHeight: i,
              perspectiveParent: r,
              speedFactor: 0,
              out: { start: l, end: m, scale: 2, ease: "none" },
            }),
            e.animate("BaseBgPositionY", t, n, a, {
              from: -i / 6,
              to: 0,
              start: l,
              end: m,
              ease: "none",
            }),
          ]),
          d.get()
        );
      }
      const gu = "BgRotate",
        yu = 22,
        bu = {
          hideOnStart: !1,
          getMediaDimensions(e, t) {
            return (function (e, t, n) {
              const a = (0, ua.kU)(n),
                r = Math.hypot(e, t) / 2,
                i = Math.acos(e / 2 / r),
                o = e * Math.abs(Math.cos(a)) + t * Math.abs(Math.sin(a)),
                s = e * Math.abs(Math.sin(a)) + t * Math.abs(Math.cos(a)),
                u = Math.ceil(a < i ? o : 2 * r),
                c = Math.ceil(a < (0, ua.kU)(90) - i ? s : 2 * r);
              return { width: u, height: c, scale: Math.max(c / t, u / e) };
            })(e, t, yu);
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function vu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          { TOP_TO_BOTTOM: d, TOP_TO_TOP: l } = va(r, i, o, s, ba.in_last_fold);
        return (
          c.add([
            e.animate("BaseBgRotate", t, n, a, {
              in: { start: d, end: l, rotation: yu, ease: "sine.out" },
            }),
          ]),
          c.get()
        );
      }
      const xu = "BgShrink",
        _u = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function wu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          {
            TOP_TO_BOTTOM: d,
            TOP_TO_CENTER: l,
            CENTER_TO_BOTTOM: m,
            CENTER_TO_CENTER: f,
            isInFirstFold: p,
          } = va(r, i, o, s, ba.out_first_fold);
        return (
          c.add(
            e.animate("BaseBgScale", t, n, a, {
              out: {
                start: p ? d : m,
                end: p ? l : f,
                scaleX: 0.8,
                scaleY: 0.8,
                ease: "sine.out",
              },
            })
          ),
          c.get()
        );
      }
      const Ou = "BgSkew",
        Bu = 20,
        Tu = {
          hideOnStart: !1,
          getMediaDimensions(e, t) {
            return (function (e, t, n) {
              const a = (0, ua.kU)(n);
              return { width: e, height: e * Math.tan(a) + t };
            })(e, t, Bu);
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Pu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          {
            TOP_TO_BOTTOM: d,
            CENTER_TO_CENTER: l,
            BOTTOM_TO_TOP: m,
            isInFirstFold: f,
          } = va(r, i, o, s, ba.normal),
          p = {
            out: { start: l, end: m, skewY: -Bu, ease: "none" },
            in: f ? void 0 : { start: d, end: l, skewY: Bu, ease: "none" },
          };
        return c.add([e.animate("BaseBgSkew", t, n, a, p)]), c.get();
      }
      const ku = "BgUnwind",
        Su = {
          hideOnStart: !1,
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            clipParent: { type: "element" },
          },
        };
      function Mu(
        e,
        t,
        n,
        a,
        {
          clipParent: r,
          componentHeight: i,
          componentTop: o,
          siteHeight: s,
          viewPortHeight: u,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          {
            TOP_TO_BOTTOM: l,
            TOP_TO_CENTER: m,
            CENTER_TO_CENTER: f,
            TOP_TO_TOP: p,
            withOffset: h,
            isInFirstFold: g,
          } = va(i, o, s, u, ba.in_last_fold);
        return (
          d.add([
            e.animate("BaseBgFade", t, n, a, {
              baseOpacity: 0.99,
              in: { start: h(l, 15), end: m, opacity: 0, ease: "sine.out" },
            }),
            ...t.map((t) =>
              e.animate("BaseBgRotate", t.children, n, a, {
                in: {
                  start: l,
                  end: Math.min(f, p),
                  rotation: 30 * (g ? 1 - o / u : 1),
                  ease: "sine.out",
                },
              })
            ),
            ...t.map((t) =>
              e.animate("BaseBgClipPath", t.children, n, a, {
                clipParent: r,
                in: {
                  start: l,
                  end: Math.min(f, p),
                  direction: "center",
                  minimum: g ? 100 * (1 - o / u) : 0,
                  ease: "none",
                },
              })
            ),
          ]),
          d.get()
        );
      }
      const Iu = "BgZoomIn",
        Fu = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          getMediaDimensions(e, t, n) {
            return { width: e, height: Math.max(t, n) };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            perspectiveParent: { type: "element" },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            speedFactor: { type: "number", default: 0.8 },
          },
        };
      function Ru(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          speedFactor: u = Fu.schema.speedFactor.default,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          { TOP_TO_BOTTOM: l, BOTTOM_TO_TOP: m } = va(
            r,
            i,
            o,
            s,
            ba.out_first_fold
          );
        return (
          d.add([
            ...t.map((t) =>
              e.animate("BaseBgParallaxY", t.children, n, a, {
                viewPortHeight: s,
                componentHeight: r,
                speedFactor: u,
                start: l,
                end: m,
                ease: "none",
              })
            ),
            ...t.map((t) =>
              e.animate("BaseBgZoom", t.children, n, a, {
                viewPortHeight: s,
                componentHeight: r,
                perspectiveParent: t,
                speedFactor: 0,
                in: { start: l, end: m, scale: 1.667, ease: "sine.in" },
              })
            ),
          ]),
          d.get()
        );
      }
      const $u = "BgZoomOut",
        Cu = 1.15,
        Eu = {
          hideOnStart: !1,
          getMediaDimensions(e, t) {
            return { width: e * Cu, height: t * Cu };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            perspectiveParent: { type: "element" },
          },
        };
      function Au(
        e,
        t,
        n,
        a,
        {
          perspectiveParent: r,
          componentHeight: i,
          componentTop: o,
          siteHeight: s,
          viewPortHeight: u,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          {
            TOP_TO_BOTTOM: l,
            BOTTOM_TO_TOP: m,
            isInFirstFold: f,
          } = va(i, o, s, u, ba.out_first_fold);
        return (
          d.add(
            e.animate("BaseBgZoom", t, n, a, {
              viewPortHeight: u,
              componentHeight: i,
              perspectiveParent: r,
              baseScale: 1 / Cu,
              out: {
                start: l,
                end: m,
                scale: f ? 1 : 2 - 1 / Cu,
                ease: "sine.inOut",
              },
            })
          ),
          d.get()
        );
      }
      const Yu = 1.5,
        Du = "ImageParallax",
        Xu = {
          hideOnStart: !1,
          getMediaDimensions(e, t) {
            return { width: e, height: t * Yu };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            speedFactor: { type: "number", default: -0.5 },
          },
        };
      function qu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          speedFactor: u = Xu.schema.speedFactor.default,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          l = r - Yu * r;
        return (
          d.add(
            e.animate("BasePosition", t, n, a, {
              ease: "none",
              from: { y: l },
              to: { y: 0 },
            })
          ),
          d.get()
        );
      }
      const Hu = "ImageReveal",
        Vu = {
          hideOnStart: !1,
          getMediaDimensions(e, t, n) {
            return { width: e, height: n };
          },
          groups: ["animation", "background"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            componentHeight: { type: "number", min: 0 },
            viewPortHeight: { type: "number", min: 0 },
            speedFactor: { type: "number", default: -1 },
          },
        };
      function Nu(
        e,
        t,
        n,
        a,
        {
          componentHeight: r,
          componentTop: i,
          siteHeight: o,
          viewPortHeight: s,
          speedFactor: u = Vu.schema.speedFactor.default,
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          l = r,
          m = -s;
        return (
          d.add(
            e.animate("BasePosition", t, n, a, {
              ease: "none",
              from: { y: m },
              to: { y: l },
            })
          ),
          d.get()
        );
      }
      const zu = "BackgroundBlurIn",
        Lu = {
          hideOnStart: !1,
          getMaxTravel(e, t, n) {
            return Math.min(n - e.top, (t + e.height) / 2, 0.9 * t);
          },
          groups: ["animation", "background", "legacy"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            blur: { type: "number", min: 0, default: 20 },
          },
        };
      function Uu(e, t, n, a, { blur: r = Lu.schema.blur.default, ...i } = {}) {
        const o = e.sequence(i),
          s = void 0 !== t[0].style.webkitFilter;
        return (
          t.forEach((t) => {
            t.setAttribute("data-blur", "0"),
              e.animate("BaseNone", t, 0, 0, { force3D: !0 }),
              o.add(
                e.animate("BaseAttribute", t, n, a, {
                  from: { attr: { "data-blur": r } },
                  to: { attr: { "data-blur": 0 } },
                  ease: "Circ.easeIn",
                  immediateRender: !0,
                  callbacks: {
                    onUpdate() {
                      const n = t.getAttribute("data-blur");
                      e.engine.tween(
                        t,
                        {
                          duration: 0,
                          delay: 0,
                          WebkitFilter: `blur(${n}px)`,
                          filter: `blur(${n}px)`,
                        },
                        s ? ["WebkitFilter", "filter"] : ["filter"]
                      );
                    },
                  },
                })
              );
          }),
          o.get()
        );
      }
      const ju = "BackgroundFadeIn",
        Wu = {
          hideOnStart: !1,
          getMaxTravel(e, t, n) {
            return Math.min(n - e.top, (t + e.height) / 2, 0.9 * t);
          },
          groups: ["animation", "background", "legacy"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Qu(e, t, n, a, r = {}) {
        const i = e.sequence(r);
        return (
          i.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Circ.easeIn",
              force3D: !0,
              immediateRender: !0,
            })
          ),
          i.get()
        );
      }
      const Zu = [".bgImage", ".bgVideo"],
        Gu = [".bgImage", ".bgVideo"],
        Ku = [".bgImage", ".bgVideo"],
        Ju = "BackgroundParallax",
        ec = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          shouldDisableSmoothScrolling: !0,
          getMaxTravel(e, t) {
            return t + e.height;
          },
          groups: ["animation", "background", "legacy"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            speedFactor: { type: "number", default: 0.2 },
            viewPortHeight: { type: "number", min: 0, default: 1 },
            browserFlags: { type: "object" },
            componentHeight: { type: "number", min: 0, default: 1 },
          },
        };
      function tc(
        e,
        t,
        n,
        a,
        {
          speedFactor: r = ec.schema.speedFactor.default,
          viewPortHeight: i = ec.schema.viewPortHeight.default,
          browserFlags: o = {},
          componentHeight: s = ec.schema.componentHeight.default,
          ...u
        } = {}
      ) {
        const c = e.sequence(u);
        let d;
        if (o.animateParallaxScrubAction)
          t.forEach((t) => {
            (d = Gu.map((e) => t.querySelector(e)).filter(Boolean)),
              c.add([
                e.animate("BasePosition", t, n, a, {
                  from: { y: i },
                  to: { y: -s },
                  force3D: !0,
                  immediateRender: !0,
                }),
                e.animate("BasePosition", d, n, a, {
                  from: { y: i * (r - 1) },
                  to: { y: s * (1 - r) },
                  force3D: !0,
                  immediateRender: !0,
                }),
              ]);
          });
        else {
          let l = {};
          const { isSmoothScroll: m } = u;
          m ||
            (o.preserve3DParallaxScrubAction &&
              (l = { transformStyle: "preserve-3d" })),
            c.add(e.animate("BaseNone", t, 0, 0, l)),
            t.forEach((t) => {
              (d = Gu.map((e) => t.querySelector(e)).filter(Boolean)),
                m &&
                  d.forEach((e) => {
                    (e.style.transform = "translate3d(0px, 0px, 0px)"),
                      (e.style.willChange = "transform");
                  }),
                c.add(
                  e.animate("BasePosition", d, n, a, {
                    from: { y: i * r },
                    to: { y: 0 - s * r },
                    ease: "Linear.easeNone",
                    force3D: !0,
                    immediateRender: !0,
                  })
                );
            });
        }
        return c.get();
      }
      const nc = "BackgroundReveal",
        ac = {
          hideOnStart: !1,
          requestFullScreenHeight: !0,
          shouldDisableSmoothScrolling: !0,
          getMaxTravel(e, t) {
            return t + e.height;
          },
          groups: ["animation", "background", "legacy"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            viewPortHeight: { type: "number", min: 0, default: 1 },
            browserFlags: { type: "object" },
            componentHeight: { type: "number", min: 0, default: 1 },
          },
        };
      function rc(
        e,
        t,
        n,
        a,
        {
          viewPortHeight: r = 1,
          browserFlags: i = {},
          componentHeight: o = 1,
          ...s
        } = {}
      ) {
        const u = e.sequence(s);
        let c;
        return (
          i.animateRevealScrubAction
            ? t.forEach((t) => {
                (c = Ku.map((e) => t.querySelector(e)).filter(Boolean)),
                  u.add([
                    e.animate("BasePosition", t, n, a, {
                      from: { y: r },
                      to: { y: -o },
                      force3D: !0,
                      immediateRender: !0,
                    }),
                    e.animate("BasePosition", c, n, a, {
                      from: { y: -r },
                      to: { y: o },
                      force3D: !0,
                      immediateRender: !0,
                    }),
                  ]);
              })
            : t.forEach((n) => {
                (c = Ku.map((e) => n.querySelector(e)).filter(Boolean)),
                  u.add([
                    e.animate("BaseNone", t, 0, 0, {
                      transformStyle: "preserve-3d",
                      force3D: !0,
                    }),
                    e.animate("BaseNone", c, 0, 0, {
                      transformStyle: "preserve-3d",
                      force3D: !0,
                    }),
                  ]);
              }),
          u.get()
        );
      }
      const ic = "BackgroundZoom",
        oc = {
          hideOnStart: !1,
          shouldDisableSmoothScrolling: !0,
          getMaxTravel(e, t) {
            return t + e.height;
          },
          groups: ["animation", "background", "legacy"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            componentHeight: { type: "number", min: 0, default: 1 },
            viewPortHeight: { type: "number", default: 1 },
            speedFactor: { type: "number", default: -0.8 },
          },
        };
      function sc(
        e,
        t,
        n,
        a,
        {
          componentHeight: r = oc.schema.componentHeight.default,
          viewPortHeight: i = oc.schema.viewPortHeight.default,
          speedFactor: o = oc.schema.speedFactor.default,
          ...s
        } = {}
      ) {
        const u = e.sequence(s);
        return (
          t.forEach((t) => {
            const c = Zu.map((e) => t.querySelector(e)).filter(Boolean),
              d = [
                e.animate("BasePosition", c, n, a, {
                  force3D: !0,
                  from: { z: 0 },
                  to: { z: 40 },
                  ease: "Sine.easeIn",
                  immediateRender: !0,
                }),
              ];
            s.isSmoothScroll &&
              d.unshift(
                e.animate("BasePosition", t, n, a, {
                  from: { perspectiveOrigin: `50% ${r / 2 + i * o}px` },
                  to: { perspectiveOrigin: `50% ${r / 2 - r * o}px` },
                  ease: "Linear.easeNone",
                  immediateRender: !0,
                })
              ),
              u.add([
                e.animate("BasePosition", t, 0, a, {
                  perspective: 100,
                  force3D: !0,
                  immediateRender: !0,
                }),
                ...d,
              ]);
          }),
          u.get()
        );
      }
      const uc = "SiteBackgroundParallax",
        cc = {
          hideOnStart: !1,
          getMaxTravel(e, t, n) {
            return Math.max(n - t, 0);
          },
          groups: ["animation", "background", "legacy", "site"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            speedFactor: { type: "number", default: 0.2 },
          },
        };
      function dc(
        e,
        t,
        n,
        a,
        { speedFactor: r = cc.schema.speedFactor.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = Math.max(e.frame.document.body.scrollHeight * r, 0),
          u = e.frame.innerHeight * r,
          c = Math.min(s, u);
        return (
          o.add(
            e.animate("BasePosition", t, n, a, {
              from: { y: 0 },
              to: { y: -c },
              force3D: !0,
              ease: "Linear.easeNone",
            })
          ),
          o.get()
        );
      }
      const lc = "HeaderFadeOut",
        mc = {
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function fc(e, t, n, a, r) {
        const i = e.sequence(r);
        return (
          i.add(
            e.animate("BaseFade", t, n, a, {
              ease: "Quart.easeIn",
              to: { autoAlpha: 0 },
            })
          ),
          i.get()
        );
      }
      const pc = "HeaderFadeOutCustom",
        hc = {
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function gc(e, t, n, a, { ease: r = "Quart.easeIn", ...i }) {
        const o = e.sequence(i),
          s = { ease: r, to: { autoAlpha: 0 } };
        return o.add(e.animate("BaseFade", t, n, a, s)), o.get();
      }
      const yc = "HeaderHideToTop",
        bc = {
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            compMeasures: {
              type: "object",
              properties: { height: { type: "number" } },
            },
          },
        },
        vc = 5;
      function xc(e, t, n, a, { compMeasures: r, ...i }) {
        const o = e.sequence(i),
          s = r.height;
        return (
          o.add(
            e.animate("BasePosition", t, n, a, {
              ease: "Linear.easeNone",
              from: { y: 0 },
              to: { y: -1 * (s + vc) },
            })
          ),
          o.add(
            e.animate("BaseFade", t, 0.2, 0.1, {
              ease: "Linear.easeIn",
              to: { autoAlpha: 0 },
            })
          ),
          o.get()
        );
      }
      const _c = "HeaderMoveCustom",
        wc = "Linear.easeNone",
        Oc = {
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Bc(e, t, n, a, { to: r = {}, ease: i = wc, ...o }) {
        const s = e.sequence(o);
        return (
          s.add(e.animate("BasePosition", t, n, a, { to: r, ease: i })), s.get()
        );
      }
      const Tc = "ArcIn",
        Pc = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["3d", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "left",
            },
          },
        },
        kc = {
          pseudoRight: { angleX: "135", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "135", idx: 1 },
          pseudoLeft: { angleX: "-135", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-135", idx: 3 },
        };
      function Sc(
        e,
        t,
        n,
        a,
        { direction: r = Pc.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Quad.easeOut",
            })
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = (function (e) {
                return { rotationX: kc[e].angleX, rotationY: kc[e].angleY };
              })(la(kc, r, i)),
              u = (function (e) {
                return "50% 50% " + -0.5 * e.offsetWidth;
              })(t);
            o.add(e.engine.set(t, { transformOrigin: u }), 0).add(
              e.animate("BaseRotate3D", t, n, a, {
                from: s,
                perspective: 200,
                ease: "Quad.easeOut",
              }),
              0
            );
          }),
          o.get()
        );
      }
      const Mc = "BounceIn",
        Ic = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            bounce: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "medium",
            },
            direction: {
              type: "string",
              enum: [
                "top left",
                "top right",
                "center",
                "bottom right",
                "bottom left",
              ],
              default: "top left",
            },
          },
        },
        Fc = {
          "top left": { y: -1.1, x: -1.1, idx: 0 },
          "top right": { y: -1.1, x: 1.1, idx: 1 },
          "bottom right": { y: 1.1, x: 1.1, idx: 2 },
          "bottom left": { y: 1.1, x: -1.1, idx: 3 },
        },
        Rc = { y: 0, x: 0 },
        $c = { soft: [0.6, 0.25], medium: [0.9, 0.22], hard: [1.3, 0.2] };
      function Cc(
        e,
        t,
        n,
        a,
        {
          direction: r = Ic.schema.direction.default,
          bounce: i = Ic.schema.bounce.default,
          ...o
        } = {}
      ) {
        const s = 0.3 * n,
          u = n - s,
          c = e.sequence(o);
        return (
          c.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          c.add(
            e.animate("BaseFade", t, s, a, {
              to: { opacity: 1 },
              ease: "Cubic.easeIn",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const n = e.engine.getElementRect(t),
              o = Number(t.getAttribute("data-angle")) || 0,
              d = "center" !== r ? la(Fc, r, o) : r,
              l = Fc[d] || Rc,
              m = ga((n.width / 2) * l.x, (n.height / 2) * l.y, o),
              f = ga((n.width / 3) * l.x, (n.height / 3) * l.y, o);
            c.add(
              [
                e.animate("BasePosition", t, s, a, {
                  from: { x: m.x, y: m.y },
                  to: { x: f.x, y: f.y },
                  ease: "Expo.easeIn",
                }),
                e.animate("BaseScale", t, s, a, {
                  from: { scale: 0 },
                  to: { scale: 0.3 },
                  ease: "Expo.easeIn",
                }),
              ],
              "animation-start"
            ),
              c.add(
                [
                  e.animate("BasePosition", t, u, 0, {
                    to: { x: 0, y: 0 },
                    ease: "Elastic.easeOut",
                    easeParams: $c[i],
                  }),
                  e.animate("BaseScale", t, u, 0, {
                    to: { scale: 1 },
                    ease: "Elastic.easeOut",
                    easeParams: $c[i],
                  }),
                ],
                `animation-start+=${s + a}`
              );
          }),
          c.get()
        );
      }
      const Ec = "CornerIn",
        Ac = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "right",
            },
          },
        },
        Yc = { left: { dx: -1, angle: 45 }, right: { dx: 1, angle: 45 } };
      function Dc(
        e,
        t,
        n,
        a,
        { direction: r = Ac.schema.direction.default, ...i } = {}
      ) {
        const o = Yc[r],
          s = (o.dx > 0 ? "+=" : "-=") + o.angle,
          u = e.sequence(i);
        return (
          u.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = o.dx > 0 ? "100% 100%" : "0 100%";
            u.add(
              [
                pa(t, r, e.animate),
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: s },
                  ease: "Quad.easeOut",
                  immediateRender: !1,
                }),
              ],
              0
            );
          }),
          u.get()
        );
      }
      const Xc = "DropClipIn",
        qc = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "soft",
            },
          },
        },
        Hc = { soft: 1.2, medium: 3.6, hard: 6 };
      function Vc(
        e,
        t,
        n,
        a,
        { power: r = qc.schema.power.default, ...i } = {}
      ) {
        const o = Hc[r],
          s = e.sequence(i);
        return (
          s.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Circ.easeOut",
            })
          ),
          t.forEach((t) => {
            const r = ca(
              e.engine.getBoundingRect(t),
              e.engine.getBoundingContentRect(t),
              "initial",
              { scaleX: 1 / o, scaleY: 1 / o }
            );
            s.add(
              [
                e.animate("BaseClipPath", t, n, a, {
                  from: r,
                  ease: "Quad.easeOut",
                }),
                e.animate("BaseScale", t, n, a, {
                  from: { scale: o },
                  ease: "Quad.easeOut",
                }),
              ],
              0
            );
          }),
          s.get()
        );
      }
      const Nc = "DropIn",
        zc = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "soft",
            },
          },
        },
        Lc = { soft: 1.2, medium: 3.6, hard: 6 };
      function Uc(
        e,
        t,
        n,
        a,
        { power: r = zc.schema.power.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = Lc[r];
        return (
          o.add([
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Circ.easeOut",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: s },
              ease: "Quad.easeOut",
            }),
          ]),
          o.get()
        );
      }
      const jc = "ExpandIn",
        Wc = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "soft",
            },
          },
        },
        Qc = { soft: 0.85, medium: 0.4, hard: 0 };
      function Zc(
        e,
        t,
        n,
        a,
        { power: r = Wc.schema.power.default, ...i } = {}
      ) {
        const o = e.sequence(i),
          s = Qc[r];
        return (
          o.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          o.add([
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "Circ.easeOut",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: s },
              ease: "Quad.easeOut",
              immediateRender: !1,
            }),
          ]),
          o.get()
        );
      }
      const Gc = "FadeIn",
        Kc = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function Jc(e, t, n, a, r) {
        const i = e.sequence(r);
        return (
          i.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeInOut",
            })
          ),
          i.get()
        );
      }
      const ed = "FlipIn",
        td = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["3d", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
          },
        },
        nd = {
          top: { angleX: "90", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "90", idx: 1 },
          bottom: { angleX: "-90", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-90", idx: 3 },
        };
      function ad(
        e,
        t,
        n,
        a,
        { direction: r = td.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          o.add(
            e.animate("BaseFade", t, 0.25 * n, a, {
              to: { opacity: 1 },
              ease: "Quad.easeOut",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = la(nd, r, i),
              u = { rotationX: nd[s].angleX, rotationY: nd[s].angleY };
            o.add(
              e.animate("BaseRotate3D", t, 0.75 * n, a, {
                from: u,
                perspective: 800,
                ease: "Quad.easeOut",
              }),
              "animation-start"
            );
          }),
          o.get()
        );
      }
      const rd = "FloatIn",
        id = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "right",
            },
          },
        },
        od = {
          top: { dx: 0, dy: -1, distance: 50 },
          right: { dx: 1, dy: 0, distance: 50 },
          bottom: { dx: 0, dy: 1, distance: 50 },
          left: { dx: -1, dy: 0, distance: 50 },
        };
      function sd(
        e,
        t,
        n,
        a,
        { direction: r = id.schema.direction.default, ...i } = {}
      ) {
        const o = od[r],
          s = e.sequence(i);
        return (
          s.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeInOut",
            })
          ),
          t.forEach((t) => {
            const r = o.dx * o.distance,
              i = o.dy * o.distance;
            s.add(
              e.animate("BasePosition", t, n, a, {
                from: { x: r, y: i },
                ease: "Quad.easeInOut",
              }),
              0
            );
          }),
          s.get()
        );
      }
      const ud = "FlyIn",
        cd = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: [
                "top",
                "top left",
                "top right",
                "left",
                "bottom",
                "bottom left",
                "bottom right",
                "right",
              ],
              default: "right",
            },
          },
        },
        dd = {
          top: { dy: -1 },
          right: { dx: 1 },
          bottom: { dy: 1 },
          left: { dx: -1 },
        };
      function ld(
        e,
        t,
        n,
        a,
        { direction: r = cd.schema.direction.default, ...i } = {}
      ) {
        const o = (function (e) {
            const t = { dx: 0, dy: 0 };
            return (
              e.forEach((e) => {
                dd[e] && Object.assign(t, dd[e]);
              }),
              t
            );
          })(r.split(" ")),
          s = e.frame.innerWidth,
          u = e.frame.innerHeight,
          c = e.sequence(i);
        return (
          c.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = o.dx > 0 ? s - r.left : o.dx * r.right,
              d = o.dy > 0 ? u - r.top : o.dy * r.bottom;
            c.add(
              e.animate("BasePosition", t, n, a, {
                from: { x: i, y: d },
                ease: "Sine.easeOut",
              }),
              0
            );
          }),
          c.get()
        );
      }
      const md = "FoldIn",
        fd = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["3d", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "left",
            },
          },
        },
        pd = {
          top: {
            angleX: "-45",
            angleY: "0",
            origin: { x: "50%", y: "0" },
            idx: 0,
          },
          right: {
            angleX: "0",
            angleY: "-45",
            origin: { x: "100%", y: "50%" },
            idx: 1,
          },
          bottom: {
            angleX: "45",
            angleY: "0",
            origin: { x: "50%", y: "100%" },
            idx: 2,
          },
          left: {
            angleX: "0",
            angleY: "45",
            origin: { x: "0", y: "50%" },
            idx: 3,
          },
        };
      function hd(
        e,
        t,
        n,
        a,
        { direction: r = fd.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          o.add(
            e.animate("BaseFade", t, 0.5 * n, a, {
              to: { opacity: 1 },
              ease: "Quad.easeOut",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const i = Number(t.getAttribute("data-angle")) || 0,
              s = (i * Math.PI) / 180,
              u = la(pd, r, i),
              c = e.engine.getBoundingRect(t),
              d = e.engine.getBoundingContentRect(t),
              { x: l, y: m } = ma(pd[u].origin, d, s),
              f = fa(c, d, pd[u].origin),
              p = { rotationX: pd[u].angleX, rotationY: pd[u].angleY };
            o.add(
              [
                e.animate("BasePosition", t, 0, a, {
                  transformOrigin: f,
                  x: l,
                  y: m,
                  immediateRender: !1,
                }),
                e.animate("BaseRotate3D", t, n, a, {
                  from: p,
                  perspective: 800,
                  ease: "Quad.easeOut",
                  immediateRender: !1,
                }),
              ],
              "animation-start"
            );
          }),
          o.get()
        );
      }
      const gd = "GlideIn",
        yd = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            angle: { type: "number", min: 0, max: 360, default: 0 },
            distance: { type: "number", min: 0, default: 0 },
          },
        };
      function bd(
        e,
        t,
        n,
        a,
        {
          angle: r = yd.schema.angle.default,
          distance: i = yd.schema.distance.default,
          ...o
        } = {}
      ) {
        const s = (r * Math.PI) / 180,
          u = Math.sin(s) * i,
          c = Math.cos(s) * i * -1,
          d = e.sequence(o);
        return (
          d.add(
            [
              e.animate("BaseFade", t, 0, 0, {
                from: { opacity: 0 },
                to: { opacity: 1 },
                ease: "Sine.easeIn",
              }),
              e.animate("BasePosition", t, n, a, {
                from: { x: u, y: c },
                ease: "Cubic.easeOut",
              }),
            ],
            0
          ),
          d.get()
        );
      }
      const vd = "Reveal",
        xd = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["mask", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "center", "bottom", "left"],
              default: "left",
            },
          },
        },
        _d = {
          top: { dx: 0, dy: -1, idx: 0 },
          right: { dx: 1, dy: 0, idx: 1 },
          bottom: { dx: 0, dy: 1, idx: 2 },
          left: { dx: -1, dy: 0, idx: 3 },
        };
      function wd(
        e,
        t,
        n,
        a,
        { direction: r = xd.schema.direction.default, ...i } = {}
      ) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BaseFade", t, 0.1, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeInOut",
            })
          ),
          t.forEach((t) => {
            const i = e.engine.getBoundingRect(t),
              s = e.engine.getBoundingContentRect(t),
              u = Number(t.getAttribute("data-angle")) || 0,
              c = (u * Math.PI) / 180,
              d = "center" !== r ? la(_d, r, u) : r;
            if (void 0 === t.style.clipPath) {
              const r = da(d),
                i = _d[d] || { dx: 0, dy: 0 },
                u = ha(s, { dx: i.dx / 2, dy: i.dy / 2 }, c);
              o.add(
                [
                  e.animate("BaseScale", t, n, a, {
                    from: r,
                    ease: "Cubic.easeOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    from: u,
                    ease: "Cubic.easeOut",
                  }),
                ],
                0
              );
            } else {
              const r = ca(i, s, d);
              o.add(
                e.animate("BaseClipPath", t, n, a, {
                  from: r,
                  ease: "Cubic.easeOut",
                }),
                0
              );
            }
          }),
          o.get()
        );
      }
      const Od = "SlideIn",
        Bd = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["mask", "entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["top", "right", "bottom", "left"],
              default: "bottom",
            },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "soft",
            },
          },
        },
        Td = {
          top: { dx: 0, dy: -1, idx: 0, clip: "bottom" },
          right: { dx: 1, dy: 0, idx: 1, clip: "left" },
          bottom: { dx: 0, dy: 1, idx: 2, clip: "top" },
          left: { dx: -1, dy: 0, idx: 3, clip: "right" },
        },
        Pd = { soft: 70, medium: 35, hard: 0 };
      function kd(
        e,
        t,
        n,
        a,
        {
          direction: r = Bd.schema.direction.default,
          power: i = Bd.schema.power.default,
          ...o
        } = {}
      ) {
        const s = e.sequence(o);
        return (
          s.add(
            e.animate("BaseFade", t, 0.35 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Cubic.easeOut",
            })
          ),
          t.forEach((t) => {
            const o = e.engine.getBoundingRect(t),
              u = e.engine.getBoundingContentRect(t),
              c = Number(t.getAttribute("data-angle")) || 0,
              d = (c * Math.PI) / 180,
              l = la(Td, r, c);
            if (void 0 === t.style.clipPath) {
              const r = da(l),
                i = ha(u, { dx: Td[l].dx / 2, dy: Td[l].dy / 2 }, d);
              s.add(
                [
                  e.animate("BaseScale", t, n, a, {
                    from: r,
                    ease: "Cubic.easeInOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    from: i,
                    ease: "Cubic.easeInOut",
                  }),
                ],
                0
              );
            } else {
              const r = ca(o, u, Td[l].clip, { minimum: Pd[i] }),
                c = ha(u, Td[l], d, (100 - Pd[i]) / 100);
              s.add(
                [
                  e.animate("BaseClipPath", t, n, a, {
                    from: r,
                    ease: "Cubic.easeOut",
                  }),
                  e.animate("BasePosition", t, n, a, {
                    from: c,
                    ease: "Cubic.easeOut",
                  }),
                ],
                0
              );
            }
          }),
          s.get()
        );
      }
      const Sd = "SpinIn",
        Md = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            cycles: { type: "number", step: 0.25, min: 0, default: 1 },
            direction: { type: "string", enum: ["cw", "ccw"], default: "cw" },
            power: {
              type: "string",
              enum: ["soft", "medium", "hard"],
              default: "medium",
            },
          },
        },
        Id = { cw: { direction: -1 }, ccw: { direction: 1 } },
        Fd = { soft: 0.8, medium: 0.5, hard: 0 };
      function Rd(
        e,
        t,
        n,
        a,
        {
          direction: r = Md.schema.direction.default,
          cycles: i = Md.schema.cycles.default,
          power: o = Md.schema.power.default,
          ...s
        } = {}
      ) {
        const u = Fd[o],
          c = (Id[r].direction > 0 ? "+=" : "-=") + 360 * i,
          d = e.sequence(s);
        return (
          d.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          d.add([
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "Quad.easeOut",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: u },
              ease: "Quad.easeOut",
              immediateRender: !1,
            }),
            e.animate("BaseRotate", t, n, a, {
              from: { rotation: c },
              ease: "Quad.easeOut",
            }),
          ]),
          d.get()
        );
      }
      const $d = "TurnIn",
        Cd = {
          hideOnStart: !0,
          mobile: !0,
          viewportThreshold: 0.15,
          groups: ["entrance", "animation"],
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            direction: {
              type: "string",
              enum: ["right", "left"],
              default: "right",
            },
          },
        },
        Ed = { left: { dx: -1, angle: 45 }, right: { dx: 1, angle: 45 } };
      function Ad(
        e,
        t,
        n,
        a,
        { direction: r = Cd.schema.direction.default, ...i } = {}
      ) {
        const o = Ed[r],
          s = (o.dx > 0 ? "+=" : "-=") + o.angle,
          u = e.frame.innerWidth,
          c = (e.frame.innerHeight, e.sequence(i));
        return (
          c.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "Linear.easeIn",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = o.dx > 0 ? u - r.left : -r.right,
              d = Math.min(-1.5 * r.height, Math.max(-300, -5.5 * r.height));
            c.add(
              [
                e.animate("BasePosition", t, n, a, {
                  from: { x: i },
                  ease: "Circ.easeOut",
                  immediateRender: !1,
                }),
                e.animate("BasePosition", t, n, a, {
                  from: { y: d },
                  ease: "Linear.easeOut",
                  immediateRender: !1,
                }),
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: s },
                  ease: "Linear.easeOut",
                  immediateRender: !1,
                }),
              ],
              0
            );
          }),
          c.get()
        );
      }
      const Yd = "ArcIn",
        Dd = { schema: {} },
        Xd = {
          top: { idx: 0, rotationX: "80deg" },
          right: { idx: 1, rotationY: "80deg" },
          bottom: { idx: 2, rotationX: "-80deg" },
          left: { idx: 3, rotationY: "-80deg" },
        },
        qd = {
          soft: { easing: "cubicInOut" },
          medium: { easing: "quintInOut" },
          hard: { easing: "backOut" },
        };
      function Hd(
        e,
        t,
        n,
        a,
        {
          direction: r = "right",
          easing: i = "quintInOut",
          power: o,
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          c = void 0 !== o ? qd[o].easing : i;
        return (
          u.add(
            e.animate("BaseFade", t, 0.7 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "sineIn",
            })
          ),
          t.forEach((t) => {
            const i = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              { width: o, height: s } = e.engine.getBoundingRect(t),
              d = la(Xd, r, i),
              { rotationX: l = 0, rotationY: m = 0 } = Xd[d],
              f = l ? s / 2 : o / 2;
            u.add(
              e.engine.set(t, { transformOrigin: `50% 50% -${f}px` }),
              0
            ).add(
              e.animate("BaseRotate3D", t, n, a, {
                perspective: 800,
                from: { rotationX: l, rotationY: m },
                ease: c,
              }),
              0
            );
          }),
          u.get()
        );
      }
      const Vd = "BounceIn",
        Nd = { schema: {} },
        { in: zd, out: Ld } = wa("sine"),
        Ud = [
          { keyframe: 0, translate: 100, ease: Ld },
          { keyframe: 30, translate: 0, ease: zd },
          { keyframe: 42, translate: 35, ease: Ld },
          { keyframe: 54, translate: 0, ease: zd },
          { keyframe: 62, translate: 21, ease: Ld },
          { keyframe: 74, translate: 0, ease: zd },
          { keyframe: 82, translate: 9, ease: Ld },
          { keyframe: 90, translate: 0, eaee: zd },
          { keyframe: 95, translate: 2, ease: Ld },
          { keyframe: 100, translate: 0, ease: zd },
        ],
        jd = {
          soft: { distanceFactor: 1 },
          medium: { distanceFactor: 2 },
          hard: { distanceFactor: 3 },
        },
        Wd = {
          top: { y: -1, x: 0, z: 0, idx: 0 },
          right: { y: 0, x: 1, z: 0, idx: 1 },
          bottom: { y: 1, x: 0, z: 0, idx: 2 },
          left: { y: 0, x: -1, z: 0, idx: 3 },
        },
        Qd = { x: 0, y: 0, z: -1 };
      function Zd(
        e,
        t,
        n,
        a,
        { power: r, distanceFactor: i = 1, direction: o = "bottom", ...s } = {}
      ) {
        const u = e.sequence(s);
        i = void 0 === r ? i : jd[r].distanceFactor;
        const c = _a(Ud, n);
        return (
          "center" === o &&
            u.add(e.engine.set(t, { transformPerspective: 800 }), 0),
          t.forEach((t) => {
            const n = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              r = "center" === o ? "center" : la(Wd, o, n),
              { x: s, y: d, z: l } = "center" === r ? Qd : Wd[r],
              m = Ud[0];
            u.add(
              e.animate("BasePosition", t, 0, a, {
                from: {
                  x: (s * m.translate * i) / 2 + "px",
                  y: (d * m.translate * i) / 2 + "px",
                  z: (l * m.translate * i) / 2 + "px",
                },
              }),
              0
            ),
              Ud.forEach(({ translate: n, ease: a }, r) => {
                u.add(
                  e.animate("BasePosition", t, c[r], 0, {
                    to: {
                      x: (s * n * i) / 2 + "px",
                      y: (d * n * i) / 2 + "px",
                      z: (l * n * i) / 2 + "px",
                    },
                    ease: a,
                  })
                );
              });
          }),
          u.add(
            e.animate("BaseFade", t, (n * Ud[3].keyframe) / 100, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "quadOut",
            }),
            0
          ),
          u.get()
        );
      }
      const Gd = "BlurIn",
        Kd = { schema: {} },
        Jd = { soft: 6, medium: 25, hard: 50 };
      function el(
        e,
        t,
        n,
        a,
        { power: r, blur: i = 6, easing: o = "linear", ...s } = {}
      ) {
        const u = e.sequence(s),
          c = void 0 !== r ? Jd[r] : i;
        return (
          u.add([
            e.animate("BaseFade", t, 0.7 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "sineIn",
            }),
            e.animate("BaseFilter", t, n, a, {
              from: { filter: `blur(${c}px)` },
              to: { filter: "blur(0px)" },
              ease: o,
            }),
          ]),
          u.get()
        );
      }
      const tl = "CircleIn",
        nl = { schema: {} },
        al = { left: { dx: -1, angle: 45 }, right: { dx: 1, angle: 45 } };
      function rl(
        e,
        t,
        n,
        a,
        { compRotation: r = 0, direction: i = "right", ...o } = {}
      ) {
        const s = al[i],
          u = (s.dx > 0 ? "+=" : "-=") + s.angle,
          c = e.frame.innerWidth,
          d = (e.frame.innerHeight, e.sequence(o));
        return (
          d.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "none",
            })
          ),
          t.forEach((t) => {
            const r = e.engine.getBoundingRect(t),
              i = s.dx > 0 ? c - r.left : -r.right,
              o = Math.min(-1.5 * r.height, Math.max(-300, -5.5 * r.height));
            d.add(
              [
                e.animate("BasePosition", t, n, a, {
                  from: { x: i },
                  ease: "circOut",
                  immediateRender: !1,
                }),
                e.animate("BasePosition", t, n, a, {
                  from: { y: o },
                  ease: "none",
                  immediateRender: !1,
                }),
                e.animate("BaseRotate", t, n, a, {
                  from: { rotation: u },
                  ease: "none",
                  immediateRender: !1,
                }),
              ],
              0
            );
          }),
          d.get()
        );
      }
      const il = "CurveIn",
        ol = { schema: {} },
        sl = {
          pseudoRight: { angleX: "180", angleY: "0", idx: 0 },
          right: { angleX: "0", angleY: "180", idx: 1 },
          pseudoLeft: { angleX: "-180", angleY: "0", idx: 2 },
          left: { angleX: "0", angleY: "-180", idx: 3 },
        };
      function ul(
        e,
        t,
        n,
        a,
        { compRotation: r = 0, direction: i = "right", ...o } = {}
      ) {
        const s = e.sequence(o);
        return (
          s.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "quadOut",
            })
          ),
          t.forEach((t) => {
            const o = (function (e) {
                return { rotationX: sl[e].angleX, rotationY: sl[e].angleY };
              })(la(sl, i, Number(r))),
              u = (function (e) {
                return "50% 50% " + -1.5 * e.offsetWidth;
              })(t);
            s.add(e.engine.set(t, { transformOrigin: u }), 0).add(
              e.animate("BaseRotate3D", t, n, a, {
                from: o,
                perspective: 200,
                ease: "quadOut",
              }),
              0
            );
          }),
          s.get()
        );
      }
      const cl = "DropIn",
        dl = { schema: {} },
        ll = {
          soft: { scale: 1.2, ease: "cubicInOut" },
          medium: { scale: 1.6, ease: "quintInOut" },
          hard: { scale: 2, ease: "backOut" },
        };
      function ml(
        e,
        t,
        n,
        a,
        {
          power: r,
          initialScale: i = ll.medium.scale,
          easing: o = ll.medium.ease,
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          c = r ? ll[r].scale : i,
          d = r ? ll[r].ease : o;
        return (
          u.add([
            e.animate("BaseFade", t, 0.8 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "quadOut",
            }),
            e.animate("BaseScale", t, n, a, { from: { scale: c }, ease: d }),
          ]),
          u.get()
        );
      }
      const fl = "ExpandIn",
        pl = { schema: {} },
        hl = { soft: 0.8, medium: 0.6, hard: 0 },
        gl = {
          top: { origin: "50% 0", idx: 0 },
          "top-right": { origin: "100% 0", idx: 1 },
          right: { origin: "100% 50%", idx: 2 },
          "bottom-right": { origin: "100% 100%", idx: 3 },
          bottom: { origin: "50% 100%", idx: 4 },
          "bottom-left": { origin: "0 100%", idx: 5 },
          left: { origin: "0 50%", idx: 6 },
          "top-left": { origin: "0 0", idx: 7 },
        };
      function yl(
        e,
        t,
        n,
        a,
        {
          power: r,
          initialScale: i = 0,
          direction: o = "center",
          easing: s = "cubicInOut",
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          d = void 0 !== r ? hl[r] : i;
        return (
          "center" !== o &&
            t.forEach((t) => {
              const n = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0);
              let a = o;
              a = la(gl, o, n);
              const [r, i] = gl[a].origin.split(" "),
                { x: s, y: u } = ma(
                  { x: r, y: i },
                  e.engine.getBoundingRect(t),
                  (0, ua.kU)(n)
                );
              c.add(
                e.engine.set(t, { x: s, y: u, transformOrigin: gl[a].origin })
              );
            }),
          c.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          c.add([
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "linear",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: d },
              ease: s,
              immediateRender: !1,
            }),
          ]),
          c.get()
        );
      }
      const bl = "FadeIn",
        vl = { schema: {} };
      function xl(e, t, n, a, r) {
        const i = e.sequence(r);
        return (
          i.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "sineInOut",
            })
          ),
          i.get()
        );
      }
      const _l = "FloatIn",
        wl = { schema: {} },
        Ol = {
          top: { dx: 0, dy: -1, distance: 120 },
          right: { dx: 1, dy: 0, distance: 120 },
          bottom: { dx: 0, dy: 1, distance: 120 },
          left: { dx: -1, dy: 0, distance: 120 },
        };
      function Bl(e, t, n, a, { direction: r = "left", ...i } = {}) {
        const o = Ol[r],
          s = e.sequence(i);
        return (
          s.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "sineInOut",
            })
          ),
          t.forEach((t) => {
            const r = o.dx * o.distance,
              i = o.dy * o.distance;
            s.add(
              e.animate("BasePosition", t, n, a, {
                from: { x: r, y: i },
                ease: "sineInOut",
              }),
              0
            );
          }),
          s.get()
        );
      }
      const Tl = "FlipIn",
        Pl = { schema: {} },
        kl = {
          top: { x: 1, y: 0, idx: 0 },
          right: { x: 0, y: 1, idx: 1 },
          bottom: { x: -1, y: 0, idx: 2 },
          left: { x: 0, y: -1, idx: 3 },
        },
        Sl = {
          soft: { initialRotate: 45 },
          medium: { initialRotate: 90 },
          hard: { initialRotate: 270 },
        };
      function Ml(
        e,
        t,
        n,
        a,
        {
          direction: r = "top",
          easing: i = "backOut",
          power: o,
          initialRotate: s = 90,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          d = void 0 !== o ? Sl[o].initialRotate : s;
        return (
          c.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          c.add(
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "quadOut",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const o = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              s = la(kl, r, o),
              u = { rotationX: kl[s].x * d, rotationY: kl[s].y * d };
            c.add(
              e.animate("BaseRotate3D", t, n, a, {
                from: u,
                perspective: 800,
                ease: i,
              }),
              "animation-start"
            );
          }),
          c.get()
        );
      }
      const Il = "FoldIn",
        Fl = { schema: {} },
        Rl = {
          top: { x: -1, y: 0, origin: { x: "50%", y: "0" }, idx: 0 },
          right: { x: 0, y: -1, origin: { x: "100%", y: "50%" }, idx: 1 },
          bottom: { x: 1, y: 0, origin: { x: "50%", y: "100%" }, idx: 2 },
          left: { x: 0, y: 1, origin: { x: "0", y: "50%" }, idx: 3 },
        },
        $l = {
          soft: { initialRotate: 35 },
          medium: { initialRotate: 60 },
          hard: { initialRotate: 90 },
        };
      function Cl(
        e,
        t,
        n,
        a,
        {
          direction: r = "top",
          easing: i = "backOut",
          power: o,
          initialRotate: s = 90,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          d = void 0 !== o ? $l[o].initialRotate : s;
        return (
          c.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          c.add(
            e.animate("BaseFade", t, n, a, {
              to: { opacity: 1 },
              ease: "quadOut",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const o = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              s = la(Rl, r, o),
              u = e.engine.getBoundingRect(t),
              l = e.engine.getBoundingContentRect(t),
              { x: m, y: f } = ma(Rl[s].origin, l, (0, ua.kU)(o)),
              p = fa(u, l, Rl[s].origin),
              h = { rotationX: Rl[s].x * d, rotationY: Rl[s].y * d };
            c.add(
              [
                e.animate("BasePosition", t, 0, a, {
                  transformOrigin: p,
                  x: m,
                  y: f,
                }),
                e.animate("BaseRotate3D", t, n, a, {
                  from: h,
                  perspective: 800,
                  ease: i,
                }),
              ],
              "animation-start"
            );
          }),
          c.get()
        );
      }
      const El = "GlideIn",
        Al = { schema: {} },
        Yl = {
          soft: { easing: "cubicInOut" },
          medium: { easing: "quintInOut" },
          hard: { easing: "backOut" },
        };
      function Dl(
        e,
        t,
        n,
        a,
        {
          direction: r = 0,
          distance: i = { value: 100, type: "percentage" },
          power: o,
          easing: s = "quintInOut",
          startFromOffScreen: u = !1,
          ...c
        } = {}
      ) {
        const d = {
            width: e.frame.innerWidth,
            height: e.frame.innerHeight,
            top: 0,
            left: 0,
          },
          l = (r * Math.PI) / 180,
          m = ka(i.type),
          f = t.map((t) =>
            u
              ? { element: t, ...xa(d, e.engine.getBoundingRect(t), r) }
              : {
                  element: t,
                  x: `${Math.sin(l) * i.value}${m}`,
                  y: `${Math.cos(l) * i.value * -1}${m}`,
                }
          ),
          p = e.sequence(c);
        return (
          p.add(
            e.animate("BaseFade", t, 0, 0, {
              from: { opacity: 0 },
              to: { opacity: 1 },
            })
          ),
          p.add(
            f.map(({ element: t, x: r, y: i }) =>
              e.animate("BasePosition", t, n, a, {
                from: { x: r, y: i },
                ease: void 0 !== o ? Yl[o].easing : s,
              })
            ),
            0
          ),
          p.get()
        );
      }
      const Xl = "GlitchIn",
        ql = { schema: {} },
        Hl = {
          soft: { easing: "cubicInOut" },
          medium: { easing: "quintInOut" },
          hard: { easing: "backOut" },
        };
      function Vl(
        e,
        t,
        n,
        a,
        {
          direction: r = 270,
          distance: i = { value: 100, type: "percentage" },
          power: o,
          easing: s = "quintInOut",
          startFromOffScreen: u = !1,
          ...c
        } = {}
      ) {
        const d = {
            width: e.frame.innerWidth,
            height: e.frame.innerHeight,
            top: 0,
            left: 0,
          },
          l = (r * Math.PI) / 180,
          m = ka(i.type),
          f = t.map((t) =>
            u
              ? { element: t, ...xa(d, e.engine.getBoundingRect(t), r - 90) }
              : {
                  element: t,
                  x: `${Math.sin(l) * i.value}${m}`,
                  y: `${Math.cos(l) * i.value * -1}${m}`,
                }
          ),
          p = e.sequence(c);
        return (
          p.add(
            e.animate("BaseFade", t, 0, 0, {
              from: { opacity: 0 },
              to: { opacity: 1 },
            })
          ),
          p.add(
            f.map(({ element: t, x: r, y: i }) =>
              e.animate("BasePosition", t, n, a, {
                from: { x: r, y: i },
                ease: void 0 !== o ? Hl[o].easing : s,
              })
            ),
            0
          ),
          p.get()
        );
      }
      const Nl = "GrowIn",
        zl = { schema: {} },
        Ll = {
          soft: { scale: 0.8 },
          medium: { scale: 0.6 },
          hard: { scale: 0 },
        };
      function Ul(
        e,
        t,
        n,
        a,
        {
          power: r,
          initialScale: i = 0,
          distance: o = { value: 120, type: "percentage" },
          direction: s = 0,
          easing: u = "cubicInOut",
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          l = void 0 !== r ? Ll[r].scale : i,
          m = (s * Math.PI) / 180,
          f = ka(o.type);
        return (
          d.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          d.add([
            e.animate("BaseFade", t, n, a, { to: { opacity: 1 } }),
            e.animate("BaseScale", t, n, a, { from: { scale: l }, ease: u }),
            e.animate("BasePosition", t, n, a, {
              from: {
                x: `${Math.sin(m) * o.value}${f}`,
                y: `${Math.cos(m) * o.value * -1}${f}`,
              },
              ease: u,
            }),
          ]),
          d.get()
        );
      }
      const jl = "PunchIn",
        Wl = { schema: {} },
        Ql = {
          "top-left": { y: -1.1, x: -1.1, idx: 0 },
          "top-right": { y: -1.1, x: 1.1, idx: 1 },
          "bottom-right": { y: 1.1, x: 1.1, idx: 2 },
          "bottom-left": { y: 1.1, x: -1.1, idx: 3 },
        },
        Zl = { y: 0, x: 0 },
        Gl = { soft: [0.6, 0.25], medium: [0.9, 0.22], hard: [1.3, 0.2] };
      function Kl(
        e,
        t,
        n,
        a,
        {
          compRotation: r = 0,
          direction: i = "top-right",
          power: o = "medium",
          ...s
        } = {}
      ) {
        const u = 0.3 * n,
          c = n - u,
          d = e.sequence(s);
        return (
          d.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          d.add(
            e.animate("BaseFade", t, u, a, {
              to: { opacity: 1 },
              ease: "cubicIn",
            }),
            "animation-start"
          ),
          t.forEach((t) => {
            const n = e.engine.getElementRect(t),
              s = r,
              l = "center" !== i ? la(Ql, i, s) : i,
              m = Ql[l] || Zl,
              f = ga((n.width / 2) * m.x, (n.height / 2) * m.y, s),
              p = ga((n.width / 3) * m.x, (n.height / 3) * m.y, s);
            d.add(
              [
                e.animate("BasePosition", t, u, a, {
                  from: { x: f.x, y: f.y },
                  to: { x: p.x, y: p.y },
                  ease: "expoIn",
                }),
                e.animate("BaseScale", t, u, a, {
                  from: { scale: 0 },
                  to: { scale: 0.3 },
                  ease: "expoIn",
                }),
              ],
              "animation-start"
            ),
              d.add(
                [
                  e.animate("BasePosition", t, c, 0, {
                    to: { x: 0, y: 0 },
                    ease: `elastic.out(${Gl[o]})`,
                  }),
                  e.animate("BaseScale", t, c, 0, {
                    to: { scale: 1 },
                    ease: `elastic.out(${Gl[o]})`,
                  }),
                ],
                `animation-start+=${u + a}`
              );
          }),
          d.get()
        );
      }
      const Jl = "RevealIn",
        em = { schema: {} },
        tm = {
          top: { dx: 0, dy: -1, idx: 0 },
          right: { dx: 1, dy: 0, idx: 1 },
          bottom: { dx: 0, dy: 1, idx: 2 },
          left: { dx: -1, dy: 0, idx: 3 },
        };
      function nm(
        e,
        t,
        n,
        a,
        { direction: r = "left", easing: i = "cubicInOut", ...o } = {}
      ) {
        const s = e.sequence(o);
        return (
          t.forEach((t) => {
            const o = e.engine.getBoundingRect(t),
              u = e.engine.getBoundingContentRect(t),
              c = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              d = ca(o, u, la(tm, r, c));
            s.add(e.animate("BaseClipPath", t, n, a, { from: d, ease: i }), 0);
          }),
          s.get()
        );
      }
      const am = "ShapeIn",
        rm = { schema: {} },
        im = {
          diamond: {
            start: "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
            end: "polygon(50% -50%, 150% 50%, 50% 150%, -50% 50%)",
          },
          window: {
            start: "inset(50% round 50% 50% 0% 0%)",
            end: "inset(-20% round 50% 50% 0% 0%)",
          },
          rectangle: { start: "inset(50%)", end: "inset(0%)" },
          circle: { start: "circle(0%)", end: "circle(75%)" },
          ellipse: { start: "ellipse(0% 0%)", end: "ellipse(75% 75%)" },
        };
      function om(
        e,
        t,
        n,
        a,
        {
          direction: r = "center",
          easing: i = "cubicInOut",
          shape: o = "rectangle",
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          { start: c, end: d } = im[o];
        return (
          u.add([
            e.animate("BaseFade", t, 0.8 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "quadOut",
            }),
            e.animate("BaseClipPath", t, n, a, {
              from: { webkitClipPath: c, clipPath: c },
              to: { webkitClipPath: d, clipPath: d },
              ease: i,
            }),
          ]),
          u.get()
        );
      }
      const sm = "SlideIn",
        um = { schema: {} },
        cm = {
          top: { dx: 0, dy: -1, idx: 0, clip: "bottom" },
          right: { dx: 1, dy: 0, idx: 1, clip: "left" },
          bottom: { dx: 0, dy: 1, idx: 2, clip: "top" },
          left: { dx: -1, dy: 0, idx: 3, clip: "right" },
        },
        dm = {
          soft: { initialTranslate: 0.2 },
          medium: { initialTranslate: 0.8 },
          hard: { initialTranslate: 1 },
        };
      function lm(
        e,
        t,
        n,
        a,
        {
          direction: r = "left",
          power: i,
          initialTranslate: o = 1,
          easing: s = "cubicInOut",
          ...u
        } = {}
      ) {
        const c = e.sequence(u);
        "hard" !== i &&
          c.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "cubicInOut",
            })
          );
        const d = void 0 === i ? o : dm[i].initialTranslate,
          l = 100 - 100 * d;
        return (
          t.forEach((t) => {
            const i = e.engine.getBoundingRect(t),
              o = e.engine.getBoundingContentRect(t),
              u = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              m = la(cm, r, u),
              f = ca(i, o, cm[m].clip, { minimum: l }),
              p = ha(o, cm[m], (0, ua.kU)(u), d);
            c.add(
              [
                e.animate("BaseClipPath", t, n, a, { from: f, ease: s }),
                e.animate("BasePosition", t, n, a, { from: p, ease: s }),
              ],
              0
            );
          }),
          c.get()
        );
      }
      const mm = "SpinIn",
        fm = { schema: {} },
        pm = { clockwise: -1, "counter-clockwise": 1 },
        hm = { soft: 1, medium: 0.6, hard: 0 };
      function gm(
        e,
        t,
        n,
        a,
        {
          direction: r = "clockwise",
          spins: i = 0.5,
          power: o,
          initialScale: s = 0,
          easing: u = "cubicInOut",
          ...c
        } = {}
      ) {
        const d = void 0 !== o ? hm[o] : s,
          l = (pm[r] > 0 ? "+=" : "-=") + 360 * i,
          m = e.sequence(c);
        return (
          m.add(e.animate("BaseFade", t, 0, 0, { to: { opacity: 0.01 } })),
          m.add([
            e.animate("BaseFade", t, n * d, a, {
              to: { opacity: 1 },
              ease: "cubicIn",
            }),
            e.animate("BaseScale", t, n, a, {
              from: { scale: d },
              ease: u,
              immediateRender: !1,
            }),
            e.animate("BaseRotate", t, n, a, {
              from: { rotation: l },
              ease: u,
            }),
          ]),
          m.get()
        );
      }
      const ym = "TiltIn",
        bm = { schema: {} },
        vm = {
          left: { rotationZ: "+=30", idx: 0 },
          right: { rotationZ: "-=30", idx: 1 },
        };
      function xm(
        e,
        t,
        n,
        a,
        { direction: r = "left", easing: i = "cubicOut", ...o } = {}
      ) {
        const s = e.sequence(o);
        return (
          s.add(
            e.animate("BaseFade", t, 0.2 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "cubicOut",
            })
          ),
          t.forEach((t) => {
            const o = e.engine.getBoundingRect(t),
              u = e.engine.getBoundingContentRect(t),
              c = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              d = la(vm, r, c),
              l = ha(u, { dx: 0, dy: 1 }, (0, ua.kU)(c), 0.2),
              { rotationZ: m } = vm[d],
              f = ca(o, u, "top", { minimum: 0 });
            s.add(
              e.engine.set(t, {
                transformPerspective: 800,
                transformOrigin: `50% 50% -${u.height / 2}px`,
              }),
              0
            ),
              s.add(
                [
                  e.animate("BaseClipPath", t, 0.8 * n, a, {
                    from: f,
                    ease: i,
                  }),
                  e.animate("BaseRotate3D", t, 0.8 * n, a, {
                    from: { rotationZ: m },
                    ease: i,
                  }),
                  e.animate("BaseRotate3D", t, n, a, {
                    from: { rotationX: -90 },
                    ease: i,
                  }),
                  e.animate("BasePosition", t, n, a, { from: l, ease: i }),
                ],
                0
              );
          }),
          s.get()
        );
      }
      const _m = "TurnIn",
        wm = { schema: {} },
        Om = {
          "top-left": { idx: 0, x: "0%", y: "0%", angle: -50 },
          "top-right": { idx: 1, x: "100%", y: "0%", angle: 50 },
          "bottom-right": { idx: 2, x: "100%", y: "100%", angle: 50 },
          "bottom-left": { idx: 3, x: "0%", y: "100%", angle: -50 },
        },
        Bm = {
          soft: { easing: "cubicInOut" },
          medium: { easing: "quintInOut" },
          hard: { easing: "backOut" },
        };
      function Tm(
        e,
        t,
        n,
        a,
        {
          direction: r = "top-left",
          easing: i = "backOut",
          power: o,
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          c = void 0 !== o ? Bm[o].easing : i;
        return (
          u.add(
            e.animate("BaseFade", t, 0.6 * n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "sineIn",
            })
          ),
          t.forEach((t) => {
            const i = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              o = la(Om, r, i),
              s = Om[o],
              d = Om[r].angle,
              { x: l, y: m } = ma(
                s,
                e.engine.getBoundingRect(t),
                (0, ua.kU)(i)
              );
            u.add(
              e.engine.set(t, { x: l, y: m, transformOrigin: `${s.x} ${s.y}` }),
              0
            ).add(
              e.animate("BaseRotate", t, n, a, {
                from: { rotation: `+=${d}` },
                ease: c,
              }),
              0
            );
          }),
          u.get()
        );
      }
      const Pm = "WinkIn",
        km = { schema: {} },
        Sm = {
          vertical: { scaleY: 0, scaleX: 1, idx: 0, clipDirection: "vertical" },
          horizontal: {
            scaleY: 1,
            scaleX: 0,
            idx: 1,
            clipDirection: "horizontal",
          },
        };
      function Mm(
        e,
        t,
        n,
        a,
        { direction: r = "horizontal", easing: i = "quintInOut", ...o } = {}
      ) {
        const s = e.sequence(o);
        return (
          s.add(
            e.animate("BaseFade", t, n, a, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: "quadOut",
            })
          ),
          t.forEach((t) => {
            const o = e.engine.getBoundingRect(t),
              u = e.engine.getBoundingContentRect(t),
              c = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              d = la(Sm, r, c),
              { scaleX: l, scaleY: m, clipDirection: f } = Sm[d],
              p = ca(o, u, f, { minimum: 100 });
            s.add(
              [
                e.animate("BaseClipPath", t, n, a, { from: p, ease: i }),
                e.animate("BaseScale", t, 0.85 * n, a, {
                  from: { scaleX: l, scaleY: m },
                  ease: i,
                }),
              ],
              0
            );
          }),
          s.get()
        );
      }
      const Im = "Bounce",
        Fm = { schema: {} },
        Rm = [
          { keyframe: 0, translateY: 0 },
          { keyframe: 8.8, translateY: -55 },
          { keyframe: 17.6, translateY: -87 },
          { keyframe: 26.5, translateY: -98 },
          { keyframe: 35.3, translateY: -87 },
          { keyframe: 44.1, translateY: -55 },
          { keyframe: 53.1, translateY: 0 },
          { keyframe: 66.2, translateY: -23 },
          { keyframe: 81, translateY: 0 },
          { keyframe: 86.8, translateY: -5 },
          { keyframe: 94.1, translateY: 0 },
          { keyframe: 97.1, translateY: -2 },
          { keyframe: 100, translateY: 0 },
        ],
        $m = {
          soft: { bounceFactor: 1 },
          medium: { bounceFactor: 2 },
          hard: { bounceFactor: 3 },
        };
      function Cm(e, t, n, a, { power: r, intensity: i = 0.3, ...o } = {}) {
        const s = e.sequence(o),
          u = _a(Rm, n),
          c = (0, ua._b)(0, 1, $m.soft.bounceFactor, $m.hard.bounceFactor, i),
          d = void 0 !== r ? $m[r].bounceFactor : c;
        return (
          Rm.forEach(({ translateY: n }, a) => {
            s.add(
              e.animate("BasePosition", t, u[a], 0, {
                to: { y: (n * d) / 2 },
                ease: "sineOut",
              })
            );
          }),
          s.add(e.animate("BaseNone", t, a, 0)),
          s.get()
        );
      }
      const Em = "Breathe",
        Am = { schema: {} },
        Ym = { vertical: "y", horizontal: "x", center: "z" };
      function Dm({ value: e, type: t = "px" }, n = 1) {
        return `${e * n}${ka(t)}`;
      }
      function Xm(
        e,
        t,
        n,
        a,
        {
          direction: r = "vertical",
          distance: i = { value: 25, type: "px" },
          easing: o = "sineInOut",
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          c = Ym[r],
          d = Dm(i),
          l = wa(o);
        return (
          c === Ym.center &&
            u.add(e.engine.set(t, { transformPerspective: 800 })),
          u
            .add(
              e.animate("BasePosition", t, n / 4, 0, {
                to: { [c]: d },
                ease: l.out,
              })
            )
            .add(
              e.animate("BasePosition", t, n / 2, 0, {
                to: { [c]: `-${d}` },
                ease: l.inOut,
              })
            ),
          a
            ? u
                .add(
                  e.animate("BasePosition", t, n / 2, 0, {
                    to: { [c]: Dm(i, 0.5) },
                    ease: l.inOut,
                  })
                )
                .add(
                  e.animate("BasePosition", t, n / 2, 0, {
                    to: { [c]: Dm(i, -0.25) },
                    ease: l.inOut,
                  })
                )
                .add(
                  e.animate("BasePosition", t, n / 3, 0, {
                    to: { [c]: 0 },
                    ease: l.inOut,
                  })
                )
                .add(e.animate("BaseNone", t, a, 0))
            : u.add(
                e.animate("BasePosition", t, n / 4, 0, {
                  to: { [c]: 0 },
                  ease: l.in,
                })
              ),
          u.get()
        );
      }
      const qm = "Cross",
        Hm = { schema: {} },
        Vm = {
          left: { from: 0, to: 180 },
          "top-left": { from: 45, to: 225 },
          top: { from: 90, to: 270 },
          "top-right": { from: 135, to: 315 },
          right: { from: 180, to: 0 },
          "bottom-right": { from: 225, to: 45 },
          bottom: { from: 270, to: 90 },
          "bottom-left": { from: 315, to: 135 },
        };
      function Nm(e, t, n, a, { direction: r = "right", ...i }) {
        const o = e.sequence(i);
        return (
          t.forEach((t) => {
            const i = e.engine.getBoundingRect(t.offsetParent),
              s = e.engine.getBoundingRect(t),
              { distance: u, x: c, y: d } = xa(i, s, Vm[r].from),
              { distance: l, x: m, y: f } = xa(i, s, Vm[r].to),
              p = (l / (l + u)) * n,
              h = (u / (l + u)) * n;
            o.add(
              e.animate("BasePosition", t, p, 0, {
                to: { x: m, y: f },
                ease: "linear",
              })
            )
              .add(e.engine.set(t, { x: c, y: d }))
              .add(
                e.animate("BasePosition", t, h, 0, {
                  to: { x: 0, y: 0 },
                  ease: "linear",
                })
              )
              .add(e.animate("BaseNone", t, a, 0));
          }),
          o.get()
        );
      }
      const zm = "DVD",
        Lm = { schema: {} },
        Um = 1,
        jm = -1,
        Wm = 1,
        Qm = -1;
      const Zm = {
        soft: { spinDeg: 0, scale: 1 },
        medium: { spinDeg: 45, scale: 1 },
        hard: { spinDeg: 45, scale: 0.8 },
      };
      function Gm(e, t, n, a, { power: r = "soft", ...i } = {}) {
        const o = e.sequence(i);
        return (
          t.forEach((i) => {
            const { offsetWidth: s, offsetHeight: u } = i.offsetParent,
              c = e.engine.getBoundingRect(i),
              d = (function ({ left: e, top: t, width: n, height: a }, r, i) {
                const o = { x: e, y: t },
                  s = e > t ? { x: e - t, y: 0 } : { x: 0, y: t - e },
                  u = [o],
                  c = { x: Um, y: Wm },
                  d = {
                    [`${jm}${Qm}`]: (e, t) => Math.min(e, t),
                    [`${jm}${Wm}`]: (e, t) => Math.min(e, i - (t + a)),
                    [`${Um}${Qm}`]: (e, t) => Math.min(t, r - (e + n)),
                    [`${Um}${Wm}`]: (e, t) =>
                      Math.min(i - (t + a), r - (e + n)),
                  };
                for (
                  ;
                  Oa(s, u[u.length - 1]) >= 30 || c.x !== Um || c.y !== Wm;

                ) {
                  const { x: e, y: t } = u[u.length - 1],
                    o = d[`${c.x}${c.y}`](e, t),
                    s = { x: e + o * c.x, y: t + o * c.y };
                  u.push(s),
                    (c.x = s.x + n >= r ? jm : s.x <= 0 ? Um : c.x),
                    (c.y = s.y + a >= i ? Qm : s.y <= 0 ? Wm : c.y);
                }
                return [...u, o];
              })(c, s, u),
              l = (function (e, t, n, a) {
                const r = Math.sqrt(Math.pow(a, 2) + Math.pow(n, 2));
                return e.map((e, n, a) => {
                  const i = a[n + 1];
                  return ((i ? Oa(e, i) : 0) / r) * t;
                });
              })(d, n, s, u);
            d.forEach(({ x: n, y: i }, s) => {
              const u = n - c.left,
                d = i - c.top,
                m = s > 0 ? l[s - 1] : 0,
                { spinDeg: f, scale: p } = Zm[r];
              o.add([
                e.animate("BasePosition", t, m, a, {
                  to: { x: u, y: d },
                  ease: "linear",
                }),
                e.animate("BaseRotate", t, m, a, {
                  to: { rotation: `+=${f * m}deg` },
                  ease: "linear",
                }),
                e.animate("BaseScale", t, m, a, {
                  to: { scale: s % 2 == 0 ? 1 : p },
                  ease: "linear",
                }),
              ]);
            });
          }),
          o.get()
        );
      }
      const Km = "Flash",
        Jm = { schema: {} };
      function ef(e, t, n, a, { easing: r = "cubicInOut", ...i } = {}) {
        const o = e.sequence(i);
        return (
          o
            .add(
              e.animate("BaseFade", t, n / 2, 0, {
                to: { opacity: 1e-4 },
                ease: r,
              })
            )
            .add(
              e.animate("BaseFade", t, n / 2, 0, {
                to: { opacity: 1 },
                ease: r,
              })
            )
            .add(e.animate("BaseNone", t, a, 0)),
          o.get()
        );
      }
      const tf = "Flip",
        nf = { schema: {} },
        af = {
          soft: { ease: "linear" },
          medium: { ease: "quintInOut" },
          hard: { ease: "backOut" },
        },
        rf = { vertical: "rotationX", horizontal: "rotationY" };
      function of(
        e,
        t,
        n,
        a,
        {
          direction: r = "horizontal",
          power: i,
          easing: o = "linear",
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          c = rf[r],
          d = void 0 !== i ? af[i].ease : o;
        return (
          u
            .add(e.engine.set(t, { transformPerspective: 800 }))
            .add(
              e.animate("BaseRotate3D", t, n, 0, {
                to: { [c]: "360deg" },
                ease: d,
              })
            )
            .add(e.animate("BaseNone", t, a, 0)),
          u.get()
        );
      }
      const sf = "Fold",
        uf = { schema: {} },
        cf = 15,
        df = {
          soft: { rotationFactor: 1 },
          medium: { rotationFactor: 2 },
          hard: { rotationFactor: 3 },
        },
        lf = {
          top: { rotationAxis: "rotationX", transformOrigin: "50% 0" },
          right: { rotationAxis: "rotationY", transformOrigin: "100% 50%" },
          bottom: { rotationAxis: "rotationX", transformOrigin: "50% 100%" },
          left: { rotationAxis: "rotationY", transformOrigin: "0 50%" },
        };
      function mf(
        e,
        t,
        n,
        a,
        {
          direction: r = "top",
          power: i,
          angle: o = cf,
          easing: s = "cubicInOut",
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          d = void 0 === i,
          { rotationAxis: l, transformOrigin: m } = lf[r],
          f = wa(d ? s : "cubicInOut"),
          p = d ? o : cf * df[i].rotationFactor;
        if (
          (t.forEach((t) => {
            const n = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              a = m.split(" "),
              { x: r, y: i } = ma(
                { x: a[0], y: a[1] },
                e.engine.getBoundingRect(t),
                (0, ua.kU)(n)
              );
            c.add(
              e.engine.set(t, {
                x: r,
                y: i,
                transformOrigin: m,
                transformPerspective: 800,
              })
            );
          }),
          c.add(
            e.animate("BaseRotate3D", t, n / 4, 0, {
              to: { [l]: `${p}deg` },
              ease: f.out,
            })
          ),
          a)
        ) {
          const r = (function (e, t) {
            return [
              { fold: -0.7 * e, frameTime: t },
              { fold: 0.6 * e, frameTime: t },
              { fold: -0.3 * e, frameTime: 0.9 * t },
              { fold: 0.2 * e, frameTime: 0.8 * t },
              { fold: -0.05 * e, frameTime: t },
              { fold: 0, frameTime: 0.7 * t },
            ];
          })(p, n / 2);
          r.forEach(({ fold: n, frameTime: a }) =>
            c.add(
              e.animate("BaseRotate3D", t, a, 0, {
                to: { [l]: `${n}deg` },
                ease: "sineInOut",
              })
            )
          ),
            c.add(e.animate("BaseNone", t, a, 0));
        } else
          c.add(
            e.animate("BaseRotate3D", t, n / 2, 0, {
              to: { [l]: -p + "deg" },
              ease: f.inOut,
            })
          ).add(
            e.animate("BaseRotate3D", t, n / 4, 0, {
              to: { [l]: 0 },
              ease: f.in,
            })
          );
        return c.get();
      }
      const ff = "Jello",
        pf = { schema: {} },
        hf = [
          { keyframe: 24, skewY: 7 },
          { keyframe: 38, skewY: -2 },
          { keyframe: 58, skewY: 4 },
          { keyframe: 80, skewY: -2 },
          { keyframe: 100, skewY: 0 },
        ],
        gf = {
          soft: { jelloFactor: 1 },
          medium: { jelloFactor: 2 },
          hard: { jelloFactor: 4 },
        };
      function yf(e, t, n, a, { power: r, intensity: i = 0.25, ...o } = {}) {
        const s = e.sequence(o),
          u = _a(hf, n),
          c = (0, ua._b)(0, 1, gf.soft.jelloFactor, gf.hard.jelloFactor, i),
          d = void 0 !== r ? gf[r].jelloFactor : c;
        return (
          hf.forEach(({ skewY: n }, a) => {
            s.add(
              e.animate("BaseSkew", t, u[a], 0, {
                to: { skewY: n * d + "deg" },
              })
            );
          }),
          s.add(e.animate("BaseNone", t, a, 0)),
          s.get()
        );
      }
      const bf = "Poke",
        vf = { schema: {} },
        xf = [
          { keyframe: 17, translate: 7 },
          { keyframe: 32, translate: 25 },
          { keyframe: 48, translate: 8 },
          { keyframe: 56, translate: 11 },
          { keyframe: 66, translate: 25 },
          { keyframe: 83, translate: 4 },
          { keyframe: 100, translate: 0 },
        ],
        _f = {
          soft: { pokeFactor: 1 },
          medium: { pokeFactor: 2 },
          hard: { pokeFactor: 4 },
        },
        wf = {
          top: { transformAxis: "y", transformDirection: -1 },
          bottom: { transformAxis: "y", transformDirection: 1 },
          right: { transformAxis: "x", transformDirection: 1 },
          left: { transformAxis: "x", transformDirection: -1 },
        };
      function Of(
        e,
        t,
        n,
        a,
        { power: r, intensity: i = 0.5, direction: o = "right", ...s } = {}
      ) {
        const u = e.sequence(s),
          { transformAxis: c, transformDirection: d } = wf[o],
          l = _a(xf, n),
          m = (0, ua._b)(0, 1, _f.soft.pokeFactor, _f.hard.pokeFactor, i),
          f = void 0 !== r ? _f[r].pokeFactor : m;
        return (
          xf.forEach(({ translate: n }, a) => {
            u.add(
              e.animate("BasePosition", t, l[a], 0, { to: { [c]: n * f * d } })
            );
          }),
          u.add(e.animate("BaseNone", t, a, 0)),
          u.get()
        );
      }
      const Bf = "Pulse",
        Tf = { schema: {} },
        Pf = [
          { keyframe: 27, scale: 0.96 },
          { keyframe: 45, scale: 1 },
          { keyframe: 72, scale: 0.93 },
          { keyframe: 100, scale: 1 },
        ],
        kf = {
          soft: { pulseOffset: 0 },
          medium: { pulseOffset: 0.06 },
          hard: { pulseOffset: 0.12 },
        };
      function Sf(e, t, n, a, { power: r, intensity: i = 0, ...o } = {}) {
        const s = e.sequence(o),
          u = _a(Pf, n),
          c = (0, ua._b)(0, 1, kf.soft.pulseOffset, kf.hard.pulseOffset, i),
          d = void 0 !== r ? kf[r].pulseOffset : c;
        return (
          Pf.forEach(({ scale: n }, a) => {
            s.add(
              e.animate("BaseScale", t, u[a], 0, {
                to: { scale: n - (n < 1 ? d : 0) },
              })
            );
          }),
          s.add(e.animate("BaseNone", t, a, 0)),
          s.get()
        );
      }
      const Mf = "Rubber",
        If = { schema: {} },
        Ff = [
          { keyframe: 45, scaleX: 1.03, scaleY: 0.93 },
          { keyframe: 56, scaleX: 0.9, scaleY: 1.03 },
          { keyframe: 66, scaleX: 1.02, scaleY: 0.96 },
          { keyframe: 78, scaleX: 0.98, scaleY: 1.02 },
          { keyframe: 89, scaleX: 1.005, scaleY: 0.9995 },
          { keyframe: 100, scaleX: 1, scaleY: 1 },
        ],
        Rf = {
          soft: { rubberOffset: 0 },
          medium: { rubberOffset: 0.05 },
          hard: { rubberOffset: 0.1 },
        };
      function $f(e, t, n, a, { power: r, intensity: i = 0.5, ...o } = {}) {
        const s = e.sequence(o),
          u = _a(Ff, n),
          c = (0, ua._b)(0, 1, Rf.soft.rubberOffset, Rf.hard.rubberOffset, i),
          d = void 0 !== r ? Rf[r].rubberOffset : c;
        return (
          Ff.forEach(({ scaleX: n, scaleY: a }, r) => {
            const i = r === Ff.length - 1,
              o = d * (i ? 0 : r % 2 == 0 ? 1 : -0.5);
            s.add(
              e.animate("BaseScale", t, u[r], 0, {
                to: { scaleX: n + o, scaleY: a - o },
              })
            );
          }),
          s.add(e.animate("BaseNone", t, a, 0)),
          s.get()
        );
      }
      const Cf = "Spin",
        Ef = { schema: {} },
        Af = {
          soft: { easing: "linear" },
          medium: { easing: "quintInOut" },
          hard: { easing: "backOut" },
        },
        Yf = { clockwise: 1, "counter-clockwise": -1 };
      function Df(
        e,
        t,
        n,
        a,
        {
          power: r,
          easing: i = "linear",
          direction: o = "clockwise",
          ...s
        } = {}
      ) {
        const u = e.sequence(s),
          c = Yf[o],
          d = void 0 !== r ? Af[r].easing : i;
        return (
          u
            .add(
              e.animate("BaseRotate", t, n, 0, {
                to: { rotation: `+=${360 * c}deg` },
                ease: d,
              })
            )
            .add(e.animate("BaseNone", t, a, 0)),
          u.get()
        );
      }
      const Xf = "Swing",
        qf = { schema: {} },
        Hf = {
          soft: { swingFactor: 1 },
          medium: { swingFactor: 2 },
          hard: { swingFactor: 3 },
        };
      function Vf(
        e,
        t,
        n,
        a,
        { power: r, swing: i = 20, easing: o = "sineInOut", ...s } = {}
      ) {
        const u = e.sequence(s),
          c = wa(o),
          d = void 0 !== r ? 20 * Hf[r].swingFactor : i;
        if (
          (t.forEach((t) => {
            const n = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              { x: a, y: r } = ma(
                { x: "50%", y: "0" },
                e.engine.getBoundingRect(t),
                (0, ua.kU)(n)
              );
            u.add(e.engine.set(t, { x: a, y: r, transformOrigin: "50% 0" }));
          }),
          u
            .add(
              e.animate("BaseRotate", t, n / 4, 0, {
                to: { rotation: `+=${d}deg` },
                ease: c.out,
              })
            )
            .add(
              e.animate("BaseRotate", t, n / 2, 0, {
                to: { rotation: `-=${2 * d}deg` },
                ease: c.inOut,
              })
            ),
          a)
        ) {
          const r = (function (e, t, n) {
            return [
              { angle: n, timeToFrame: 0 },
              { angle: 0.6 * e, timeToFrame: t },
              { angle: -0.3 * e, timeToFrame: t },
              { angle: 0.2 * e, timeToFrame: t },
              { angle: -0.05 * e, timeToFrame: t },
              { angle: 0, timeToFrame: 0.8 * t },
            ];
          })(d, n / 2, -d);
          (function (e) {
            const t = [];
            for (let n = 1; n < e.length; n++) {
              const a = e[n] - e[n - 1];
              t.push(a);
            }
            return t;
          })(r.map((e) => e.angle)).forEach((n, a) => {
            const i = n > 0 ? `+=${n}deg` : `-=${-n}deg`;
            u.add(
              e.animate("BaseRotate", t, r[a + 1].timeToFrame, 0, {
                to: { rotation: i },
                ease: "sineInOut",
              })
            );
          }),
            u.add(e.animate("BaseNone", t, a, 0));
        } else
          u.add(
            e.animate("BaseRotate", t, n / 4, 0, {
              to: { rotation: `+=${d}deg` },
              ease: c.in,
            })
          );
        return u.get();
      }
      const Nf = "Wiggle",
        zf = { schema: {} },
        Lf = [
          { keyframe: 18, transY: -10, accRotate: 10 },
          { keyframe: 35, transY: 0, accRotate: -18 },
          { keyframe: 53, transY: 0, accRotate: 14 },
          { keyframe: 73, transY: 0, accRotate: -10 },
          { keyframe: 100, transY: 0, accRotate: 4 },
        ],
        Uf = {
          soft: { wiggleFactor: 1 },
          medium: { wiggleFactor: 2 },
          hard: { wiggleFactor: 4 },
        };
      function jf(e, t, n, a, { power: r, intensity: i = 0.5, ...o } = {}) {
        const s = e.sequence(o),
          u = _a(Lf, n),
          c = (0, ua._b)(0, 1, Uf.soft.wiggleFactor, Uf.hard.wiggleFactor, i),
          d = void 0 !== r ? Uf[r].wiggleFactor : c;
        return (
          Lf.forEach(({ transY: n, accRotate: a }, r) => {
            s.add([
              e.animate("BasePosition", t, u[r], 0, {
                to: { y: n * d + "px" },
              }),
              e.animate("BaseRotate", t, u[r], 0, {
                to: { rotation: `+=${a * d}deg` },
              }),
            ]);
          }),
          s.add(e.animate("BaseNone", t, a, 0)),
          s.get()
        );
      }
      const Wf = "ArcScroll",
        Qf = { schema: {} },
        Zf = { vertical: "rotationX", horizontal: "rotationY" },
        Gf = "linear",
        Kf = {
          in: { fromValue: -68, toValue: 0 },
          out: { fromValue: 0, toValue: 68 },
          continuous: { fromValue: -68, toValue: 68 },
        };
      function Jf(
        e,
        t,
        n,
        a,
        { direction: r = "horizontal", range: i = "in", ...o } = {}
      ) {
        const s = e.sequence(o),
          u = Zf[r],
          { fromValue: c, toValue: d } = Kf[i];
        return (
          s.add(
            e.animate("BaseRotate3D", t, 1e3, 0, {
              from: {
                [u]: c,
                transformOrigin: "50% 50% -300px",
                transformPerspective: 500,
              },
              to: {
                [u]: d,
                transformOrigin: "50% 50% -300px",
                transformPerspective: 500,
              },
              ease: Gf,
            })
          ),
          s.get()
        );
      }
      const ep = "BlurScroll",
        tp = { schema: {} },
        np = { soft: { blur: 6 }, medium: { blur: 25 }, hard: { blur: 50 } },
        ap = "linear",
        rp = {
          in: (e) => ({ fromValue: e, toValue: 0 }),
          out: (e) => ({ fromValue: 0, toValue: e }),
        };
      function ip(
        e,
        t,
        n,
        a,
        { blur: r = 6, power: i, range: o = "in", ...s } = {}
      ) {
        const u = e.sequence(s),
          c = void 0 !== i ? np[i].blur : r,
          { fromValue: d, toValue: l } = rp[o](c);
        return (
          u.add(
            e.animate("BaseFilter", t, 1e3, 0, {
              from: { filter: `blur(${d}px)` },
              to: { filter: `blur(${l}px)` },
              ease: ap,
            })
          ),
          u.get()
        );
      }
      const op = "FadeScroll",
        sp = { schema: {} },
        up = "linear",
        cp = {
          in: (e) => ({ fromValue: e, toValue: 1 }),
          out: (e) => ({ fromValue: 1, toValue: e }),
        };
      function dp(e, t, n, a, { opacity: r = 0, range: i = "in", ...o } = {}) {
        const s = e.sequence(o),
          { fromValue: u, toValue: c } = cp[i](r);
        return (
          s.add(
            e.animate("BaseFade", t, 1e3, 0, {
              from: { opacity: u },
              to: { opacity: c },
              ease: up,
            })
          ),
          s.get()
        );
      }
      const lp = "FlipScroll",
        mp = { schema: {} },
        fp = "linear",
        pp = {
          soft: { rotation: 60 },
          medium: { rotation: 240 },
          hard: { rotation: 420 },
        },
        hp = { vertical: "rotationX", horizontal: "rotationY" },
        gp = {
          in: (e) => ({ fromValue: -e, toValue: 0 }),
          out: (e) => ({ fromValue: 0, toValue: e }),
          continuous: (e) => ({ fromValue: -e, toValue: e }),
        };
      function yp(
        e,
        t,
        n,
        a,
        {
          rotate: r = 240,
          direction: i = "horizontal",
          power: o,
          range: s = "continuous",
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          d = hp[i],
          { rotation: l } = void 0 !== o ? pp[o] : { rotation: r },
          { fromValue: m, toValue: f } = gp[s](l);
        return (
          c.add(
            e.animate("BaseRotate3D", t, 1e3, 0, {
              from: { [d]: m, transformPerspective: 800 },
              to: { [d]: f, transformPerspective: 800 },
              ease: fp,
            })
          ),
          c.get()
        );
      }
      const bp = "GrowScroll",
        vp = { schema: {} },
        xp = 40,
        _p = {
          soft: { scaleFrom: 0.8, scaleTo: 1.2, travelY: 0 },
          medium: { scaleFrom: 0.3, scaleTo: 1.7, travelY: 0.75 },
          hard: { scaleFrom: 0, scaleTo: 4, travelY: 1 },
        },
        wp = {
          in: (e, t, n) => ({
            fromValues: { scale: e, travel: n },
            toValues: { scale: 1, travel: 0 },
            scaleDelay: 600,
            scaleEase: "sineIn",
          }),
          out: (e, t, n) => ({
            fromValues: { scale: 1, travel: 0 },
            toValues: { scale: t, travel: -n },
            scaleDelay: 0,
            scaleEase: "linear",
          }),
          continuous: (e, t, n) => ({
            fromValues: { scale: e, travel: n },
            toValues: { scale: t, travel: -n },
            scaleDelay: 220,
            scaleEase: "sineInOut",
          }),
        };
      function Op(
        e,
        t,
        n,
        a,
        {
          power: r,
          range: i = "in",
          scale: o = "in" === i ? _p.hard.scaleFrom : _p.hard.scaleTo,
          speed: s = 0,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          {
            scaleFrom: d,
            scaleTo: l,
            travelY: m,
          } = void 0 !== r ? _p[r] : { scaleFrom: o, scaleTo: o, travelY: s },
          {
            fromValues: f,
            toValues: p,
            scaleDelay: h,
            scaleEase: g,
          } = wp[i](d, l, m * -xp),
          y = "hard" === r && "out" !== i ? h : 0,
          b = "out" === i ? 700 : 1e3 - y;
        return (
          c.add([
            e.animate("BaseScale", t, b, y, {
              from: { scale: f.scale },
              to: { scale: p.scale },
              ease: g,
            }),
            e.animate("BasePosition", t, 1e3, 0, {
              from: { y: `${f.travel}vh` },
              to: { y: `${p.travel}vh` },
              ease: "linear",
            }),
          ]),
          c.get()
        );
      }
      const Bp = {
          getScrubOffsets({ power: e, range: t = "in", speed: n = 0 }) {
            const a = (void 0 !== e ? _p[e].travelY : Math.abs(n)) * xp;
            return {
              start: "out" === t ? "0px" : -a + "vh",
              end: "in" === t ? "0px" : `${a}vh`,
            };
          },
        },
        Tp = "MoveScroll",
        Pp = { schema: {} },
        kp = {
          soft: { value: 150, type: "px" },
          medium: { value: 400, type: "px" },
          hard: { value: 800, type: "px" },
        },
        Sp = {
          in: (e, t) => ({
            fromValue: { x: e, y: t },
            toValue: { x: 0, y: 0 },
          }),
          out: (e, t) => ({
            fromValue: { x: 0, y: 0 },
            toValue: { x: e, y: t },
          }),
          continuous: (e, t) => ({
            fromValue: { x: e, y: t },
            toValue: { x: -e, y: -t },
          }),
        };
      function Mp(
        e,
        t,
        n,
        a,
        {
          power: r,
          distance: i = { value: 400, type: "px" },
          angle: o = 210,
          range: s = "in",
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          d = r ? kp[r] : i,
          [l, m] = Ba(o - 90, d.value),
          { fromValue: f, toValue: p } = Sp[s](Math.round(l), Math.round(m)),
          h = ka(d.type);
        return (
          c.add(
            e.animate("BasePosition", t, 1e3, 0, {
              from: { x: `${f.x}${h}`, y: `${f.y}${h}` },
              to: { x: `${p.x}${h}`, y: `${p.y}${h}` },
              ease: "linear",
            })
          ),
          c.get()
        );
      }
      const Ip = {
          getScrubOffsets({
            angle: e = 210,
            distance: t = { value: 400, type: "px" },
            power: n,
            range: a = "in",
          }) {
            const r = n ? kp[n] : t,
              [, i] = Ba(e - 90, r.value),
              o = (i < 0 && "out" !== a) || (i > 0 && "out" === a),
              s = ka(r.type),
              u = o ? `${i}${s}` : "0px",
              c = o ? `${Math.abs(i)}${s}` : "0px";
            return {
              start: "out" === a ? "0px" : u,
              end: "in" === a ? "0px" : c,
            };
          },
        },
        Fp = "PanScroll",
        Rp = { schema: {} },
        $p = { left: 1, right: -1 },
        Cp = "linear",
        Ep = {
          in: (e, t) => ({ fromValue: e, toValue: 0 }),
          out: (e, t) => ({ fromValue: 0, toValue: e }),
          continuous: (e, t) => ({ fromValue: e, toValue: t }),
        };
      function Ap(
        e,
        t,
        n,
        a,
        {
          distance: r = { value: 400, type: "px" },
          direction: i = "left",
          startFromOffScreen: o = !0,
          range: s = "in",
          ...u
        } = {}
      ) {
        const c = e.sequence(u);
        return (
          t.forEach((n) => {
            const { left: a, width: u } = n.getBoundingClientRect(),
              { innerWidth: d } = e.frame,
              l = {
                left: { startX: -a - u, endX: d - a },
                right: { startX: d - a, endX: -a - u },
              },
              m = r.value * $p[i],
              { startX: f, endX: p } = o
                ? l[i]
                : { startX: `${-m}${ka(r.type)}`, endX: `${m}${ka(r.type)}` },
              { fromValue: h, toValue: g } = Ep[s](f, p);
            c.add(
              e.animate("BasePosition", t, 1e3, 0, {
                from: { x: h },
                to: { x: g },
                ease: Cp,
              })
            );
          }),
          c.get()
        );
      }
      const Yp = "ParallaxScroll",
        Dp = { schema: {} },
        Xp = "linear",
        qp = 0.5;
      function Hp(e, t, n, a, { speed: r = qp, ...i } = {}) {
        const o = e.sequence(i);
        return (
          o.add(
            e.animate("BasePosition", t, 1e3, 0, {
              from: { y: -50 * r + "vh" },
              to: { y: 50 * r + "vh" },
              ease: Xp,
            })
          ),
          o.get()
        );
      }
      function Vp(e, t) {
        return 100 * e * t + "vh";
      }
      const Np = {
          getScrubOffsets({ speed: e = qp }) {
            return { start: Vp(-0.5, e), end: Vp(0.5, e) };
          },
        },
        zp = "RevealScroll",
        Lp = { schema: {} },
        Up = {
          top: { dx: 0, dy: -1, idx: 0, clip: "bottom" },
          right: { dx: 1, dy: 0, idx: 1, clip: "left" },
          bottom: { dx: 0, dy: 1, idx: 2, clip: "top" },
          left: { dx: -1, dy: 0, idx: 3, clip: "right" },
        },
        jp = { top: "bottom", bottom: "top", left: "right", right: "left" },
        Wp = "linear",
        Qp = {
          in: (e, t) => [{ fromValue: e, toValue: "" }],
          out: (e, t) => [{ fromValue: "", toValue: e }],
          continuous: (e, t) => [
            { fromValue: e, toValue: "" },
            { fromValue: "", toValue: t },
          ],
        };
      function Zp(
        e,
        t,
        n,
        a,
        { direction: r = "bottom", range: i = "in", ...o } = {}
      ) {
        const s = e.sequence(o);
        return (
          t.forEach((t) => {
            const n = e.engine.getBoundingRect(t),
              a = e.engine.getBoundingContentRect(t),
              o = Number(e.engine.getProperty(t, "--comp-rotate-z") || 0),
              u = la(Up, r, o),
              c = ca(n, a, Up[u].clip),
              d = ca(n, a, Up[jp[u]].clip);
            Qp[i](c, d).forEach(({ fromValue: n, toValue: a }) =>
              s.add(
                e.animate("BaseClipPath", t, 1e3, 0, {
                  from: n,
                  to: a,
                  ease: Wp,
                })
              )
            );
          }),
          s.get()
        );
      }
      const Gp = "ShapeScroll",
        Kp = { schema: {} },
        Jp = "circInOut",
        eh = {
          diamond: {
            start: {
              soft: "polygon(50% 20%, 80% 50%, 50% 80%, 20% 50%)",
              medium: "polygon(50% 40%, 60% 50%, 50% 60%, 40% 50%)",
              hard: "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
            },
            end: "polygon(50% -50%, 150% 50%, 50% 150%, -50% 50%)",
          },
          window: {
            start: {
              soft: "inset(20% round 50% 50% 0% 0%)",
              medium: "inset(35% round 50% 50% 0% 0%)",
              hard: "inset(50% round 50% 50% 0% 0%)",
            },
            end: "inset(-20% round 50% 50% 0% 0%)",
          },
          rectangle: {
            start: {
              soft: "inset(20%)",
              medium: "inset(50%)",
              hard: "inset(80%)",
            },
            end: "inset(0%)",
          },
          circle: {
            start: {
              soft: "circle(40%)",
              medium: "circle(25%)",
              hard: "circle(0%)",
            },
            end: "circle(75%)",
          },
          ellipse: {
            start: {
              soft: "ellipse(50% 50%)",
              medium: "ellipse(30% 30%)",
              hard: "ellipse(0% 0%)",
            },
            end: "ellipse(75% 75%)",
          },
        },
        th = {
          diamond: (e) => {
            const t = e / 2,
              n = 100 - t;
            return [
              `polygon(50% ${t}%, ${n}% 50%, 50% ${n}%, ${t}% 50%)`,
              "polygon(50% -50%, 150% 50%, 50% 150%, -50% 50%)",
            ];
          },
          window: (e) => [
            `inset(${e / 2}% round 50% 50% 0% 0%)`,
            "inset(-20% round 50% 50% 0% 0%)",
          ],
          rectangle: (e) => [`inset(${e}%)`, "inset(0%)"],
          circle: (e) => [`circle(${100 - e}%)`, "circle(75%)"],
          ellipse: (e) => {
            const t = 50 - e / 2;
            return [`ellipse(${t}% ${t}%)`, "ellipse(75% 75%)"];
          },
        },
        nh = {
          in: (e, t) => ({
            fromValue: { webkitClipPath: e, clipPath: e },
            toValue: { webkitClipPath: t, clipPath: t },
          }),
          out: (e, t) => ({
            fromValue: { webkitClipPath: t, clipPath: t },
            toValue: { webkitClipPath: e, clipPath: e },
          }),
        };
      function ah(
        e,
        t,
        n,
        a,
        {
          shape: r = "circle",
          power: i,
          intensity: o = 0.5,
          range: s = "in",
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          [d, l] = void 0 !== i ? [eh[r].start[i], eh[r].end] : th[r](100 * o),
          { fromValue: m, toValue: f } = nh[s](d, l);
        return (
          c.add(
            e.animate("BaseClipPath", t, 1e3, 0, { from: m, to: f, ease: Jp })
          ),
          c.get()
        );
      }
      const rh = "ShrinkScroll",
        ih = { schema: {} },
        oh = 40,
        sh = {
          soft: { scaleFrom: 1.2, scaleTo: 0.8, travelY: 0 },
          medium: { scaleFrom: 1.7, scaleTo: 0.3, travelY: 0.5 },
          hard: { scaleFrom: 3.5, scaleTo: 0, travelY: 1 },
        },
        uh = {
          in: (e, t, n) => ({
            fromValues: { scale: e, travel: n },
            toValues: { scale: 1, travel: 0 },
            scaleDuration: 1e3,
            scaleEase: "sineIn",
          }),
          out: (e, t, n) => ({
            fromValues: { scale: 1, travel: 0 },
            toValues: { scale: t, travel: -n },
            scaleDuration: 370,
            scaleEase: "sineOut",
          }),
          continuous: (e, t, n) => ({
            fromValues: { scale: e, travel: n },
            toValues: { scale: t, travel: -n },
            scaleDuration: 775,
            scaleEase: "sineInOut",
          }),
        };
      function ch(
        e,
        t,
        n,
        a,
        {
          power: r,
          range: i = "in",
          scale: o = "in" === i ? 1.2 : 0.8,
          speed: s = 0,
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          {
            scaleFrom: d,
            scaleTo: l,
            travelY: m,
          } = void 0 !== r ? sh[r] : { scaleFrom: o, scaleTo: o, travelY: s },
          {
            fromValues: f,
            toValues: p,
            scaleDuration: h,
            scaleEase: g,
          } = uh[i](d, l, m * -oh),
          y = "hard" === r ? h : 1e3;
        return (
          c.add([
            e.animate("BaseScale", t, y, 0, {
              from: { scale: f.scale },
              to: { scale: p.scale },
              ease: g,
            }),
            e.animate("BasePosition", t, 1e3, 0, {
              from: { y: `${f.travel}vh` },
              to: { y: `${p.travel}vh` },
              ease: "linear",
            }),
          ]),
          c.get()
        );
      }
      const dh = {
          getScrubOffsets({ power: e, range: t = "in", speed: n = 0 }) {
            const a = (void 0 !== e ? sh[e].travelY : Math.abs(n)) * oh;
            return {
              start: "out" === t ? "0px" : -a + "vh",
              end: "in" === t ? "0px" : `${a}vh`,
            };
          },
        },
        lh = "SkewPanScroll",
        mh = { schema: {} },
        fh = "linear",
        ph = {
          soft: { skewX: 10 },
          medium: { skewX: 17 },
          hard: { skewX: 24 },
        },
        hh = { right: -1, left: 1 },
        gh = {
          in: (e, t, n) => ({
            fromValues: { skewX: e, startX: t },
            toValues: { skewX: 0, endX: 0 },
          }),
          out: (e, t, n) => ({
            fromValues: { skewX: 0, startX: 0 },
            toValues: { skewX: -e, endX: t },
          }),
          continuous: (e, t, n) => ({
            fromValues: { skewX: e, startX: t },
            toValues: { skewX: -e, endX: n },
          }),
        };
      function yh(
        e,
        t,
        n,
        a,
        {
          skew: r = 10,
          direction: i = "right",
          power: o,
          range: s = "in",
          ...u
        } = {}
      ) {
        const c = e.sequence(u);
        return (
          t.forEach((t) => {
            const { left: n, width: a } = t.getBoundingClientRect(),
              { innerWidth: u } = e.frame,
              d = {
                left: { startX: -n - a, endX: u - n },
                right: { startX: u - n, endX: -n - a },
              },
              l = (void 0 === o ? r : ph[o].skewX) * hh[i],
              { startX: m, endX: f } = d[i],
              { fromValues: p, toValues: h } = gh[s](l, m, f);
            c.add([
              e.animate("BaseSkew", t, 1e3, 0, {
                from: { skewX: p.skewX },
                to: { skewX: h.skewX },
                ease: fh,
              }),
              e.animate("BasePosition", t, 1e3, 0, {
                from: { x: p.startX },
                to: { x: h.endX },
                ease: fh,
              }),
            ]);
          }),
          c.get()
        );
      }
      const bh = "SlideScroll",
        vh = { schema: {} },
        xh = "linear",
        _h = {
          top: { dx: 0, dy: -1, idx: 0, clip: "bottom" },
          right: { dx: 1, dy: 0, idx: 1, clip: "left" },
          bottom: { dx: 0, dy: 1, idx: 2, clip: "top" },
          left: { dx: -1, dy: 0, idx: 3, clip: "right" },
        },
        wh = { top: "bottom", bottom: "top", left: "right", right: "left" },
        Oh = {
          in: (e, t, n, a) => [
            {
              fromValues: { clip: e, position: n },
              toValues: { clip: "", position: { x: 0, y: 0 } },
            },
          ],
          out: (e, t, n, a) => [
            {
              fromValues: { clip: "", position: { x: 0, y: 0 } },
              toValues: { clip: e, position: n },
            },
          ],
          continuous: (e, t, n, a) => [
            {
              fromValues: { clip: e, position: n },
              toValues: { clip: "", position: { x: 0, y: 0 } },
            },
            {
              fromValues: { clip: "", position: { x: 0, y: 0 } },
              toValues: { clip: t, position: a },
            },
          ],
        };
      function Bh(
        e,
        t,
        n,
        a,
        { direction: r = "bottom", range: i = "in", ...o } = {}
      ) {
        const s = e.sequence(o);
        return (
          t.forEach((n) => {
            const a = e.engine.getBoundingRect(n),
              o = e.engine.getBoundingContentRect(n),
              u = Number(e.engine.getProperty(n, "--comp-rotate-z") || 0),
              c = la(_h, r, u),
              d = ca(a, o, _h[c].clip),
              l = ca(a, o, _h[wh[c]].clip),
              m = ha(o, _h[c], (0, ua.kU)(u), 1),
              f = { x: -m.x, y: -m.y };
            Oh[i](d, l, m, f).forEach(({ fromValues: n, toValues: a }) => {
              s.add([
                e.animate("BaseClipPath", t, 1e3, 0, {
                  from: n.clip,
                  to: a.clip,
                  ease: xh,
                }),
                e.animate("BasePosition", t, 1e3, 0, {
                  from: n.position,
                  to: a.position,
                  ease: xh,
                }),
              ]);
            });
          }),
          s.get()
        );
      }
      const Th = "Spin3dScroll",
        Ph = { schema: {} },
        kh = "linear",
        Sh = 40,
        Mh = {
          soft: { rotation: 45, travelY: 0 },
          medium: { rotation: 100, travelY: 0.5 },
          hard: { rotation: 200, travelY: 1 },
        },
        Ih = {
          in: (e, t) => ({
            fromValues: {
              rotation3d: { rotationX: -2 * e, rotationY: -e },
              rotation: { rotation: `-=${e}deg` },
              travel: t,
            },
            toValues: {
              rotation3d: { rotationX: 0, rotationY: 0 },
              rotation: { rotation: 0 },
              travel: 0,
            },
          }),
          out: (e, t) => ({
            fromValues: {
              rotation3d: { rotationX: 0, rotationY: 0 },
              rotation: { rotation: 0 },
              travel: 0,
            },
            toValues: {
              rotation3d: { rotationX: 3 * e, rotationY: 2 * e },
              rotation: { rotation: `+=${e}deg` },
              travel: -t,
            },
          }),
          continuous: (e, t) => ({
            fromValues: {
              rotation3d: { rotationX: -2 * e, rotationY: -e },
              rotation: { rotation: `-=${e}deg` },
              travel: t,
            },
            toValues: {
              rotation3d: { rotationX: 1.8 * e, rotationY: e },
              rotation: { rotation: `+=${2 * e}deg` },
              travel: -t,
            },
          }),
        };
      function Fh(
        e,
        t,
        n,
        a,
        { rotate: r = -100, power: i, range: o = "in", speed: s = 0, ...u } = {}
      ) {
        const c = e.sequence(u),
          { rotation: d, travelY: l } =
            void 0 !== i ? Mh[i] : { rotation: r, travelY: s },
          { fromValues: m, toValues: f } = Ih[o](d, l * -Sh);
        return (
          c.add([
            e.animate("BaseRotate3D", t, 1e3, 0, {
              from: { ...m.rotation3d, transformPerspective: 1e3 },
              to: { ...f.rotation3d, transformPerspective: 1e3 },
              ease: kh,
            }),
            e.animate("BaseRotate", t, 1e3, 0, {
              from: m.rotation,
              to: f.rotation,
              ease: kh,
            }),
            e.animate("BasePosition", t, 1e3, 0, {
              from: { y: `${m.travel}vh` },
              to: { y: `${f.travel}vh` },
              ease: "linear",
            }),
          ]),
          c.get()
        );
      }
      const Rh = {
          getScrubOffsets({ power: e, range: t = "in", speed: n = 0 }) {
            const a = (void 0 !== e ? Mh[e].travelY : Math.abs(n)) * Sh;
            return {
              start: "out" === t ? "0px" : -a + "vh",
              end: "in" === t ? "0px" : `${a}vh`,
            };
          },
        },
        $h = "SpinScroll",
        Ch = { schema: {} },
        Eh = "linear",
        Ah = {
          soft: { scaleFactor: 1 },
          medium: { scaleFactor: 0.7 },
          hard: { scaleFactor: 0.4 },
        },
        Yh = { clockwise: 1, "counter-clockwise": -1 },
        Dh = {
          in: (e, t) => ({
            fromValues: { rotation: e, scale: t },
            toValues: { rotation: e, scale: 1 },
          }),
          out: (e, t) => ({
            fromValues: { rotation: 0, scale: 1 },
            toValues: { rotation: e, scale: t },
          }),
          continuous: (e, t) => ({
            fromValues: { rotation: e / 2, scale: t },
            toValues: { rotation: e, scale: 1 },
          }),
        };
      function Xh(
        e,
        t,
        n,
        a,
        {
          spins: r = 0.15,
          scale: i = 1,
          direction: o = "clockwise",
          power: s,
          range: u = "in",
          ...c
        } = {}
      ) {
        const d = e.sequence(c),
          l = Yh[o],
          m = 360 * r,
          { scaleFactor: f } = void 0 !== s ? Ah[s] : { scaleFactor: i },
          { fromValues: p, toValues: h } = Dh[u](m, f);
        return (
          d.add([
            e.animate("BaseRotate", t, 1e3, 0, {
              from: { rotation: `-=${p.rotation * l}deg` },
              to: { rotation: `+=${h.rotation * l}deg` },
              ease: Eh,
            }),
            e.animate("BaseScale", t, 1e3, 0, {
              from: { scale: p.scale },
              to: { scale: h.scale },
              ease: Eh,
            }),
          ]),
          d.get()
        );
      }
      const qh = "StretchScroll",
        Hh = { schema: {} },
        Vh = "backInOut",
        Nh = {
          soft: { scaleY: 1.2, scaleX: 0.8 },
          medium: { scaleY: 1.5, scaleX: 0.6 },
          hard: { scaleY: 2, scaleX: 0.4 },
        },
        zh = {
          in: (e, t) => [
            {
              fromValues: {
                scale: { scaleX: e, scaleY: t },
                opacity: 0,
                y: 100 * (t - 1) + "%",
              },
              toValues: { scale: { scaleX: 1, scaleY: 1 }, opacity: 1, y: 0 },
              fadeDelay: 0,
            },
          ],
          out: (e, t) => [
            {
              fromValues: { scale: { scaleX: 1, scaleY: 1 }, opacity: 1, y: 0 },
              toValues: {
                scale: { scaleX: e, scaleY: t },
                opacity: 0,
                y: 100 * (1 - t) + "%",
              },
              fadeDelay: 350,
            },
          ],
          continuous: (e, t) => [...zh.in(e, t), ...zh.out(e, t)],
        };
      function Lh(
        e,
        t,
        n,
        a,
        { power: r, stretch: i = 0.6, range: o = "out", ...s } = {}
      ) {
        const u = e.sequence(s),
          { scaleX: c, scaleY: d } =
            void 0 !== r ? Nh[r] : { scaleX: 1 - i, scaleY: 1 + i };
        return (
          zh[o](c, d).forEach(
            ({ fromValues: n, toValues: a, fadeDelay: r }) => {
              u.add([
                e.animate("BaseScale", t, 1e3, 0, {
                  from: n.scale,
                  to: a.scale,
                  ease: Vh,
                }),
                e.animate("BaseFade", t, 650, r, {
                  from: { opacity: n.opacity },
                  to: { opacity: a.opacity },
                  ease: Vh,
                }),
                e.animate("BasePosition", t, 1e3, 0, {
                  from: { y: n.y },
                  to: { y: a.y },
                  ease: Vh,
                }),
              ]);
            }
          ),
          u.get()
        );
      }
      const Uh = "TiltScroll",
        jh = { schema: {} },
        Wh = "linear",
        Qh = 40,
        [Zh, Gh, Kh] = [10, 25, 25],
        [Jh, eg, tg] = [-1, 1, 0],
        ng = {
          soft: { travelY: 0 },
          medium: { travelY: 0.5 },
          hard: { travelY: 1 },
        },
        ag = { right: 1, left: -1 },
        rg = {
          in: {
            fromValues: { rotations: [-1, -1, 1], travelY: eg },
            toValues: { rotations: [0, 0, -1], travelY: tg },
          },
          out: {
            fromValues: { rotations: [0, 0, 0], travelY: tg },
            toValues: { rotations: [-1, -1, 1], travelY: Jh },
          },
          continuous: {
            fromValues: { rotations: [-1, -1, -1], travelY: eg },
            toValues: { rotations: [1, 0.5, 1.25], travelY: Jh },
          },
        };
      function ig(e, t) {
        return (void 0 !== t ? ng[t].travelY : e) * -Qh;
      }
      function og(
        e,
        t,
        n,
        a,
        {
          power: r,
          speed: i = 0,
          range: o = "in",
          direction: s = "right",
          ...u
        } = {}
      ) {
        const c = e.sequence(u),
          { fromValues: d, toValues: l } = rg[o],
          [m, f, p, h, g, y] = [...d.rotations, ...l.rotations],
          [b, v] = [d.travelY, l.travelY],
          x = ag[s],
          _ = `${p < 0 ? "-=" : "+="}${Math.abs(p * Kh) * x}deg`,
          w = `${y < 0 ? "-=" : "+="}${Math.abs(y * Kh) * x}deg`,
          O = ig(i, r),
          B = O * b,
          T = O * v;
        return (
          c.add([
            e.animate("BaseRotate3D", t, 1e3, 0, {
              from: {
                rotationX: m * Zh,
                rotationY: f * Gh,
                transformPerspective: 400,
              },
              to: {
                rotationX: h * Zh,
                rotationY: g * Gh,
                transformPerspective: 400,
              },
              ease: Wh,
            }),
            e.animate("BaseRotate", t, 1e3, 0, {
              from: { rotation: _ },
              to: { rotation: w },
              ease: "sineInOut",
            }),
            e.animate("BasePosition", t, 1e3, 0, {
              from: { y: `${B}vh` },
              to: { y: `${T}vh` },
              ease: "linear",
            }),
          ]),
          c.get()
        );
      }
      const sg = {
          getScrubOffsets({ power: e, range: t = "in", speed: n = 0 }) {
            const a = Math.abs(ig(n, e));
            return {
              start: "out" === t ? "0px" : -a + "vh",
              end: "in" === t ? "0px" : `${a}vh`,
            };
          },
        },
        ug = "TurnScroll",
        cg = { schema: {} },
        dg = "linear",
        lg = 45,
        mg = {
          soft: { scaleFrom: 1, scaleTo: 1 },
          medium: { scaleFrom: 0.7, scaleTo: 1.3 },
          hard: { scaleFrom: 0.4, scaleTo: 1.6 },
        },
        fg = { clockwise: 1, "counter-clockwise": -1 },
        pg = {
          in: (e, t, n) => ({
            fromValues: { rotation: e, scale: t.scaleFrom, position: n.startX },
            toValues: { rotation: e, scale: 1, position: 0 },
          }),
          out: (e, t, n) => ({
            fromValues: { rotation: 0, scale: 1, position: 0 },
            toValues: { rotation: e, scale: t.scaleFrom, position: n.endX },
          }),
          continuous: (e, t, n) => ({
            fromValues: { rotation: e, scale: t.scaleFrom, position: n.startX },
            toValues: { rotation: 2 * e, scale: t.scaleTo, position: n.endX },
          }),
        };
      function hg(
        e,
        t,
        n,
        a,
        {
          scale: r = 1,
          spin: i = "clockwise",
          direction: o = "right",
          power: s,
          range: u = "in",
          ...c
        } = {}
      ) {
        const d = e.sequence(c);
        return (
          t.forEach((t) => {
            const { left: n, width: a } = t.getBoundingClientRect(),
              { innerWidth: c } = e.frame,
              l = {
                left: { startX: -n - a, endX: c - n },
                right: { startX: c - n, endX: -n - a },
              }[o],
              m = lg * fg[i],
              f = void 0 !== s ? mg[s] : { scaleFrom: r, scaleTo: r },
              { fromValues: p, toValues: h } = pg[u](m, f, l);
            d.add([
              e.animate("BaseRotate", t, 1e3, 0, {
                from: { rotation: `-=${p.rotation}deg` },
                to: { rotation: `+=${h.rotation}deg` },
                ease: dg,
              }),
              e.animate("BaseScale", t, 1e3, 0, {
                from: { scale: p.scale },
                to: { scale: h.scale },
                ease: dg,
              }),
              e.animate("BasePosition", t, 1e3, 0, {
                from: { x: p.position },
                to: { x: h.position },
                ease: dg,
              }),
            ]);
          }),
          d.get()
        );
      }
      const gg = "Tilt3DMouse",
        yg = { schema: {} };
      function bg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          angle: i = 5,
          perspective: o = 800,
          transitionDuration: s,
          transitionEasing: u = "linear",
        } = {}
      ) {
        const c = t[0],
          d = r ? -1 : 1;
        return (
          s && (c.style.transition = `transform ${s}ms ${Pa(u)}`),
          {
            progress({ x: e, y: t }) {
              const n = (0, ua._b)(0, 1, i, -i, t) * d,
                a = (0, ua._b)(0, 1, -i, i, e) * d,
                r = `perspective(${o}px) rotateX(${n}deg) rotateY(${a}deg) rotate(var(--comp-rotate-z, 0deg))`;
              c.style.transform = r;
            },
            kill() {
              (c.style.transform = ""), (c.style.transition = "");
            },
          }
        );
      }
      const vg = {
          top: [0, -50],
          bottom: [0, 50],
          right: [50, 0],
          left: [-50, 0],
          "center-horizontal": [0, 0],
          "center-vertical": [0, 0],
        },
        xg = "SwivelMouse",
        _g = { schema: {} };
      function wg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          angle: i = 5,
          perspective: o = 800,
          pivotAxis: s = "center-horizontal",
          transitionDuration: u,
          transitionEasing: c = "linear",
        } = {}
      ) {
        const d = t[0],
          l = r ? -1 : 1;
        return (
          u && (d.style.transition = `transform ${u}ms ${Pa(c)}`),
          {
            progress({ x: e, y: t }) {
              let n = "rotateX",
                a = t,
                r = -1;
              ("center-horizontal" !== s && "right" !== s && "left" !== s) ||
                ((n = "rotateY"), (a = e), (r = 1));
              const u = (0, ua._b)(0, 1, -i, i, a) * r * l,
                [c, m] = vg[s],
                f = `perspective(${o}px) translateX(${c}%) translateY(${m}%) ${n}(${u}deg) translateX(${-c}%) translateY(${-m}%) rotate(var(--comp-rotate-z, 0deg))`;
              d.style.transform = f;
            },
            kill() {
              (d.style.transform = ""), (d.style.transition = "");
            },
          }
        );
      }
      const Og = "TrackMouse",
        Bg = { schema: {} };
      function Tg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 200, type: "px" },
          axis: o = "both",
          transitionDuration: s,
          transitionEasing: u = "linear",
        } = {}
      ) {
        const c = t[0],
          d = r ? -1 : 1;
        return (
          s && (c.style.transition = `transform ${s}ms ${Pa(u)}`),
          {
            progress({ x: e, y: t }) {
              let n = 0,
                a = 0;
              ("both" !== o && "horizontal" !== o) ||
                (n = (0, ua._b)(0, 1, -i.value, i.value, e) * d),
                ("both" !== o && "vertical" !== o) ||
                  (a = (0, ua._b)(0, 1, -i.value, i.value, t) * d);
              const r = ka(i.type);
              c.style.transform = `translateX(${n}${r}) translateY(${a}${r}) rotate(var(--comp-rotate-z, 0deg))`;
            },
            kill() {
              (c.style.transform = ""), (c.style.transition = "");
            },
          }
        );
      }
      const Pg = "BlobMouse",
        kg = { schema: {} };
      function Sg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 200, type: "px" },
          scale: o = 1.4,
          transitionDuration: s,
          transitionEasing: u = "linear",
        } = {}
      ) {
        const c = t[0],
          d = r ? -1 : 1;
        return (
          s && (c.style.transition = `transform ${s}ms ${Pa(u)}`),
          {
            progress({ x: e, y: t }) {
              const n = (0, ua._b)(0, 1, -i.value, i.value, e) * d,
                a = (0, ua._b)(0, 1, -i.value, i.value, t) * d,
                r =
                  e < 0.5
                    ? (0, ua._b)(0, 0.5, o, 1, e)
                    : (0, ua._b)(0.5, 1, 1, o, e),
                s =
                  t < 0.5
                    ? (0, ua._b)(0, 0.5, o, 1, t)
                    : (0, ua._b)(0.5, 1, 1, o, t),
                u = ka(i.type),
                l = `translateX(${n}${u}) translateY(${a}${u}) scale(${r}, ${s}) rotate(var(--comp-rotate-z, 0deg))`;
              c.style.transform = l;
            },
            kill() {
              (c.style.transform = ""), (c.style.transition = "");
            },
          }
        );
      }
      const Mg = (e) => (e < 0.5 ? 2 * e ** 2 : 1 - (-2 * e + 2) ** 2 / 2),
        Ig = (e) =>
          e < 0.5
            ? (1 - Math.sqrt(1 - 4 * e ** 2)) / 2
            : (Math.sqrt(-(2 * e - 3) * (2 * e - 1)) + 1) / 2,
        Fg = "SkewMouse",
        Rg = { schema: {} };
      function $g(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 200, type: "px" },
          angle: o = 25,
          axis: s = "both",
          transitionDuration: u,
          transitionEasing: c = "linear",
        } = {}
      ) {
        const d = t[0],
          l = r ? -1 : 1;
        return (
          u && (d.style.transition = `transform ${u}ms ${Pa(c)}`),
          {
            progress({ x: e, y: t }) {
              let n = 0,
                a = 0,
                r = 0,
                u = 0;
              "vertical" !== s &&
                ((n = (0, ua._b)(0, 1, -i.value, i.value, e) * l),
                (r = (0, ua._b)(0, 1, o, -o, e) * l)),
                "horizontal" !== s &&
                  ((a = (0, ua._b)(0, 1, -i.value, i.value, t) * l),
                  (u = (0, ua._b)(0, 1, o, -o, t) * l)),
                "both" === s &&
                  ((r *= (0, ua._b)(0, 1, 1, -1, Ig(t))),
                  (u *= (0, ua._b)(0, 1, 1, -1, Ig(e))));
              const c = ka(i.type),
                m = `translateX(${n}${c}) translateY(${a}${c}) skew(${r}deg, ${u}deg) rotate(var(--comp-rotate-z, 0deg))`;
              d.style.transform = m;
            },
            kill() {
              (d.style.transform = ""), (d.style.transition = "");
            },
          }
        );
      }
      const Cg = "ScaleMouse",
        Eg = { schema: {} };
      function Ag(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 80, type: "px" },
          axis: o = "both",
          scale: s = 1.4,
          transitionDuration: u,
          transitionEasing: c = "linear",
        } = {}
      ) {
        const d = t[0],
          l = r ? -1 : 1;
        return (
          u && (d.style.transition = `transform ${u}ms ${Pa(c)}`),
          {
            progress({ x: e, y: t }) {
              let n = 0,
                a = 0,
                r = 1,
                u = 1;
              ("both" !== o && "horizontal" !== o) ||
                ((n = (0, ua._b)(0, 1, -i.value, i.value, e) * l),
                (r =
                  e < 0.5
                    ? (0, ua._b)(0, 0.5, s, 1, e)
                    : (0, ua._b)(0.5, 1, 1, s, e))),
                ("both" !== o && "vertical" !== o) ||
                  ((a = (0, ua._b)(0, 1, -i.value, i.value, t) * l),
                  (u =
                    t < 0.5
                      ? (0, ua._b)(0, 0.5, s, 1, t)
                      : (0, ua._b)(0.5, 1, 1, s, t)));
              const c = s < 1 ? Math.min(r, u) : Math.max(r, u),
                m = ka(i.type),
                f = `translateX(${n}${m}) translateY(${a}${m}) scale(${c}) rotate(var(--comp-rotate-z, 0deg))`;
              d.style.transform = f;
            },
            kill() {
              (d.style.transform = ""), (d.style.transition = "");
            },
          }
        );
      }
      const Yg = "SpinMouse",
        Dg = { schema: {} };
      function Xg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          axis: i = "both",
          transitionDuration: o,
          transitionEasing: s = "linear",
        } = {}
      ) {
        const u = t[0],
          c = r ? -1 : 1;
        return (
          o && (u.style.transition = `transform ${o}ms ${Pa(s)}`),
          {
            progress({ x: e, y: t }) {
              const n = `rotate(calc(${
                (0, ua.Rb)(
                  [0.5, 0.5],
                  ["vertical" === i ? 0 : e, "horizontal" === i ? 0 : t],
                  90
                ) * c
              }deg + var(--comp-rotate-z)deg)`;
              u.style.transform = n;
            },
            kill() {
              (u.style.transform = ""), (u.style.transition = "");
            },
          }
        );
      }
      const qg = "BlurMouse",
        Hg = { schema: {} };
      function Vg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 80, type: "px" },
          angle: o = 5,
          scale: s = 0.3,
          blur: u = 20,
          perspective: c = 600,
          transitionDuration: d,
          transitionEasing: l = "linear",
        } = {}
      ) {
        const m = t[0],
          f = r ? -1 : 1;
        return (
          d &&
            (m.style.transition = `transform ${d}ms ${Pa(
              l
            )}, filter ${d}ms ${Pa(l)}`),
          {
            progress({ x: e, y: t }) {
              const n = (0, ua._b)(0, 1, -i.value, i.value, e) * f,
                a = (0, ua._b)(0, 1, -i.value, i.value, t) * f,
                r =
                  e < 0.5
                    ? (0, ua._b)(0, 0.5, s, 1, e)
                    : (0, ua._b)(0.5, 1, 1, s, e),
                d =
                  t < 0.5
                    ? (0, ua._b)(0, 0.5, s, 1, t)
                    : (0, ua._b)(0.5, 1, 1, s, t),
                l = Math.min(r, d),
                p = (0, ua._b)(0, 1, -o, o, t) * f,
                h = (0, ua._b)(0, 1, o, -o, e) * f,
                g = ka(i.type),
                y = `perspective(${c}px) translateX(${n}${g}) translateY(${a}${g}) scale(${l}, ${l}) rotateX(${p}deg) rotateY(${h}deg) rotate(var(--comp-rotate-z, 0deg))`,
                b = (0, ua.Io)([0.5, 0.5], [e, t]),
                v = `blur(${Math.round((0, ua._b)(0, 1, 0, u, Mg(b)))}px)`;
              (m.style.transform = y), (m.style.filter = v);
            },
            kill() {
              (m.style.transform = ""),
                (m.style.filter = ""),
                (m.style.transition = "");
            },
          }
        );
      }
      const Ng = "AiryMouse",
        zg = { schema: {} };
      function Lg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 200, type: "px" },
          angle: o = 30,
          axis: s = "both",
          transitionDuration: u,
          transitionEasing: c = "linear",
        } = {}
      ) {
        const d = t[0],
          l = r ? -1 : 1;
        return (
          u && (d.style.transition = `transform ${u}ms ${Pa(c)}`),
          {
            progress({ x: e, y: t }) {
              let n = 0,
                a = 0;
              "vertical" !== s &&
                (n = (0, ua._b)(0, 1, -i.value, i.value, e) * l),
                "horizontal" !== s &&
                  (a = (0, ua._b)(0, 1, -i.value, i.value, t) * l);
              const r = (0, ua._b)(0, 1, -o, o, e) * l,
                u = ka(i.type),
                c = `translateX(${n}${u}) translateY(${a}${u}) rotate(calc(${r}deg + var(--comp-rotate-z, 0deg)))`;
              d.style.transform = c;
            },
            kill() {
              (d.style.transform = ""), (d.style.transition = "");
            },
          }
        );
      }
      const Ug = "Track3DMouse",
        jg = { schema: {} };
      function Wg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 200, type: "px" },
          angle: o = 5,
          axis: s = "both",
          perspective: u = 800,
          transitionDuration: c,
          transitionEasing: d = "linear",
        } = {}
      ) {
        const l = t[0],
          m = r ? -1 : 1;
        return (
          c && (l.style.transition = `transform ${c}ms ${Pa(d)}`),
          {
            progress({ x: e, y: t }) {
              let n = 0,
                a = 0,
                r = 0,
                c = 0;
              ("both" !== s && "horizontal" !== s) ||
                ((n = (0, ua._b)(0, 1, -i.value, i.value, e)),
                (c = (0, ua._b)(0, 1, -o, o, e) * m)),
                ("both" !== s && "vertical" !== s) ||
                  ((a = (0, ua._b)(0, 1, -i.value, i.value, t)),
                  (r = (0, ua._b)(0, 1, o, -o, t) * m));
              const d = ka(i.type);
              l.style.transform = `perspective(${u}px) translateX(${n}${d}) translateY(${a}${d}) rotateX(${r}deg) rotateY(${c}deg) rotate(var(--comp-rotate-z, 0deg))`;
            },
            kill() {
              (l.style.transform = ""), (l.style.transition = "");
            },
          }
        );
      }
      const Qg = "BounceMouse",
        Zg = { schema: {} };
      function Gg(
        e,
        t,
        n,
        a,
        {
          inverted: r = !1,
          distance: i = { value: 80, type: "px" },
          axis: o = "both",
          transitionDuration: s,
          transitionEasing: u = "elastic",
        } = {}
      ) {
        return Tg(0, t, 0, 0, {
          distance: i,
          inverted: r,
          axis: o,
          transitionDuration: s,
          transitionEasing: u,
        });
      }
      const Kg = "CrossFade",
        Jg = {
          defaultDuration: 0.6,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            stagger: { type: "number", default: 0 },
          },
        };
      function ey(
        e,
        t,
        n,
        a,
        r,
        {
          stagger: i = 0,
          sourceEase: o = "Sine.easeInOut",
          destEase: s = "Sine.easeInOut",
          ...u
        } = {}
      ) {
        const c = e.sequence(u);
        return (
          c.add([
            e.animate("BaseFade", t, a, r, {
              from: { opacity: 1 },
              to: { opacity: 0 },
              ease: o,
              stagger: i,
            }),
            e.animate("BaseFade", n, a, r, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: s,
              stagger: i,
            }),
          ]),
          c.get()
        );
      }
      const ty = "NoTransition",
        ny = {
          defaultDuration: 0,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
          },
        };
      function ay(e, t, n, a, r, i) {
        const o = e.sequence(i);
        return (
          o.add([
            e.animate("BaseNone", t, a, r),
            e.animate("BaseNone", n, a, r),
          ]),
          o.get()
        );
      }
      const ry = "OutIn",
        iy = {
          defaultDuration: 0.7,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            stagger: { type: "number", default: 0 },
          },
        };
      function oy(
        e,
        t,
        n,
        a,
        r,
        {
          stagger: i = 0,
          sourceEase: o = "Strong.easeOut",
          destEase: s = "Strong.easeIn",
          ...u
        } = {}
      ) {
        const c = e.sequence(u);
        return (
          c.add([
            e.animate("BaseFade", t, a, r, {
              from: { opacity: 1 },
              to: { opacity: 0 },
              ease: o,
              stagger: i,
            }),
            e.animate("BaseFade", n, a, r, {
              from: { opacity: 0 },
              to: { opacity: 1 },
              ease: s,
              stagger: i,
            }),
          ]),
          c.get()
        );
      }
      const sy = "Shrink",
        uy = {
          defaultDuration: 0.6,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            stagger: { type: "number", default: 0 },
          },
        };
      function cy(
        e,
        t,
        n,
        a,
        r,
        { stagger: i = 0, sourceEase: o = "Sine.easeInOut", ...s } = {}
      ) {
        const u = e.sequence(s);
        return (
          u.add(
            e.animate("BaseFade", n, 0, r, {
              to: { opacity: 1 },
              clearProps: "clip,clipPath,webkitClipPath,scale",
            })
          ),
          Array.isArray(t) && void 0 === t[0].style.clipPath
            ? u.add(
                e.animate("BaseScale", t, a, r, {
                  to: { scale: 0 },
                  ease: o,
                  stagger: i,
                })
              )
            : u.add(
                e.animate("BaseClipPath", t, a, r, {
                  to: {
                    webkitClipPath:
                      "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
                    clipPath: "polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)",
                  },
                  ease: o,
                  stagger: i,
                })
              ),
          u.get()
        );
      }
      const dy = "SlideHorizontal",
        ly = {
          defaultDuration: 0.6,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            reverse: { type: "boolean", default: !1 },
            width: { type: "number", min: 0 },
          },
        };
      function my(
        e,
        t,
        n,
        a,
        r,
        {
          reverse: i = ly.schema.reverse.default,
          width: o,
          ease: s = "Strong.easeInOut",
          ...u
        } = {}
      ) {
        const c = i ? -1 : 1;
        (t = Nn(t)), (o = o ?? t[0].offsetWidth);
        const d = e.sequence(u);
        return (
          d.add([
            e.animate("BaseFade", n, 0, r, {
              to: { opacity: 1 },
              immediateRender: !1,
            }),
            e.animate("BasePosition", t, a, r, {
              from: { x: 0 },
              to: { x: -o * c },
              ease: s,
            }),
            e.animate("BasePosition", n, a, r, {
              from: { x: o * c },
              to: { x: 0 },
              ease: s,
            }),
          ]),
          d.get()
        );
      }
      const fy = "SlideVertical",
        py = {
          defaultDuration: 0.6,
          schema: {
            duration: { type: "number", min: 0, default: 0 },
            delay: { type: "number", min: 0, default: 0 },
            reverse: { type: "boolean", default: !1 },
            height: { type: "number", min: 0 },
          },
        };
      function hy(
        e,
        t,
        n,
        a,
        r,
        { reverse: i = !1, height: o, ease: s = "Strong.easeInOut", ...u } = {}
      ) {
        const c = i ? -1 : 1;
        (t = Nn(t)), (o = o ?? t[0].offsetHeight);
        const d = e.sequence(u);
        return (
          d.add([
            e.animate("BaseFade", n, 0, r, {
              to: { opacity: 1 },
              immediateRender: !1,
            }),
            e.animate("BasePosition", t, a, r, {
              from: { y: 0 },
              to: { y: -o * c },
              ease: s,
            }),
            e.animate("BasePosition", n, a, r, {
              from: { y: o * c },
              to: { y: 0 },
              ease: s,
            }),
          ]),
          d.get()
        );
      }
      function gy(e, t) {
        return [...Object.values(e)].reduce((e, t) => ((e[t.name] = t), e), {
          ...t,
        });
      }
      const yy = gy(v, {}),
        by = gy(Pn, yy),
        vy = gy(Ne, by),
        xy = { defaults: vy, mobile: gy(ot, vy), motion: gy(vn, yy) };
      function _y(e = "") {
        const t = e.toLowerCase();
        return "desktop" !== t ? t : "defaults";
      }
      const wy = [
        {
          action: "screenIn",
          name: "FadeIn",
          params: { delay: 0, duration: 1.2 },
        },
        { name: "FadeOut", params: { delay: 0, duration: 1.2 } },
        {
          action: "screenIn",
          name: "FloatIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          name: "FloatOut",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "screenIn",
          name: "ExpandIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "screenIn",
          name: "SpinIn",
          params: { delay: 0, duration: 1.2, cycles: 2, direction: "cw" },
        },
        {
          name: "SpinOut",
          params: { delay: 0, duration: 1.2, cycles: 2, direction: "cw" },
        },
        {
          action: "screenIn",
          name: "FlyIn",
          params: { delay: 0.4, duration: 1.2, direction: "right" },
        },
        {
          name: "FlyOut",
          params: { delay: 0.4, duration: 1.2, direction: "right" },
        },
        {
          action: "screenIn",
          name: "TurnIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          name: "TurnOut",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "screenIn",
          name: "ArcIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          name: "ArcOut",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          name: "Conceal",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        { name: "CollapseOut", params: { delay: 0, duration: 1.2 } },
        { name: "PopOut", params: { delay: 0, duration: 1.2 } },
        {
          action: "screenIn",
          name: "DropIn",
          params: { delay: 0, duration: 1.2 },
        },
        {
          action: "screenIn",
          name: "FlipIn",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          name: "FlipOut",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          action: "screenIn",
          name: "FoldIn",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          name: "FoldOut",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          action: "screenIn",
          name: "Reveal",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          action: "screenIn",
          name: "SlideIn",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          name: "SlideOut",
          params: { delay: 0, duration: 3, direction: "left" },
        },
        {
          action: "screenIn",
          name: "BounceIn",
          params: {
            delay: 0,
            duration: 1.2,
            direction: "top left",
            bounce: "medium",
          },
        },
        {
          action: "screenIn",
          name: "GlideIn",
          params: { delay: 0, duration: 1.2, angle: 0, distance: 150 },
        },
        {
          name: "BounceOut",
          params: {
            delay: 0,
            duration: 1.2,
            direction: "top left",
            bounce: "medium",
          },
        },
        {
          name: "GlideOut",
          params: { delay: 0, duration: 1.2, angle: 0, distance: 150 },
        },
        {
          action: "modeChange",
          name: "ModesMotion",
          params: { delay: 0, duration: 0.5 },
        },
        {
          action: "modeIn",
          name: "FadeIn",
          params: { delay: 0, duration: 1.2 },
        },
        {
          action: "modeIn",
          name: "FloatIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "modeIn",
          name: "ExpandIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "modeIn",
          name: "SpinIn",
          params: { delay: 0, duration: 1.2, cycles: 2, direction: "cw" },
        },
        {
          action: "modeIn",
          name: "FlyIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "modeIn",
          name: "TurnIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "modeIn",
          name: "ArcIn",
          params: { delay: 0, duration: 1.2, direction: "right" },
        },
        {
          action: "modeIn",
          name: "DropIn",
          params: { delay: 0, duration: 1.2 },
        },
        {
          action: "modeIn",
          name: "FlipIn",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          action: "modeIn",
          name: "FoldIn",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          action: "modeIn",
          name: "Reveal",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
        {
          action: "modeIn",
          name: "SlideIn",
          params: { delay: 0, duration: 1.2, direction: "left" },
        },
      ];
      class Oy {
        constructor(e, t = window, n = "desktop", a = !1) {
          (this.engine = e),
            (this.frame = t),
            this.engine.adjustLagSmoothing(500, 33);
          const r = _y(a ? "motion" : n);
          (this.defs = xy[r]),
            (this.validateAnimation = this.validateAnimation.bind(this)),
            (this.animate = this.animate.bind(this)),
            (this.transition = this.transition.bind(this)),
            (this.updateViewMode = this.updateViewMode.bind(this)),
            (this.sequence = this.sequence.bind(this)),
            (this.getProperties = this.getProperties.bind(this)),
            (this.getApiForAnimation = this.getApiForAnimation.bind(this)),
            (this.addTickerEvent = e.addTickerEvent),
            (this.removeTickerEvent = e.removeTickerEvent),
            (this.kill = e.kill),
            (this.delayedCall = e.delayedCall),
            (this.animateTimeScale = e.animateTimeScale),
            (this.viewerDefaults = wy);
        }
        validateAnimation(e, t) {
          const n = this.getProperties(e);
          return n
            ? ns(n.schema || {}, t, (e) => e.forEach((e) => console.error(e)))
            : (console.log(`No such animation "${e}"`), !1);
        }
        animate(e, t, n, a = 0, r = {}) {
          return this.validateAnimation(e, { duration: n, delay: a, ...r })
            ? this.defs[e].animate(this, Nn(t), n, a, r)
            : this.defs.BaseNone.animate(this, Nn(t), 0, 0, {});
        }
        transition(e, t, n, a, r = 0, i = {}) {
          return this.validateAnimation(e, { duration: a, delay: r, ...i })
            ? this.defs[e].transition(this, Nn(t), Nn(n), a, r, i)
            : this.defs.noTransition.transition(this, t, n, 0, 0, {});
        }
        updateViewMode(e, t = window) {
          const n = _y(e);
          (this.defs = xy[n]), t && (this.frame = t);
        }
        sequence(e) {
          return this.engine.sequence(e);
        }
        getProperties(e) {
          return this.defs[e].properties || {};
        }
        getApiForAnimation(e) {
          return this.defs[e].api || {};
        }
        _resetRegistrations() {
          this.defs = {};
        }
      }
      function By(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function Ty(e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          (e.__proto__ = t);
      }
      /*!
       * GSAP 3.5.1
       * https://greensock.com
       *
       * @license Copyright 2008-2020, GreenSock. All rights reserved.
       * Subject to the terms at https://greensock.com/standard-license or for
       * Club GreenSock members, the agreement issued with that membership.
       * @author: Jack Doyle, jack@greensock.com
       */ var Py,
        ky,
        Sy,
        My,
        Iy,
        Fy,
        Ry,
        $y,
        Cy,
        Ey,
        Ay,
        Yy,
        Dy,
        Xy,
        qy,
        Hy,
        Vy,
        Ny,
        zy,
        Ly,
        Uy,
        jy,
        Wy,
        Qy,
        Zy,
        Gy,
        Ky,
        Jy = {
          autoSleep: 120,
          force3D: "auto",
          nullTargetWarn: 1,
          units: { lineHeight: "" },
        },
        eb = { duration: 0.5, overwrite: !1, delay: 0 },
        tb = 1e8,
        nb = 1e-8,
        ab = 2 * Math.PI,
        rb = ab / 4,
        ib = 0,
        ob = Math.sqrt,
        sb = Math.cos,
        ub = Math.sin,
        cb = function (e) {
          return "string" == typeof e;
        },
        db = function (e) {
          return "function" == typeof e;
        },
        lb = function (e) {
          return "number" == typeof e;
        },
        mb = function (e) {
          return void 0 === e;
        },
        fb = function (e) {
          return "object" == typeof e;
        },
        pb = function (e) {
          return !1 !== e;
        },
        hb = function () {
          return "undefined" != typeof window;
        },
        gb = function (e) {
          return db(e) || cb(e);
        },
        yb =
          ("function" == typeof ArrayBuffer && ArrayBuffer.isView) ||
          function () {},
        bb = Array.isArray,
        vb = /(?:-?\.?\d|\.)+/gi,
        xb = /[-+=.]*\d+[.e\-+]*\d*[e\-\+]*\d*/g,
        _b = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
        wb = /[-+=.]*\d+(?:\.|e-|e)*\d*/gi,
        Ob = /[+-]=-?[\.\d]+/,
        Bb = /[#\-+.]*\b[a-z\d-=+%.]+/gi,
        Tb = {},
        Pb = {},
        kb = function (e) {
          return (Pb = Jb(e, Tb)) && Cx;
        },
        Sb = function (e, t) {
          return console.warn(
            "Invalid property",
            e,
            "set to",
            t,
            "Missing plugin? gsap.registerPlugin()"
          );
        },
        Mb = function (e, t) {
          return !t && console.warn(e);
        },
        Ib = function (e, t) {
          return (e && (Tb[e] = t) && Pb && (Pb[e] = t)) || Tb;
        },
        Fb = function () {
          return 0;
        },
        Rb = {},
        $b = [],
        Cb = {},
        Eb = {},
        Ab = {},
        Yb = 30,
        Db = [],
        Xb = "",
        qb = function (e) {
          var t,
            n,
            a = e[0];
          if ((fb(a) || db(a) || (e = [e]), !(t = (a._gsap || {}).harness))) {
            for (n = Db.length; n-- && !Db[n].targetTest(a); );
            t = Db[n];
          }
          for (n = e.length; n--; )
            (e[n] && (e[n]._gsap || (e[n]._gsap = new ix(e[n], t)))) ||
              e.splice(n, 1);
          return e;
        },
        Hb = function (e) {
          return e._gsap || qb(Tv(e))[0]._gsap;
        },
        Vb = function (e, t, n) {
          return (n = e[t]) && db(n)
            ? e[t]()
            : (mb(n) && e.getAttribute && e.getAttribute(t)) || n;
        },
        Nb = function (e, t) {
          return (e = e.split(",")).forEach(t) || e;
        },
        zb = function (e) {
          return Math.round(1e5 * e) / 1e5 || 0;
        },
        Lb = function (e, t) {
          for (var n = t.length, a = 0; e.indexOf(t[a]) < 0 && ++a < n; );
          return a < n;
        },
        Ub = function (e, t, n) {
          var a,
            r = lb(e[1]),
            i = (r ? 2 : 1) + (t < 2 ? 0 : 1),
            o = e[i];
          if ((r && (o.duration = e[1]), (o.parent = n), t)) {
            for (a = o; n && !("immediateRender" in a); )
              (a = n.vars.defaults || {}), (n = pb(n.vars.inherit) && n.parent);
            (o.immediateRender = pb(a.immediateRender)),
              t < 2 ? (o.runBackwards = 1) : (o.startAt = e[i - 1]);
          }
          return o;
        },
        jb = function () {
          var e,
            t,
            n = $b.length,
            a = $b.slice(0);
          for (Cb = {}, $b.length = 0, e = 0; e < n; e++)
            (t = a[e]) &&
              t._lazy &&
              (t.render(t._lazy[0], t._lazy[1], !0)._lazy = 0);
        },
        Wb = function (e, t, n, a) {
          $b.length && jb(), e.render(t, n, a), $b.length && jb();
        },
        Qb = function (e) {
          var t = parseFloat(e);
          return (t || 0 === t) && (e + "").match(Bb).length < 2
            ? t
            : cb(e)
            ? e.trim()
            : e;
        },
        Zb = function (e) {
          return e;
        },
        Gb = function (e, t) {
          for (var n in t) n in e || (e[n] = t[n]);
          return e;
        },
        Kb = function (e, t) {
          for (var n in t)
            n in e || "duration" === n || "ease" === n || (e[n] = t[n]);
        },
        Jb = function (e, t) {
          for (var n in t) e[n] = t[n];
          return e;
        },
        ev = function e(t, n) {
          for (var a in n)
            t[a] = fb(n[a]) ? e(t[a] || (t[a] = {}), n[a]) : n[a];
          return t;
        },
        tv = function (e, t) {
          var n,
            a = {};
          for (n in e) n in t || (a[n] = e[n]);
          return a;
        },
        nv = function (e) {
          var t = e.parent || Py,
            n = e.keyframes ? Kb : Gb;
          if (pb(e.inherit))
            for (; t; ) n(e, t.vars.defaults), (t = t.parent || t._dp);
          return e;
        },
        av = function (e, t, n, a) {
          void 0 === n && (n = "_first"), void 0 === a && (a = "_last");
          var r = t._prev,
            i = t._next;
          r ? (r._next = i) : e[n] === t && (e[n] = i),
            i ? (i._prev = r) : e[a] === t && (e[a] = r),
            (t._next = t._prev = t.parent = null);
        },
        rv = function (e, t) {
          e.parent && (!t || e.parent.autoRemoveChildren) && e.parent.remove(e),
            (e._act = 0);
        },
        iv = function (e, t) {
          if (e && (!t || t._end > e._dur || t._start < 0))
            for (var n = e; n; ) (n._dirty = 1), (n = n.parent);
          return e;
        },
        ov = function e(t) {
          return !t || (t._ts && e(t.parent));
        },
        sv = function (e) {
          return e._repeat
            ? uv(e._tTime, (e = e.duration() + e._rDelay)) * e
            : 0;
        },
        uv = function (e, t) {
          return (e /= t) && ~~e === e ? ~~e - 1 : ~~e;
        },
        cv = function (e, t) {
          return (
            (e - t._start) * t._ts +
            (t._ts >= 0 ? 0 : t._dirty ? t.totalDuration() : t._tDur)
          );
        },
        dv = function (e) {
          return (e._end = zb(
            e._start + (e._tDur / Math.abs(e._ts || e._rts || nb) || 0)
          ));
        },
        lv = function (e, t) {
          var n = e._dp;
          return (
            n &&
              n.smoothChildTiming &&
              e._ts &&
              ((e._start = zb(
                e._dp._time -
                  (e._ts > 0
                    ? t / e._ts
                    : ((e._dirty ? e.totalDuration() : e._tDur) - t) / -e._ts)
              )),
              dv(e),
              n._dirty || iv(n, e)),
            e
          );
        },
        mv = function (e, t) {
          var n;
          if (
            ((t._time || (t._initted && !t._dur)) &&
              ((n = cv(e.rawTime(), t)),
              (!t._dur || _v(0, t.totalDuration(), n) - t._tTime > nb) &&
                t.render(n, !0)),
            iv(e, t)._dp && e._initted && e._time >= e._dur && e._ts)
          ) {
            if (e._dur < e.duration())
              for (n = e; n._dp; )
                n.rawTime() >= 0 && n.totalTime(n._tTime), (n = n._dp);
            e._zTime = -1e-8;
          }
        },
        fv = function (e, t, n, a) {
          return (
            t.parent && rv(t),
            (t._start = zb(n + t._delay)),
            (t._end = zb(
              t._start + (t.totalDuration() / Math.abs(t.timeScale()) || 0)
            )),
            (function (e, t, n, a, r) {
              void 0 === n && (n = "_first"), void 0 === a && (a = "_last");
              var i,
                o = e[a];
              if (r) for (i = t[r]; o && o[r] > i; ) o = o._prev;
              o
                ? ((t._next = o._next), (o._next = t))
                : ((t._next = e[n]), (e[n] = t)),
                t._next ? (t._next._prev = t) : (e[a] = t),
                (t._prev = o),
                (t.parent = t._dp = e);
            })(e, t, "_first", "_last", e._sort ? "_start" : 0),
            (e._recent = t),
            a || mv(e, t),
            e
          );
        },
        pv = function (e, t) {
          return (
            (Tb.ScrollTrigger || Sb("scrollTrigger", t)) &&
            Tb.ScrollTrigger.create(t, e)
          );
        },
        hv = function (e, t, n, a) {
          return (
            mx(e, t),
            e._initted
              ? !n &&
                e._pt &&
                ((e._dur && !1 !== e.vars.lazy) || (!e._dur && e.vars.lazy)) &&
                Fy !== Uv.frame
                ? ($b.push(e), (e._lazy = [t, a]), 1)
                : void 0
              : 1
          );
        },
        gv = function (e, t, n, a) {
          var r = e._repeat,
            i = zb(t) || 0,
            o = e._tTime / e._tDur;
          return (
            o && !a && (e._time *= i / e._dur),
            (e._dur = i),
            (e._tDur = r
              ? r < 0
                ? 1e10
                : zb(i * (r + 1) + e._rDelay * r)
              : i),
            o && !a ? lv(e, (e._tTime = e._tDur * o)) : e.parent && dv(e),
            n || iv(e.parent, e),
            e
          );
        },
        yv = function (e) {
          return e instanceof sx ? iv(e) : gv(e, e._dur);
        },
        bv = { _start: 0, endTime: Fb },
        vv = function e(t, n) {
          var a,
            r,
            i = t.labels,
            o = t._recent || bv,
            s = t.duration() >= tb ? o.endTime(!1) : t._dur;
          return cb(n) && (isNaN(n) || n in i)
            ? "<" === (a = n.charAt(0)) || ">" === a
              ? ("<" === a ? o._start : o.endTime(o._repeat >= 0)) +
                (parseFloat(n.substr(1)) || 0)
              : (a = n.indexOf("=")) < 0
              ? (n in i || (i[n] = s), i[n])
              : ((r = +(n.charAt(a - 1) + n.substr(a + 1))),
                a > 1 ? e(t, n.substr(0, a - 1)) + r : s + r)
            : null == n
            ? s
            : +n;
        },
        xv = function (e, t) {
          return e || 0 === e ? t(e) : t;
        },
        _v = function (e, t, n) {
          return n < e ? e : n > t ? t : n;
        },
        wv = function (e) {
          return (e = (e + "").substr((parseFloat(e) + "").length)) && isNaN(e)
            ? e
            : "";
        },
        Ov = [].slice,
        Bv = function (e, t) {
          return (
            e &&
            fb(e) &&
            "length" in e &&
            ((!t && !e.length) || (e.length - 1 in e && fb(e[0]))) &&
            !e.nodeType &&
            e !== ky
          );
        },
        Tv = function (e, t) {
          return !cb(e) || t || (!Sy && jv())
            ? bb(e)
              ? (function (e, t, n) {
                  return (
                    void 0 === n && (n = []),
                    e.forEach(function (e) {
                      var a;
                      return (cb(e) && !t) || Bv(e, 1)
                        ? (a = n).push.apply(a, Tv(e))
                        : n.push(e);
                    }) || n
                  );
                })(e, t)
              : Bv(e)
              ? Ov.call(e, 0)
              : e
              ? [e]
              : []
            : Ov.call(My.querySelectorAll(e), 0);
        },
        Pv = function (e) {
          return e.sort(function () {
            return 0.5 - Math.random();
          });
        },
        kv = function (e) {
          if (db(e)) return e;
          var t = fb(e) ? e : { each: e },
            n = ex(t.ease),
            a = t.from || 0,
            r = parseFloat(t.base) || 0,
            i = {},
            o = a > 0 && a < 1,
            s = isNaN(a) || o,
            u = t.axis,
            c = a,
            d = a;
          return (
            cb(a)
              ? (c = d = { center: 0.5, edges: 0.5, end: 1 }[a] || 0)
              : !o && s && ((c = a[0]), (d = a[1])),
            function (e, o, l) {
              var m,
                f,
                p,
                h,
                g,
                y,
                b,
                v,
                x,
                _ = (l || t).length,
                w = i[_];
              if (!w) {
                if (!(x = "auto" === t.grid ? 0 : (t.grid || [1, tb])[1])) {
                  for (
                    b = -tb;
                    b < (b = l[x++].getBoundingClientRect().left) && x < _;

                  );
                  x--;
                }
                for (
                  w = i[_] = [],
                    m = s ? Math.min(x, _) * c - 0.5 : a % x,
                    f = s ? (_ * d) / x - 0.5 : (a / x) | 0,
                    b = 0,
                    v = tb,
                    y = 0;
                  y < _;
                  y++
                )
                  (p = (y % x) - m),
                    (h = f - ((y / x) | 0)),
                    (w[y] = g =
                      u ? Math.abs("y" === u ? h : p) : ob(p * p + h * h)),
                    g > b && (b = g),
                    g < v && (v = g);
                "random" === a && Pv(w),
                  (w.max = b - v),
                  (w.min = v),
                  (w.v = _ =
                    (parseFloat(t.amount) ||
                      parseFloat(t.each) *
                        (x > _
                          ? _ - 1
                          : u
                          ? "y" === u
                            ? _ / x
                            : x
                          : Math.max(x, _ / x)) ||
                      0) * ("edges" === a ? -1 : 1)),
                  (w.b = _ < 0 ? r - _ : r),
                  (w.u = wv(t.amount || t.each) || 0),
                  (n = n && _ < 0 ? Kv(n) : n);
              }
              return (
                (_ = (w[e] - w.min) / w.max || 0),
                zb(w.b + (n ? n(_) : _) * w.v) + w.u
              );
            }
          );
        },
        Sv = function (e) {
          var t = e < 1 ? Math.pow(10, (e + "").length - 2) : 1;
          return function (n) {
            return (
              Math.floor(Math.round(parseFloat(n) / e) * e * t) / t +
              (lb(n) ? 0 : wv(n))
            );
          };
        },
        Mv = function (e, t) {
          var n,
            a,
            r = bb(e);
          return (
            !r &&
              fb(e) &&
              ((n = r = e.radius || tb),
              e.values
                ? ((e = Tv(e.values)), (a = !lb(e[0])) && (n *= n))
                : (e = Sv(e.increment))),
            xv(
              t,
              r
                ? db(e)
                  ? function (t) {
                      return (a = e(t)), Math.abs(a - t) <= n ? a : t;
                    }
                  : function (t) {
                      for (
                        var r,
                          i,
                          o = parseFloat(a ? t.x : t),
                          s = parseFloat(a ? t.y : 0),
                          u = tb,
                          c = 0,
                          d = e.length;
                        d--;

                      )
                        (r = a
                          ? (r = e[d].x - o) * r + (i = e[d].y - s) * i
                          : Math.abs(e[d] - o)) < u && ((u = r), (c = d));
                      return (
                        (c = !n || u <= n ? e[c] : t),
                        a || c === t || lb(t) ? c : c + wv(t)
                      );
                    }
                : Sv(e)
            )
          );
        },
        Iv = function (e, t, n, a) {
          return xv(bb(e) ? !t : !0 === n ? !!(n = 0) : !a, function () {
            return bb(e)
              ? e[~~(Math.random() * e.length)]
              : (n = n || 1e-5) &&
                  (a = n < 1 ? Math.pow(10, (n + "").length - 2) : 1) &&
                  Math.floor(
                    Math.round((e + Math.random() * (t - e)) / n) * n * a
                  ) / a;
          });
        },
        Fv = function (e, t, n) {
          return xv(n, function (n) {
            return e[~~t(n)];
          });
        },
        Rv = function (e) {
          for (var t, n, a, r, i = 0, o = ""; ~(t = e.indexOf("random(", i)); )
            (a = e.indexOf(")", t)),
              (r = "[" === e.charAt(t + 7)),
              (n = e.substr(t + 7, a - t - 7).match(r ? Bb : vb)),
              (o +=
                e.substr(i, t - i) +
                Iv(r ? n : +n[0], r ? 0 : +n[1], +n[2] || 1e-5)),
              (i = a + 1);
          return o + e.substr(i, e.length - i);
        },
        $v = function (e, t, n, a, r) {
          var i = t - e,
            o = a - n;
          return xv(r, function (t) {
            return n + (((t - e) / i) * o || 0);
          });
        },
        Cv = function (e, t, n) {
          var a,
            r,
            i,
            o = e.labels,
            s = tb;
          for (a in o)
            (r = o[a] - t) < 0 == !!n &&
              r &&
              s > (r = Math.abs(r)) &&
              ((i = a), (s = r));
          return i;
        },
        Ev = function (e, t, n) {
          var a,
            r,
            i = e.vars,
            o = i[t];
          if (o)
            return (
              (a = i[t + "Params"]),
              (r = i.callbackScope || e),
              n && $b.length && jb(),
              a ? o.apply(r, a) : o.call(r)
            );
        },
        Av = function (e) {
          return rv(e), e.progress() < 1 && Ev(e, "onInterrupt"), e;
        },
        Yv = 255,
        Dv = {
          aqua: [0, Yv, Yv],
          lime: [0, Yv, 0],
          silver: [192, 192, 192],
          black: [0, 0, 0],
          maroon: [128, 0, 0],
          teal: [0, 128, 128],
          blue: [0, 0, Yv],
          navy: [0, 0, 128],
          white: [Yv, Yv, Yv],
          olive: [128, 128, 0],
          yellow: [Yv, Yv, 0],
          orange: [Yv, 165, 0],
          gray: [128, 128, 128],
          purple: [128, 0, 128],
          green: [0, 128, 0],
          red: [Yv, 0, 0],
          pink: [Yv, 192, 203],
          cyan: [0, Yv, Yv],
          transparent: [Yv, Yv, Yv, 0],
        },
        Xv = function (e, t, n) {
          return (
            ((6 * (e = e < 0 ? e + 1 : e > 1 ? e - 1 : e) < 1
              ? t + (n - t) * e * 6
              : e < 0.5
              ? n
              : 3 * e < 2
              ? t + (n - t) * (2 / 3 - e) * 6
              : t) *
              Yv +
              0.5) |
            0
          );
        },
        qv = function (e, t, n) {
          var a,
            r,
            i,
            o,
            s,
            u,
            c,
            d,
            l,
            m,
            f = e ? (lb(e) ? [e >> 16, (e >> 8) & Yv, e & Yv] : 0) : Dv.black;
          if (!f) {
            if (
              ("," === e.substr(-1) && (e = e.substr(0, e.length - 1)), Dv[e])
            )
              f = Dv[e];
            else if ("#" === e.charAt(0))
              4 === e.length &&
                ((a = e.charAt(1)),
                (r = e.charAt(2)),
                (i = e.charAt(3)),
                (e = "#" + a + a + r + r + i + i)),
                (f = [
                  (e = parseInt(e.substr(1), 16)) >> 16,
                  (e >> 8) & Yv,
                  e & Yv,
                ]);
            else if ("hsl" === e.substr(0, 3))
              if (((f = m = e.match(vb)), t)) {
                if (~e.indexOf("="))
                  return (f = e.match(xb)), n && f.length < 4 && (f[3] = 1), f;
              } else
                (o = (+f[0] % 360) / 360),
                  (s = +f[1] / 100),
                  (a =
                    2 * (u = +f[2] / 100) -
                    (r = u <= 0.5 ? u * (s + 1) : u + s - u * s)),
                  f.length > 3 && (f[3] *= 1),
                  (f[0] = Xv(o + 1 / 3, a, r)),
                  (f[1] = Xv(o, a, r)),
                  (f[2] = Xv(o - 1 / 3, a, r));
            else f = e.match(vb) || Dv.transparent;
            f = f.map(Number);
          }
          return (
            t &&
              !m &&
              ((a = f[0] / Yv),
              (r = f[1] / Yv),
              (i = f[2] / Yv),
              (u = ((c = Math.max(a, r, i)) + (d = Math.min(a, r, i))) / 2),
              c === d
                ? (o = s = 0)
                : ((l = c - d),
                  (s = u > 0.5 ? l / (2 - c - d) : l / (c + d)),
                  (o =
                    c === a
                      ? (r - i) / l + (r < i ? 6 : 0)
                      : c === r
                      ? (i - a) / l + 2
                      : (a - r) / l + 4),
                  (o *= 60)),
              (f[0] = ~~(o + 0.5)),
              (f[1] = ~~(100 * s + 0.5)),
              (f[2] = ~~(100 * u + 0.5))),
            n && f.length < 4 && (f[3] = 1),
            f
          );
        },
        Hv = function (e) {
          var t = [],
            n = [],
            a = -1;
          return (
            e.split(Nv).forEach(function (e) {
              var r = e.match(_b) || [];
              t.push.apply(t, r), n.push((a += r.length + 1));
            }),
            (t.c = n),
            t
          );
        },
        Vv = function (e, t, n) {
          var a,
            r,
            i,
            o,
            s = "",
            u = (e + s).match(Nv),
            c = t ? "hsla(" : "rgba(",
            d = 0;
          if (!u) return e;
          if (
            ((u = u.map(function (e) {
              return (
                (e = qv(e, t, 1)) &&
                c +
                  (t
                    ? e[0] + "," + e[1] + "%," + e[2] + "%," + e[3]
                    : e.join(",")) +
                  ")"
              );
            })),
            n && ((i = Hv(e)), (a = n.c).join(s) !== i.c.join(s)))
          )
            for (o = (r = e.replace(Nv, "1").split(_b)).length - 1; d < o; d++)
              s +=
                r[d] +
                (~a.indexOf(d)
                  ? u.shift() || c + "0,0,0,0)"
                  : (i.length ? i : u.length ? u : n).shift());
          if (!r)
            for (o = (r = e.split(Nv)).length - 1; d < o; d++) s += r[d] + u[d];
          return s + r[o];
        },
        Nv = (function () {
          var e,
            t =
              "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
          for (e in Dv) t += "|" + e + "\\b";
          return new RegExp(t + ")", "gi");
        })(),
        zv = /hsl[a]?\(/,
        Lv = function (e) {
          var t,
            n = e.join(" ");
          if (((Nv.lastIndex = 0), Nv.test(n)))
            return (
              (t = zv.test(n)),
              (e[1] = Vv(e[1], t)),
              (e[0] = Vv(e[0], t, Hv(e[1]))),
              !0
            );
        },
        Uv =
          ((qy = Date.now),
          (Hy = 500),
          (Vy = 33),
          (Ny = qy()),
          (zy = Ny),
          (Uy = Ly = 1e3 / 240),
          (Wy = function e(t) {
            var n,
              a,
              r,
              i,
              o = qy() - zy,
              s = !0 === t;
            if (
              (o > Hy && (Ny += o - Vy),
              ((n = (r = (zy += o) - Ny) - Uy) > 0 || s) &&
                ((i = ++Yy.frame),
                (Dy = r - 1e3 * Yy.time),
                (Yy.time = r /= 1e3),
                (Uy += n + (n >= Ly ? 4 : Ly - n)),
                (a = 1)),
              s || (Cy = Ey(e)),
              a)
            )
              for (Xy = 0; Xy < jy.length; Xy++) jy[Xy](r, Dy, i, t);
          }),
          (Yy = {
            time: 0,
            frame: 0,
            tick: function () {
              Wy(!0);
            },
            deltaRatio: function (e) {
              return Dy / (1e3 / (e || 60));
            },
            wake: function () {
              Iy &&
                (!Sy &&
                  hb() &&
                  ((ky = Sy = window),
                  (My = ky.document || {}),
                  (Tb.gsap = Cx),
                  (ky.gsapVersions || (ky.gsapVersions = [])).push(Cx.version),
                  kb(Pb || ky.GreenSockGlobals || (!ky.gsap && ky) || {}),
                  (Ay = ky.requestAnimationFrame)),
                Cy && Yy.sleep(),
                (Ey =
                  Ay ||
                  function (e) {
                    return setTimeout(e, (Uy - 1e3 * Yy.time + 1) | 0);
                  }),
                ($y = 1),
                Wy(2));
            },
            sleep: function () {
              (Ay ? ky.cancelAnimationFrame : clearTimeout)(Cy),
                ($y = 0),
                (Ey = Fb);
            },
            lagSmoothing: function (e, t) {
              (Hy = e || 1e8), (Vy = Math.min(t, Hy, 0));
            },
            fps: function (e) {
              (Ly = 1e3 / (e || 240)), (Uy = 1e3 * Yy.time + Ly);
            },
            add: function (e) {
              jy.indexOf(e) < 0 && jy.push(e), jv();
            },
            remove: function (e) {
              var t;
              ~(t = jy.indexOf(e)) && jy.splice(t, 1) && Xy >= t && Xy--;
            },
            _listeners: (jy = []),
          })),
        jv = function () {
          return !$y && Uv.wake();
        },
        Wv = {},
        Qv = /^[\d.\-M][\d.\-,\s]/,
        Zv = /["']/g,
        Gv = function (e) {
          for (
            var t,
              n,
              a,
              r = {},
              i = e.substr(1, e.length - 3).split(":"),
              o = i[0],
              s = 1,
              u = i.length;
            s < u;
            s++
          )
            (n = i[s]),
              (t = s !== u - 1 ? n.lastIndexOf(",") : n.length),
              (a = n.substr(0, t)),
              (r[o] = isNaN(a) ? a.replace(Zv, "").trim() : +a),
              (o = n.substr(t + 1).trim());
          return r;
        },
        Kv = function (e) {
          return function (t) {
            return 1 - e(1 - t);
          };
        },
        Jv = function e(t, n) {
          for (var a, r = t._first; r; )
            r instanceof sx
              ? e(r, n)
              : !r.vars.yoyoEase ||
                (r._yoyo && r._repeat) ||
                r._yoyo === n ||
                (r.timeline
                  ? e(r.timeline, n)
                  : ((a = r._ease),
                    (r._ease = r._yEase),
                    (r._yEase = a),
                    (r._yoyo = n))),
              (r = r._next);
        },
        ex = function (e, t) {
          return (
            (e &&
              (db(e)
                ? e
                : Wv[e] ||
                  (function (e) {
                    var t,
                      n,
                      a,
                      r,
                      i = (e + "").split("("),
                      o = Wv[i[0]];
                    return o && i.length > 1 && o.config
                      ? o.config.apply(
                          null,
                          ~e.indexOf("{")
                            ? [Gv(i[1])]
                            : ((t = e),
                              (n = t.indexOf("(") + 1),
                              (a = t.indexOf(")")),
                              (r = t.indexOf("(", n)),
                              t.substring(
                                n,
                                ~r && r < a ? t.indexOf(")", a + 1) : a
                              ))
                                .split(",")
                                .map(Qb)
                        )
                      : Wv._CE && Qv.test(e)
                      ? Wv._CE("", e)
                      : o;
                  })(e))) ||
            t
          );
        },
        tx = function (e, t, n, a) {
          void 0 === n &&
            (n = function (e) {
              return 1 - t(1 - e);
            }),
            void 0 === a &&
              (a = function (e) {
                return e < 0.5 ? t(2 * e) / 2 : 1 - t(2 * (1 - e)) / 2;
              });
          var r,
            i = { easeIn: t, easeOut: n, easeInOut: a };
          return (
            Nb(e, function (e) {
              for (var t in ((Wv[e] = Tb[e] = i),
              (Wv[(r = e.toLowerCase())] = n),
              i))
                Wv[
                  r +
                    ("easeIn" === t
                      ? ".in"
                      : "easeOut" === t
                      ? ".out"
                      : ".inOut")
                ] = Wv[e + "." + t] = i[t];
            }),
            i
          );
        },
        nx = function (e) {
          return function (t) {
            return t < 0.5
              ? (1 - e(1 - 2 * t)) / 2
              : 0.5 + e(2 * (t - 0.5)) / 2;
          };
        },
        ax = function e(t, n, a) {
          var r = n >= 1 ? n : 1,
            i = (a || (t ? 0.3 : 0.45)) / (n < 1 ? n : 1),
            o = (i / ab) * (Math.asin(1 / r) || 0),
            s = function (e) {
              return 1 === e
                ? 1
                : r * Math.pow(2, -10 * e) * ub((e - o) * i) + 1;
            },
            u =
              "out" === t
                ? s
                : "in" === t
                ? function (e) {
                    return 1 - s(1 - e);
                  }
                : nx(s);
          return (
            (i = ab / i),
            (u.config = function (n, a) {
              return e(t, n, a);
            }),
            u
          );
        },
        rx = function e(t, n) {
          void 0 === n && (n = 1.70158);
          var a = function (e) {
              return e ? --e * e * ((n + 1) * e + n) + 1 : 0;
            },
            r =
              "out" === t
                ? a
                : "in" === t
                ? function (e) {
                    return 1 - a(1 - e);
                  }
                : nx(a);
          return (
            (r.config = function (n) {
              return e(t, n);
            }),
            r
          );
        };
      Nb("Linear,Quad,Cubic,Quart,Quint,Strong", function (e, t) {
        var n = t < 5 ? t + 1 : t;
        tx(
          e + ",Power" + (n - 1),
          t
            ? function (e) {
                return Math.pow(e, n);
              }
            : function (e) {
                return e;
              },
          function (e) {
            return 1 - Math.pow(1 - e, n);
          },
          function (e) {
            return e < 0.5
              ? Math.pow(2 * e, n) / 2
              : 1 - Math.pow(2 * (1 - e), n) / 2;
          }
        );
      }),
        (Wv.Linear.easeNone = Wv.none = Wv.Linear.easeIn),
        tx("Elastic", ax("in"), ax("out"), ax()),
        (Qy = 7.5625),
        (Gy = 1 / (Zy = 2.75)),
        tx(
          "Bounce",
          function (e) {
            return 1 - Ky(1 - e);
          },
          (Ky = function (e) {
            return e < Gy
              ? Qy * e * e
              : e < 0.7272727272727273
              ? Qy * Math.pow(e - 1.5 / Zy, 2) + 0.75
              : e < 0.9090909090909092
              ? Qy * (e -= 2.25 / Zy) * e + 0.9375
              : Qy * Math.pow(e - 2.625 / Zy, 2) + 0.984375;
          })
        ),
        tx("Expo", function (e) {
          return e ? Math.pow(2, 10 * (e - 1)) : 0;
        }),
        tx("Circ", function (e) {
          return -(ob(1 - e * e) - 1);
        }),
        tx("Sine", function (e) {
          return 1 === e ? 1 : 1 - sb(e * rb);
        }),
        tx("Back", rx("in"), rx("out"), rx()),
        (Wv.SteppedEase =
          Wv.steps =
          Tb.SteppedEase =
            {
              config: function (e, t) {
                void 0 === e && (e = 1);
                var n = 1 / e,
                  a = e + (t ? 0 : 1),
                  r = t ? 1 : 0;
                return function (e) {
                  return (((a * _v(0, 0.99999999, e)) | 0) + r) * n;
                };
              },
            }),
        (eb.ease = Wv["quad.out"]),
        Nb(
          "onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",
          function (e) {
            return (Xb += e + "," + e + "Params,");
          }
        );
      var ix = function (e, t) {
          (this.id = ib++),
            (e._gsap = this),
            (this.target = e),
            (this.harness = t),
            (this.get = t ? t.get : Vb),
            (this.set = t ? t.getSetter : _x);
        },
        ox = (function () {
          function e(e, t) {
            var n = e.parent || Py;
            (this.vars = e),
              (this._delay = +e.delay || 0),
              (this._repeat = e.repeat || 0) &&
                ((this._rDelay = e.repeatDelay || 0),
                (this._yoyo = !!e.yoyo || !!e.yoyoEase)),
              (this._ts = 1),
              gv(this, +e.duration, 1, 1),
              (this.data = e.data),
              $y || Uv.wake(),
              n && fv(n, this, t || 0 === t ? t : n._time, 1),
              e.reversed && this.reverse(),
              e.paused && this.paused(!0);
          }
          var t = e.prototype;
          return (
            (t.delay = function (e) {
              return e || 0 === e
                ? (this.parent &&
                    this.parent.smoothChildTiming &&
                    this.startTime(this._start + e - this._delay),
                  (this._delay = e),
                  this)
                : this._delay;
            }),
            (t.duration = function (e) {
              return arguments.length
                ? this.totalDuration(
                    this._repeat > 0 ? e + (e + this._rDelay) * this._repeat : e
                  )
                : this.totalDuration() && this._dur;
            }),
            (t.totalDuration = function (e) {
              return arguments.length
                ? ((this._dirty = 0),
                  gv(
                    this,
                    this._repeat < 0
                      ? e
                      : (e - this._repeat * this._rDelay) / (this._repeat + 1)
                  ))
                : this._tDur;
            }),
            (t.totalTime = function (e, t) {
              if ((jv(), !arguments.length)) return this._tTime;
              var n = this._dp;
              if (n && n.smoothChildTiming && this._ts) {
                for (lv(this, e); n.parent; )
                  n.parent._time !==
                    n._start +
                      (n._ts >= 0
                        ? n._tTime / n._ts
                        : (n.totalDuration() - n._tTime) / -n._ts) &&
                    n.totalTime(n._tTime, !0),
                    (n = n.parent);
                !this.parent &&
                  this._dp.autoRemoveChildren &&
                  ((this._ts > 0 && e < this._tDur) ||
                    (this._ts < 0 && e > 0) ||
                    (!this._tDur && !e)) &&
                  fv(this._dp, this, this._start - this._delay);
              }
              return (
                (this._tTime !== e ||
                  (!this._dur && !t) ||
                  (this._initted && Math.abs(this._zTime) === nb) ||
                  (!e && !this._initted && (this.add || this._ptLookup))) &&
                  (this._ts || (this._pTime = e), Wb(this, e, t)),
                this
              );
            }),
            (t.time = function (e, t) {
              return arguments.length
                ? this.totalTime(
                    Math.min(this.totalDuration(), e + sv(this)) % this._dur ||
                      (e ? this._dur : 0),
                    t
                  )
                : this._time;
            }),
            (t.totalProgress = function (e, t) {
              return arguments.length
                ? this.totalTime(this.totalDuration() * e, t)
                : this.totalDuration()
                ? Math.min(1, this._tTime / this._tDur)
                : this.ratio;
            }),
            (t.progress = function (e, t) {
              return arguments.length
                ? this.totalTime(
                    this.duration() *
                      (!this._yoyo || 1 & this.iteration() ? e : 1 - e) +
                      sv(this),
                    t
                  )
                : this.duration()
                ? Math.min(1, this._time / this._dur)
                : this.ratio;
            }),
            (t.iteration = function (e, t) {
              var n = this.duration() + this._rDelay;
              return arguments.length
                ? this.totalTime(this._time + (e - 1) * n, t)
                : this._repeat
                ? uv(this._tTime, n) + 1
                : 1;
            }),
            (t.timeScale = function (e) {
              if (!arguments.length) return -1e-8 === this._rts ? 0 : this._rts;
              if (this._rts === e) return this;
              var t =
                this.parent && this._ts
                  ? cv(this.parent._time, this)
                  : this._tTime;
              return (
                (this._rts = +e || 0),
                (this._ts = this._ps || -1e-8 === e ? 0 : this._rts),
                (function (e) {
                  for (var t = e.parent; t && t.parent; )
                    (t._dirty = 1), t.totalDuration(), (t = t.parent);
                  return e;
                })(this.totalTime(_v(-this._delay, this._tDur, t), !0))
              );
            }),
            (t.paused = function (e) {
              return arguments.length
                ? (this._ps !== e &&
                    ((this._ps = e),
                    e
                      ? ((this._pTime =
                          this._tTime ||
                          Math.max(-this._delay, this.rawTime())),
                        (this._ts = this._act = 0))
                      : (jv(),
                        (this._ts = this._rts),
                        this.totalTime(
                          this.parent && !this.parent.smoothChildTiming
                            ? this.rawTime()
                            : this._tTime || this._pTime,
                          1 === this.progress() &&
                            (this._tTime -= nb) &&
                            Math.abs(this._zTime) !== nb
                        ))),
                  this)
                : this._ps;
            }),
            (t.startTime = function (e) {
              if (arguments.length) {
                this._start = e;
                var t = this.parent || this._dp;
                return (
                  t &&
                    (t._sort || !this.parent) &&
                    fv(t, this, e - this._delay),
                  this
                );
              }
              return this._start;
            }),
            (t.endTime = function (e) {
              return (
                this._start +
                (pb(e) ? this.totalDuration() : this.duration()) /
                  Math.abs(this._ts)
              );
            }),
            (t.rawTime = function (e) {
              var t = this.parent || this._dp;
              return t
                ? e &&
                  (!this._ts ||
                    (this._repeat && this._time && this.totalProgress() < 1))
                  ? this._tTime % (this._dur + this._rDelay)
                  : this._ts
                  ? cv(t.rawTime(e), this)
                  : this._tTime
                : this._tTime;
            }),
            (t.globalTime = function (e) {
              for (var t = this, n = arguments.length ? e : t.rawTime(); t; )
                (n = t._start + n / (t._ts || 1)), (t = t._dp);
              return n;
            }),
            (t.repeat = function (e) {
              return arguments.length
                ? ((this._repeat = e), yv(this))
                : this._repeat;
            }),
            (t.repeatDelay = function (e) {
              return arguments.length
                ? ((this._rDelay = e), yv(this))
                : this._rDelay;
            }),
            (t.yoyo = function (e) {
              return arguments.length ? ((this._yoyo = e), this) : this._yoyo;
            }),
            (t.seek = function (e, t) {
              return this.totalTime(vv(this, e), pb(t));
            }),
            (t.restart = function (e, t) {
              return this.play().totalTime(e ? -this._delay : 0, pb(t));
            }),
            (t.play = function (e, t) {
              return null != e && this.seek(e, t), this.reversed(!1).paused(!1);
            }),
            (t.reverse = function (e, t) {
              return (
                null != e && this.seek(e || this.totalDuration(), t),
                this.reversed(!0).paused(!1)
              );
            }),
            (t.pause = function (e, t) {
              return null != e && this.seek(e, t), this.paused(!0);
            }),
            (t.resume = function () {
              return this.paused(!1);
            }),
            (t.reversed = function (e) {
              return arguments.length
                ? (!!e !== this.reversed() &&
                    this.timeScale(-this._rts || (e ? -1e-8 : 0)),
                  this)
                : this._rts < 0;
            }),
            (t.invalidate = function () {
              return (this._initted = 0), (this._zTime = -1e-8), this;
            }),
            (t.isActive = function () {
              var e,
                t = this.parent || this._dp,
                n = this._start;
              return !(
                t &&
                !(
                  this._ts &&
                  this._initted &&
                  t.isActive() &&
                  (e = t.rawTime(!0)) >= n &&
                  e < this.endTime(!0) - nb
                )
              );
            }),
            (t.eventCallback = function (e, t, n) {
              var a = this.vars;
              return arguments.length > 1
                ? (t
                    ? ((a[e] = t),
                      n && (a[e + "Params"] = n),
                      "onUpdate" === e && (this._onUpdate = t))
                    : delete a[e],
                  this)
                : a[e];
            }),
            (t.then = function (e) {
              var t = this;
              return new Promise(function (n) {
                var a = db(e) ? e : Zb,
                  r = function () {
                    var e = t.then;
                    (t.then = null),
                      db(a) &&
                        (a = a(t)) &&
                        (a.then || a === t) &&
                        (t.then = e),
                      n(a),
                      (t.then = e);
                  };
                (t._initted && 1 === t.totalProgress() && t._ts >= 0) ||
                (!t._tTime && t._ts < 0)
                  ? r()
                  : (t._prom = r);
              });
            }),
            (t.kill = function () {
              Av(this);
            }),
            e
          );
        })();
      Gb(ox.prototype, {
        _time: 0,
        _start: 0,
        _end: 0,
        _tTime: 0,
        _tDur: 0,
        _dirty: 0,
        _repeat: 0,
        _yoyo: !1,
        parent: null,
        _initted: !1,
        _rDelay: 0,
        _ts: 1,
        _dp: 0,
        ratio: 0,
        _zTime: -1e-8,
        _prom: 0,
        _ps: !1,
        _rts: 1,
      });
      var sx = (function (e) {
        function t(t, n) {
          var a;
          return (
            void 0 === t && (t = {}),
            ((a = e.call(this, t, n) || this).labels = {}),
            (a.smoothChildTiming = !!t.smoothChildTiming),
            (a.autoRemoveChildren = !!t.autoRemoveChildren),
            (a._sort = pb(t.sortChildren)),
            a.parent && mv(a.parent, By(a)),
            t.scrollTrigger && pv(By(a), t.scrollTrigger),
            a
          );
        }
        Ty(t, e);
        var n = t.prototype;
        return (
          (n.to = function (e, t, n) {
            return (
              new gx(
                e,
                Ub(arguments, 0, this),
                vv(this, lb(t) ? arguments[3] : n)
              ),
              this
            );
          }),
          (n.from = function (e, t, n) {
            return (
              new gx(
                e,
                Ub(arguments, 1, this),
                vv(this, lb(t) ? arguments[3] : n)
              ),
              this
            );
          }),
          (n.fromTo = function (e, t, n, a) {
            return (
              new gx(
                e,
                Ub(arguments, 2, this),
                vv(this, lb(t) ? arguments[4] : a)
              ),
              this
            );
          }),
          (n.set = function (e, t, n) {
            return (
              (t.duration = 0),
              (t.parent = this),
              nv(t).repeatDelay || (t.repeat = 0),
              (t.immediateRender = !!t.immediateRender),
              new gx(e, t, vv(this, n), 1),
              this
            );
          }),
          (n.call = function (e, t, n) {
            return fv(this, gx.delayedCall(0, e, t), vv(this, n));
          }),
          (n.staggerTo = function (e, t, n, a, r, i, o) {
            return (
              (n.duration = t),
              (n.stagger = n.stagger || a),
              (n.onComplete = i),
              (n.onCompleteParams = o),
              (n.parent = this),
              new gx(e, n, vv(this, r)),
              this
            );
          }),
          (n.staggerFrom = function (e, t, n, a, r, i, o) {
            return (
              (n.runBackwards = 1),
              (nv(n).immediateRender = pb(n.immediateRender)),
              this.staggerTo(e, t, n, a, r, i, o)
            );
          }),
          (n.staggerFromTo = function (e, t, n, a, r, i, o, s) {
            return (
              (a.startAt = n),
              (nv(a).immediateRender = pb(a.immediateRender)),
              this.staggerTo(e, t, a, r, i, o, s)
            );
          }),
          (n.render = function (e, t, n) {
            var a,
              r,
              i,
              o,
              s,
              u,
              c,
              d,
              l,
              m,
              f,
              p,
              h = this._time,
              g = this._dirty ? this.totalDuration() : this._tDur,
              y = this._dur,
              b = this !== Py && e > g - nb && e >= 0 ? g : e < nb ? 0 : e,
              v = this._zTime < 0 != e < 0 && (this._initted || !y);
            if (b !== this._tTime || n || v) {
              if (
                (h !== this._time &&
                  y &&
                  ((b += this._time - h), (e += this._time - h)),
                (a = b),
                (l = this._start),
                (u = !(d = this._ts)),
                v && (y || (h = this._zTime), (e || !t) && (this._zTime = e)),
                this._repeat &&
                  ((f = this._yoyo),
                  (s = y + this._rDelay),
                  (a = zb(b % s)),
                  b === g
                    ? ((o = this._repeat), (a = y))
                    : ((o = ~~(b / s)) && o === b / s && ((a = y), o--),
                      a > y && (a = y)),
                  (m = uv(this._tTime, s)),
                  !h && this._tTime && m !== o && (m = o),
                  f && 1 & o && ((a = y - a), (p = 1)),
                  o !== m && !this._lock))
              ) {
                var x = f && 1 & m,
                  _ = x === (f && 1 & o);
                if (
                  (o < m && (x = !x),
                  (h = x ? 0 : y),
                  (this._lock = 1),
                  (this.render(h || (p ? 0 : zb(o * s)), t, !y)._lock = 0),
                  !t && this.parent && Ev(this, "onRepeat"),
                  this.vars.repeatRefresh &&
                    !p &&
                    (this.invalidate()._lock = 1),
                  h !== this._time || u !== !this._ts)
                )
                  return this;
                if (
                  ((y = this._dur),
                  (g = this._tDur),
                  _ &&
                    ((this._lock = 2),
                    (h = x ? y : -1e-4),
                    this.render(h, !0),
                    this.vars.repeatRefresh && !p && this.invalidate()),
                  (this._lock = 0),
                  !this._ts && !u)
                )
                  return this;
                Jv(this, p);
              }
              if (
                (this._hasPause &&
                  !this._forcing &&
                  this._lock < 2 &&
                  ((c = (function (e, t, n) {
                    var a;
                    if (n > t)
                      for (a = e._first; a && a._start <= n; ) {
                        if (!a._dur && "isPause" === a.data && a._start > t)
                          return a;
                        a = a._next;
                      }
                    else
                      for (a = e._last; a && a._start >= n; ) {
                        if (!a._dur && "isPause" === a.data && a._start < t)
                          return a;
                        a = a._prev;
                      }
                  })(this, zb(h), zb(a))),
                  c && (b -= a - (a = c._start))),
                (this._tTime = b),
                (this._time = a),
                (this._act = !d),
                this._initted ||
                  ((this._onUpdate = this.vars.onUpdate),
                  (this._initted = 1),
                  (this._zTime = e)),
                !h && a && !t && Ev(this, "onStart"),
                a >= h && e >= 0)
              )
                for (r = this._first; r; ) {
                  if (
                    ((i = r._next),
                    (r._act || a >= r._start) && r._ts && c !== r)
                  ) {
                    if (r.parent !== this) return this.render(e, t, n);
                    if (
                      (r.render(
                        r._ts > 0
                          ? (a - r._start) * r._ts
                          : (r._dirty ? r.totalDuration() : r._tDur) +
                              (a - r._start) * r._ts,
                        t,
                        n
                      ),
                      a !== this._time || (!this._ts && !u))
                    ) {
                      (c = 0), i && (b += this._zTime = -1e-8);
                      break;
                    }
                  }
                  r = i;
                }
              else {
                r = this._last;
                for (var w = e < 0 ? e : a; r; ) {
                  if (
                    ((i = r._prev), (r._act || w <= r._end) && r._ts && c !== r)
                  ) {
                    if (r.parent !== this) return this.render(e, t, n);
                    if (
                      (r.render(
                        r._ts > 0
                          ? (w - r._start) * r._ts
                          : (r._dirty ? r.totalDuration() : r._tDur) +
                              (w - r._start) * r._ts,
                        t,
                        n
                      ),
                      a !== this._time || (!this._ts && !u))
                    ) {
                      (c = 0), i && (b += this._zTime = w ? -1e-8 : nb);
                      break;
                    }
                  }
                  r = i;
                }
              }
              if (
                c &&
                !t &&
                (this.pause(),
                (c.render(a >= h ? 0 : -1e-8)._zTime = a >= h ? 1 : -1),
                this._ts)
              )
                return (this._start = l), dv(this), this.render(e, t, n);
              this._onUpdate && !t && Ev(this, "onUpdate", !0),
                ((b === g && g >= this.totalDuration()) || (!b && h)) &&
                  ((l !== this._start && Math.abs(d) === Math.abs(this._ts)) ||
                    this._lock ||
                    ((e || !y) &&
                      ((b === g && this._ts > 0) || (!b && this._ts < 0)) &&
                      rv(this, 1),
                    t ||
                      (e < 0 && !h) ||
                      (!b && !h) ||
                      (Ev(
                        this,
                        b === g ? "onComplete" : "onReverseComplete",
                        !0
                      ),
                      this._prom &&
                        !(b < g && this.timeScale() > 0) &&
                        this._prom())));
            }
            return this;
          }),
          (n.add = function (e, t) {
            var n = this;
            if ((lb(t) || (t = vv(this, t)), !(e instanceof ox))) {
              if (bb(e))
                return (
                  e.forEach(function (e) {
                    return n.add(e, t);
                  }),
                  this
                );
              if (cb(e)) return this.addLabel(e, t);
              if (!db(e)) return this;
              e = gx.delayedCall(0, e);
            }
            return this !== e ? fv(this, e, t) : this;
          }),
          (n.getChildren = function (e, t, n, a) {
            void 0 === e && (e = !0),
              void 0 === t && (t = !0),
              void 0 === n && (n = !0),
              void 0 === a && (a = -tb);
            for (var r = [], i = this._first; i; )
              i._start >= a &&
                (i instanceof gx
                  ? t && r.push(i)
                  : (n && r.push(i),
                    e && r.push.apply(r, i.getChildren(!0, t, n)))),
                (i = i._next);
            return r;
          }),
          (n.getById = function (e) {
            for (var t = this.getChildren(1, 1, 1), n = t.length; n--; )
              if (t[n].vars.id === e) return t[n];
          }),
          (n.remove = function (e) {
            return cb(e)
              ? this.removeLabel(e)
              : db(e)
              ? this.killTweensOf(e)
              : (av(this, e),
                e === this._recent && (this._recent = this._last),
                iv(this));
          }),
          (n.totalTime = function (t, n) {
            return arguments.length
              ? ((this._forcing = 1),
                !this._dp &&
                  this._ts &&
                  (this._start = zb(
                    Uv.time -
                      (this._ts > 0
                        ? t / this._ts
                        : (this.totalDuration() - t) / -this._ts)
                  )),
                e.prototype.totalTime.call(this, t, n),
                (this._forcing = 0),
                this)
              : this._tTime;
          }),
          (n.addLabel = function (e, t) {
            return (this.labels[e] = vv(this, t)), this;
          }),
          (n.removeLabel = function (e) {
            return delete this.labels[e], this;
          }),
          (n.addPause = function (e, t, n) {
            var a = gx.delayedCall(0, t || Fb, n);
            return (
              (a.data = "isPause"),
              (this._hasPause = 1),
              fv(this, a, vv(this, e))
            );
          }),
          (n.removePause = function (e) {
            var t = this._first;
            for (e = vv(this, e); t; )
              t._start === e && "isPause" === t.data && rv(t), (t = t._next);
          }),
          (n.killTweensOf = function (e, t, n) {
            for (var a = this.getTweensOf(e, n), r = a.length; r--; )
              ux !== a[r] && a[r].kill(e, t);
            return this;
          }),
          (n.getTweensOf = function (e, t) {
            for (var n, a = [], r = Tv(e), i = this._first, o = lb(t); i; )
              i instanceof gx
                ? Lb(i._targets, r) &&
                  (o
                    ? (!ux || (i._initted && i._ts)) &&
                      i.globalTime(0) <= t &&
                      i.globalTime(i.totalDuration()) > t
                    : !t || i.isActive()) &&
                  a.push(i)
                : (n = i.getTweensOf(r, t)).length && a.push.apply(a, n),
                (i = i._next);
            return a;
          }),
          (n.tweenTo = function (e, t) {
            t = t || {};
            var n = this,
              a = vv(n, e),
              r = t,
              i = r.startAt,
              o = r.onStart,
              s = r.onStartParams,
              u = gx.to(
                n,
                Gb(t, {
                  ease: "none",
                  lazy: !1,
                  time: a,
                  overwrite: "auto",
                  duration:
                    t.duration ||
                    Math.abs(
                      (a - (i && "time" in i ? i.time : n._time)) /
                        n.timeScale()
                    ) ||
                    nb,
                  onStart: function () {
                    n.pause();
                    var e =
                      t.duration || Math.abs((a - n._time) / n.timeScale());
                    u._dur !== e && gv(u, e, 0, 1).render(u._time, !0, !0),
                      o && o.apply(u, s || []);
                  },
                })
              );
            return u;
          }),
          (n.tweenFromTo = function (e, t, n) {
            return this.tweenTo(t, Gb({ startAt: { time: vv(this, e) } }, n));
          }),
          (n.recent = function () {
            return this._recent;
          }),
          (n.nextLabel = function (e) {
            return void 0 === e && (e = this._time), Cv(this, vv(this, e));
          }),
          (n.previousLabel = function (e) {
            return void 0 === e && (e = this._time), Cv(this, vv(this, e), 1);
          }),
          (n.currentLabel = function (e) {
            return arguments.length
              ? this.seek(e, !0)
              : this.previousLabel(this._time + nb);
          }),
          (n.shiftChildren = function (e, t, n) {
            void 0 === n && (n = 0);
            for (var a, r = this._first, i = this.labels; r; )
              r._start >= n && ((r._start += e), (r._end += e)), (r = r._next);
            if (t) for (a in i) i[a] >= n && (i[a] += e);
            return iv(this);
          }),
          (n.invalidate = function () {
            var t = this._first;
            for (this._lock = 0; t; ) t.invalidate(), (t = t._next);
            return e.prototype.invalidate.call(this);
          }),
          (n.clear = function (e) {
            void 0 === e && (e = !0);
            for (var t, n = this._first; n; )
              (t = n._next), this.remove(n), (n = t);
            return (
              (this._time = this._tTime = this._pTime = 0),
              e && (this.labels = {}),
              iv(this)
            );
          }),
          (n.totalDuration = function (e) {
            var t,
              n,
              a,
              r = 0,
              i = this,
              o = i._last,
              s = tb;
            if (arguments.length)
              return i.timeScale(
                (i._repeat < 0 ? i.duration() : i.totalDuration()) /
                  (i.reversed() ? -e : e)
              );
            if (i._dirty) {
              for (a = i.parent; o; )
                (t = o._prev),
                  o._dirty && o.totalDuration(),
                  (n = o._start) > s && i._sort && o._ts && !i._lock
                    ? ((i._lock = 1), (fv(i, o, n - o._delay, 1)._lock = 0))
                    : (s = n),
                  n < 0 &&
                    o._ts &&
                    ((r -= n),
                    ((!a && !i._dp) || (a && a.smoothChildTiming)) &&
                      ((i._start += n / i._ts),
                      (i._time -= n),
                      (i._tTime -= n)),
                    i.shiftChildren(-n, !1, -Infinity),
                    (s = 0)),
                  o._end > r && o._ts && (r = o._end),
                  (o = t);
              gv(i, i === Py && i._time > r ? i._time : r, 1, 1),
                (i._dirty = 0);
            }
            return i._tDur;
          }),
          (t.updateRoot = function (e) {
            if (
              (Py._ts && (Wb(Py, cv(e, Py)), (Fy = Uv.frame)), Uv.frame >= Yb)
            ) {
              Yb += Jy.autoSleep || 120;
              var t = Py._first;
              if ((!t || !t._ts) && Jy.autoSleep && Uv._listeners.length < 2) {
                for (; t && !t._ts; ) t = t._next;
                t || Uv.sleep();
              }
            }
          }),
          t
        );
      })(ox);
      Gb(sx.prototype, { _lock: 0, _hasPause: 0, _forcing: 0 });
      var ux,
        cx = function (e, t, n, a, r, i, o) {
          var s,
            u,
            c,
            d,
            l,
            m,
            f,
            p,
            h = new Ix(this._pt, e, t, 0, 1, Bx, null, r),
            g = 0,
            y = 0;
          for (
            h.b = n,
              h.e = a,
              n += "",
              (f = ~(a += "").indexOf("random(")) && (a = Rv(a)),
              i && (i((p = [n, a]), e, t), (n = p[0]), (a = p[1])),
              u = n.match(wb) || [];
            (s = wb.exec(a));

          )
            (d = s[0]),
              (l = a.substring(g, s.index)),
              c ? (c = (c + 1) % 5) : "rgba(" === l.substr(-5) && (c = 1),
              d !== u[y++] &&
                ((m = parseFloat(u[y - 1]) || 0),
                (h._pt = {
                  _next: h._pt,
                  p: l || 1 === y ? l : ",",
                  s: m,
                  c:
                    "=" === d.charAt(1)
                      ? parseFloat(d.substr(2)) * ("-" === d.charAt(0) ? -1 : 1)
                      : parseFloat(d) - m,
                  m: c && c < 4 ? Math.round : 0,
                }),
                (g = wb.lastIndex));
          return (
            (h.c = g < a.length ? a.substring(g, a.length) : ""),
            (h.fp = o),
            (Ob.test(a) || f) && (h.e = 0),
            (this._pt = h),
            h
          );
        },
        dx = function (e, t, n, a, r, i, o, s, u) {
          db(a) && (a = a(r || 0, e, i));
          var c,
            d = e[t],
            l =
              "get" !== n
                ? n
                : db(d)
                ? u
                  ? e[
                      t.indexOf("set") || !db(e["get" + t.substr(3)])
                        ? t
                        : "get" + t.substr(3)
                    ](u)
                  : e[t]()
                : d,
            m = db(d) ? (u ? vx : bx) : yx;
          if (
            (cb(a) &&
              (~a.indexOf("random(") && (a = Rv(a)),
              "=" === a.charAt(1) &&
                (a =
                  parseFloat(l) +
                  parseFloat(a.substr(2)) * ("-" === a.charAt(0) ? -1 : 1) +
                  (wv(l) || 0))),
            l !== a)
          )
            return isNaN(l * a)
              ? (!d && !(t in e) && Sb(t, a),
                cx.call(this, e, t, l, a, m, s || Jy.stringFilter, u))
              : ((c = new Ix(
                  this._pt,
                  e,
                  t,
                  +l || 0,
                  a - (l || 0),
                  "boolean" == typeof d ? Ox : wx,
                  0,
                  m
                )),
                u && (c.fp = u),
                o && c.modifier(o, this, e),
                (this._pt = c));
        },
        lx = function (e, t, n, a, r, i) {
          var o, s, u, c;
          if (
            Eb[e] &&
            !1 !==
              (o = new Eb[e]()).init(
                r,
                o.rawVars
                  ? t[e]
                  : (function (e, t, n, a, r) {
                      if (
                        (db(e) && (e = fx(e, r, t, n, a)),
                        !fb(e) || (e.style && e.nodeType) || bb(e) || yb(e))
                      )
                        return cb(e) ? fx(e, r, t, n, a) : e;
                      var i,
                        o = {};
                      for (i in e) o[i] = fx(e[i], r, t, n, a);
                      return o;
                    })(t[e], a, r, i, n),
                n,
                a,
                i
              ) &&
            ((n._pt = s =
              new Ix(n._pt, r, e, 0, 1, o.render, o, 0, o.priority)),
            n !== Ry)
          )
            for (
              u = n._ptLookup[n._targets.indexOf(r)], c = o._props.length;
              c--;

            )
              u[o._props[c]] = s;
          return o;
        },
        mx = function e(t, n) {
          var a,
            r,
            i,
            o,
            s,
            u,
            c,
            d,
            l,
            m,
            f,
            p,
            h,
            g = t.vars,
            y = g.ease,
            b = g.startAt,
            v = g.immediateRender,
            x = g.lazy,
            _ = g.onUpdate,
            w = g.onUpdateParams,
            O = g.callbackScope,
            B = g.runBackwards,
            T = g.yoyoEase,
            P = g.keyframes,
            k = g.autoRevert,
            S = t._dur,
            M = t._startAt,
            I = t._targets,
            F = t.parent,
            R = F && "nested" === F.data ? F.parent._targets : I,
            $ = "auto" === t._overwrite,
            C = t.timeline;
          if (
            (C && (!P || !y) && (y = "none"),
            (t._ease = ex(y, eb.ease)),
            (t._yEase = T ? Kv(ex(!0 === T ? y : T, eb.ease)) : 0),
            T &&
              t._yoyo &&
              !t._repeat &&
              ((T = t._yEase), (t._yEase = t._ease), (t._ease = T)),
            !C)
          ) {
            if (
              ((p = (d = I[0] ? Hb(I[0]).harness : 0) && g[d.prop]),
              (a = tv(g, Rb)),
              M && M.render(-1, !0).kill(),
              b)
            ) {
              if (
                (rv(
                  (t._startAt = gx.set(
                    I,
                    Gb(
                      {
                        data: "isStart",
                        overwrite: !1,
                        parent: F,
                        immediateRender: !0,
                        lazy: pb(x),
                        startAt: null,
                        delay: 0,
                        onUpdate: _,
                        onUpdateParams: w,
                        callbackScope: O,
                        stagger: 0,
                      },
                      b
                    )
                  ))
                ),
                v)
              )
                if (n > 0) k || (t._startAt = 0);
                else if (S && !(n < 0 && M)) return void (n && (t._zTime = n));
            } else if (B && S)
              if (M) !k && (t._startAt = 0);
              else if (
                (n && (v = !1),
                (i = Gb(
                  {
                    overwrite: !1,
                    data: "isFromStart",
                    lazy: v && pb(x),
                    immediateRender: v,
                    stagger: 0,
                    parent: F,
                  },
                  a
                )),
                p && (i[d.prop] = p),
                rv((t._startAt = gx.set(I, i))),
                v)
              ) {
                if (!n) return;
              } else e(t._startAt, nb);
            for (
              t._pt = 0, x = (S && pb(x)) || (x && !S), r = 0;
              r < I.length;
              r++
            ) {
              if (
                ((c = (s = I[r])._gsap || qb(I)[r]._gsap),
                (t._ptLookup[r] = m = {}),
                Cb[c.id] && $b.length && jb(),
                (f = R === I ? r : R.indexOf(s)),
                d &&
                  !1 !== (l = new d()).init(s, p || a, t, f, R) &&
                  ((t._pt = o =
                    new Ix(t._pt, s, l.name, 0, 1, l.render, l, 0, l.priority)),
                  l._props.forEach(function (e) {
                    m[e] = o;
                  }),
                  l.priority && (u = 1)),
                !d || p)
              )
                for (i in a)
                  Eb[i] && (l = lx(i, a, t, f, s, R))
                    ? l.priority && (u = 1)
                    : (m[i] = o =
                        dx.call(t, s, i, "get", a[i], f, R, 0, g.stringFilter));
              t._op && t._op[r] && t.kill(s, t._op[r]),
                $ &&
                  t._pt &&
                  ((ux = t),
                  Py.killTweensOf(s, m, t.globalTime(0)),
                  (h = !t.parent),
                  (ux = 0)),
                t._pt && x && (Cb[c.id] = 1);
            }
            u && Mx(t), t._onInit && t._onInit(t);
          }
          (t._from = !C && !!g.runBackwards),
            (t._onUpdate = _),
            (t._initted = (!t._op || t._pt) && !h);
        },
        fx = function (e, t, n, a, r) {
          return db(e)
            ? e.call(t, n, a, r)
            : cb(e) && ~e.indexOf("random(")
            ? Rv(e)
            : e;
        },
        px = Xb + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",
        hx = (px + ",id,stagger,delay,duration,paused,scrollTrigger").split(
          ","
        ),
        gx = (function (e) {
          function t(t, n, a, r) {
            var i;
            "number" == typeof n && ((a.duration = n), (n = a), (a = null));
            var o,
              s,
              u,
              c,
              d,
              l,
              m,
              f,
              p = (i = e.call(this, r ? n : nv(n), a) || this).vars,
              h = p.duration,
              g = p.delay,
              y = p.immediateRender,
              b = p.stagger,
              v = p.overwrite,
              x = p.keyframes,
              _ = p.defaults,
              w = p.scrollTrigger,
              O = p.yoyoEase,
              B = i.parent,
              T = (bb(t) || yb(t) ? lb(t[0]) : "length" in n) ? [t] : Tv(t);
            if (
              ((i._targets = T.length
                ? qb(T)
                : Mb(
                    "GSAP target " + t + " not found. https://greensock.com",
                    !Jy.nullTargetWarn
                  ) || []),
              (i._ptLookup = []),
              (i._overwrite = v),
              x || b || gb(h) || gb(g))
            ) {
              if (
                ((n = i.vars),
                (o = i.timeline =
                  new sx({ data: "nested", defaults: _ || {} })).kill(),
                (o.parent = By(i)),
                x)
              )
                Gb(o.vars.defaults, { ease: "none" }),
                  x.forEach(function (e) {
                    return o.to(T, e, ">");
                  });
              else {
                if (((c = T.length), (m = b ? kv(b) : Fb), fb(b)))
                  for (d in b) ~px.indexOf(d) && (f || (f = {}), (f[d] = b[d]));
                for (s = 0; s < c; s++) {
                  for (d in ((u = {}), n)) hx.indexOf(d) < 0 && (u[d] = n[d]);
                  (u.stagger = 0),
                    O && (u.yoyoEase = O),
                    f && Jb(u, f),
                    (l = T[s]),
                    (u.duration = +fx(h, By(i), s, l, T)),
                    (u.delay = (+fx(g, By(i), s, l, T) || 0) - i._delay),
                    !b &&
                      1 === c &&
                      u.delay &&
                      ((i._delay = g = u.delay),
                      (i._start += g),
                      (u.delay = 0)),
                    o.to(l, u, m(s, l, T));
                }
                o.duration() ? (h = g = 0) : (i.timeline = 0);
              }
              h || i.duration((h = o.duration()));
            } else i.timeline = 0;
            return (
              !0 === v && ((ux = By(i)), Py.killTweensOf(T), (ux = 0)),
              B && mv(B, By(i)),
              (y ||
                (!h &&
                  !x &&
                  i._start === zb(B._time) &&
                  pb(y) &&
                  ov(By(i)) &&
                  "nested" !== B.data)) &&
                ((i._tTime = -1e-8), i.render(Math.max(0, -g))),
              w && pv(By(i), w),
              i
            );
          }
          Ty(t, e);
          var n = t.prototype;
          return (
            (n.render = function (e, t, n) {
              var a,
                r,
                i,
                o,
                s,
                u,
                c,
                d,
                l,
                m = this._time,
                f = this._tDur,
                p = this._dur,
                h = e > f - nb && e >= 0 ? f : e < nb ? 0 : e;
              if (p) {
                if (
                  h !== this._tTime ||
                  !e ||
                  n ||
                  (this._startAt && this._zTime < 0 != e < 0)
                ) {
                  if (((a = h), (d = this.timeline), this._repeat)) {
                    if (
                      ((o = p + this._rDelay),
                      (a = zb(h % o)),
                      h === f
                        ? ((i = this._repeat), (a = p))
                        : ((i = ~~(h / o)) && i === h / o && ((a = p), i--),
                          a > p && (a = p)),
                      (u = this._yoyo && 1 & i) &&
                        ((l = this._yEase), (a = p - a)),
                      (s = uv(this._tTime, o)),
                      a === m && !n && this._initted)
                    )
                      return this;
                    i !== s &&
                      (d && this._yEase && Jv(d, u),
                      !this.vars.repeatRefresh ||
                        u ||
                        this._lock ||
                        ((this._lock = n = 1),
                        (this.render(zb(o * i), !0).invalidate()._lock = 0)));
                  }
                  if (!this._initted) {
                    if (hv(this, e < 0 ? e : a, n, t))
                      return (this._tTime = 0), this;
                    if (p !== this._dur) return this.render(e, t, n);
                  }
                  for (
                    this._tTime = h,
                      this._time = a,
                      !this._act &&
                        this._ts &&
                        ((this._act = 1), (this._lazy = 0)),
                      this.ratio = c = (l || this._ease)(a / p),
                      this._from && (this.ratio = c = 1 - c),
                      a && !m && !t && Ev(this, "onStart"),
                      r = this._pt;
                    r;

                  )
                    r.r(c, r.d), (r = r._next);
                  (d &&
                    d.render(e < 0 ? e : !a && u ? -1e-8 : d._dur * c, t, n)) ||
                    (this._startAt && (this._zTime = e)),
                    this._onUpdate &&
                      !t &&
                      (e < 0 && this._startAt && this._startAt.render(e, !0, n),
                      Ev(this, "onUpdate")),
                    this._repeat &&
                      i !== s &&
                      this.vars.onRepeat &&
                      !t &&
                      this.parent &&
                      Ev(this, "onRepeat"),
                    (h !== this._tDur && h) ||
                      this._tTime !== h ||
                      (e < 0 &&
                        this._startAt &&
                        !this._onUpdate &&
                        this._startAt.render(e, !0, !0),
                      (e || !p) &&
                        ((h === this._tDur && this._ts > 0) ||
                          (!h && this._ts < 0)) &&
                        rv(this, 1),
                      t ||
                        (e < 0 && !m) ||
                        (!h && !m) ||
                        (Ev(
                          this,
                          h === f ? "onComplete" : "onReverseComplete",
                          !0
                        ),
                        this._prom &&
                          !(h < f && this.timeScale() > 0) &&
                          this._prom()));
                }
              } else
                !(function (e, t, n, a) {
                  var r,
                    i,
                    o = e.ratio,
                    s =
                      t < 0 ||
                      (!t && o && !e._start && e._zTime > nb && !e._dp._lock) ||
                      ((e._ts < 0 || e._dp._ts < 0) &&
                        "isFromStart" !== e.data &&
                        "isStart" !== e.data)
                        ? 0
                        : 1,
                    u = e._rDelay,
                    c = 0;
                  if (
                    (u &&
                      e._repeat &&
                      ((c = _v(0, e._tDur, t)),
                      uv(c, u) !== (i = uv(e._tTime, u)) &&
                        ((o = 1 - s),
                        e.vars.repeatRefresh && e._initted && e.invalidate())),
                    s !== o || a || e._zTime === nb || (!t && e._zTime))
                  ) {
                    if (!e._initted && hv(e, t, a, n)) return;
                    for (
                      i = e._zTime,
                        e._zTime = t || (n ? nb : 0),
                        n || (n = t && !i),
                        e.ratio = s,
                        e._from && (s = 1 - s),
                        e._time = 0,
                        e._tTime = c,
                        n || Ev(e, "onStart"),
                        r = e._pt;
                      r;

                    )
                      r.r(s, r.d), (r = r._next);
                    e._startAt && t < 0 && e._startAt.render(t, !0, !0),
                      e._onUpdate && !n && Ev(e, "onUpdate"),
                      c && e._repeat && !n && e.parent && Ev(e, "onRepeat"),
                      (t >= e._tDur || t < 0) &&
                        e.ratio === s &&
                        (s && rv(e, 1),
                        n ||
                          (Ev(e, s ? "onComplete" : "onReverseComplete", !0),
                          e._prom && e._prom()));
                  } else e._zTime || (e._zTime = t);
                })(this, e, t, n);
              return this;
            }),
            (n.targets = function () {
              return this._targets;
            }),
            (n.invalidate = function () {
              return (
                (this._pt =
                  this._op =
                  this._startAt =
                  this._onUpdate =
                  this._act =
                  this._lazy =
                    0),
                (this._ptLookup = []),
                this.timeline && this.timeline.invalidate(),
                e.prototype.invalidate.call(this)
              );
            }),
            (n.kill = function (e, t) {
              if (
                (void 0 === t && (t = "all"),
                !(e || (t && "all" !== t)) && ((this._lazy = 0), this.parent))
              )
                return Av(this);
              if (this.timeline) {
                var n = this.timeline.totalDuration();
                return (
                  this.timeline.killTweensOf(
                    e,
                    t,
                    ux && !0 !== ux.vars.overwrite
                  )._first || Av(this),
                  this.parent &&
                    n !== this.timeline.totalDuration() &&
                    gv(this, (this._dur * this.timeline._tDur) / n, 0, 1),
                  this
                );
              }
              var a,
                r,
                i,
                o,
                s,
                u,
                c,
                d = this._targets,
                l = e ? Tv(e) : d,
                m = this._ptLookup,
                f = this._pt;
              if (
                (!t || "all" === t) &&
                (function (e, t) {
                  for (
                    var n = e.length, a = n === t.length;
                    a && n-- && e[n] === t[n];

                  );
                  return n < 0;
                })(d, l)
              )
                return "all" === t && (this._pt = 0), Av(this);
              for (
                a = this._op = this._op || [],
                  "all" !== t &&
                    (cb(t) &&
                      ((s = {}),
                      Nb(t, function (e) {
                        return (s[e] = 1);
                      }),
                      (t = s)),
                    (t = (function (e, t) {
                      var n,
                        a,
                        r,
                        i,
                        o = e[0] ? Hb(e[0]).harness : 0,
                        s = o && o.aliases;
                      if (!s) return t;
                      for (a in ((n = Jb({}, t)), s))
                        if ((a in n))
                          for (r = (i = s[a].split(",")).length; r--; )
                            n[i[r]] = n[a];
                      return n;
                    })(d, t))),
                  c = d.length;
                c--;

              )
                if (~l.indexOf(d[c]))
                  for (s in ((r = m[c]),
                  "all" === t
                    ? ((a[c] = t), (o = r), (i = {}))
                    : ((i = a[c] = a[c] || {}), (o = t)),
                  o))
                    (u = r && r[s]) &&
                      (("kill" in u.d && !0 !== u.d.kill(s)) ||
                        av(this, u, "_pt"),
                      delete r[s]),
                      "all" !== i && (i[s] = 1);
              return this._initted && !this._pt && f && Av(this), this;
            }),
            (t.to = function (e, n) {
              return new t(e, n, arguments[2]);
            }),
            (t.from = function (e, n) {
              return new t(e, Ub(arguments, 1));
            }),
            (t.delayedCall = function (e, n, a, r) {
              return new t(n, 0, {
                immediateRender: !1,
                lazy: !1,
                overwrite: !1,
                delay: e,
                onComplete: n,
                onReverseComplete: n,
                onCompleteParams: a,
                onReverseCompleteParams: a,
                callbackScope: r,
              });
            }),
            (t.fromTo = function (e, n, a) {
              return new t(e, Ub(arguments, 2));
            }),
            (t.set = function (e, n) {
              return (
                (n.duration = 0), n.repeatDelay || (n.repeat = 0), new t(e, n)
              );
            }),
            (t.killTweensOf = function (e, t, n) {
              return Py.killTweensOf(e, t, n);
            }),
            t
          );
        })(ox);
      Gb(gx.prototype, {
        _targets: [],
        _lazy: 0,
        _startAt: 0,
        _op: 0,
        _onInit: 0,
      }),
        Nb("staggerTo,staggerFrom,staggerFromTo", function (e) {
          gx[e] = function () {
            var t = new sx(),
              n = Ov.call(arguments, 0);
            return (
              n.splice("staggerFromTo" === e ? 5 : 4, 0, 0), t[e].apply(t, n)
            );
          };
        });
      var yx = function (e, t, n) {
          return (e[t] = n);
        },
        bx = function (e, t, n) {
          return e[t](n);
        },
        vx = function (e, t, n, a) {
          return e[t](a.fp, n);
        },
        xx = function (e, t, n) {
          return e.setAttribute(t, n);
        },
        _x = function (e, t) {
          return db(e[t]) ? bx : mb(e[t]) && e.setAttribute ? xx : yx;
        },
        wx = function (e, t) {
          return t.set(t.t, t.p, Math.round(1e4 * (t.s + t.c * e)) / 1e4, t);
        },
        Ox = function (e, t) {
          return t.set(t.t, t.p, !!(t.s + t.c * e), t);
        },
        Bx = function (e, t) {
          var n = t._pt,
            a = "";
          if (!e && t.b) a = t.b;
          else if (1 === e && t.e) a = t.e;
          else {
            for (; n; )
              (a =
                n.p +
                (n.m
                  ? n.m(n.s + n.c * e)
                  : Math.round(1e4 * (n.s + n.c * e)) / 1e4) +
                a),
                (n = n._next);
            a += t.c;
          }
          t.set(t.t, t.p, a, t);
        },
        Tx = function (e, t) {
          for (var n = t._pt; n; ) n.r(e, n.d), (n = n._next);
        },
        Px = function (e, t, n, a) {
          for (var r, i = this._pt; i; )
            (r = i._next), i.p === a && i.modifier(e, t, n), (i = r);
        },
        kx = function (e) {
          for (var t, n, a = this._pt; a; )
            (n = a._next),
              (a.p === e && !a.op) || a.op === e
                ? av(this, a, "_pt")
                : a.dep || (t = 1),
              (a = n);
          return !t;
        },
        Sx = function (e, t, n, a) {
          a.mSet(e, t, a.m.call(a.tween, n, a.mt), a);
        },
        Mx = function (e) {
          for (var t, n, a, r, i = e._pt; i; ) {
            for (t = i._next, n = a; n && n.pr > i.pr; ) n = n._next;
            (i._prev = n ? n._prev : r) ? (i._prev._next = i) : (a = i),
              (i._next = n) ? (n._prev = i) : (r = i),
              (i = t);
          }
          e._pt = a;
        },
        Ix = (function () {
          function e(e, t, n, a, r, i, o, s, u) {
            (this.t = t),
              (this.s = a),
              (this.c = r),
              (this.p = n),
              (this.r = i || wx),
              (this.d = o || this),
              (this.set = s || yx),
              (this.pr = u || 0),
              (this._next = e),
              e && (e._prev = this);
          }
          return (
            (e.prototype.modifier = function (e, t, n) {
              (this.mSet = this.mSet || this.set),
                (this.set = Sx),
                (this.m = e),
                (this.mt = n),
                (this.tween = t);
            }),
            e
          );
        })();
      Nb(
        Xb +
          "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",
        function (e) {
          return (Rb[e] = 1);
        }
      ),
        (Tb.TweenMax = Tb.TweenLite = gx),
        (Tb.TimelineLite = Tb.TimelineMax = sx),
        (Py = new sx({
          sortChildren: !1,
          defaults: eb,
          autoRemoveChildren: !0,
          id: "root",
          smoothChildTiming: !0,
        })),
        (Jy.stringFilter = Lv);
      var Fx = {
        registerPlugin: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          t.forEach(function (e) {
            return (function (e) {
              var t = (e = (!e.name && e.default) || e).name,
                n = db(e),
                a =
                  t && !n && e.init
                    ? function () {
                        this._props = [];
                      }
                    : e,
                r = {
                  init: Fb,
                  render: Tx,
                  add: dx,
                  kill: kx,
                  modifier: Px,
                  rawVars: 0,
                },
                i = {
                  targetTest: 0,
                  get: 0,
                  getSetter: _x,
                  aliases: {},
                  register: 0,
                };
              if ((jv(), e !== a)) {
                if (Eb[t]) return;
                Gb(a, Gb(tv(e, r), i)),
                  Jb(a.prototype, Jb(r, tv(e, i))),
                  (Eb[(a.prop = t)] = a),
                  e.targetTest && (Db.push(a), (Rb[t] = 1)),
                  (t =
                    ("css" === t
                      ? "CSS"
                      : t.charAt(0).toUpperCase() + t.substr(1)) + "Plugin");
              }
              Ib(t, a), e.register && e.register(Cx, a, Ix);
            })(e);
          });
        },
        timeline: function (e) {
          return new sx(e);
        },
        getTweensOf: function (e, t) {
          return Py.getTweensOf(e, t);
        },
        getProperty: function (e, t, n, a) {
          cb(e) && (e = Tv(e)[0]);
          var r = Hb(e || {}).get,
            i = n ? Zb : Qb;
          return (
            "native" === n && (n = ""),
            e
              ? t
                ? i(((Eb[t] && Eb[t].get) || r)(e, t, n, a))
                : function (t, n, a) {
                    return i(((Eb[t] && Eb[t].get) || r)(e, t, n, a));
                  }
              : e
          );
        },
        quickSetter: function (e, t, n) {
          if ((e = Tv(e)).length > 1) {
            var a = e.map(function (e) {
                return Cx.quickSetter(e, t, n);
              }),
              r = a.length;
            return function (e) {
              for (var t = r; t--; ) a[t](e);
            };
          }
          e = e[0] || {};
          var i = Eb[t],
            o = Hb(e),
            s = (o.harness && (o.harness.aliases || {})[t]) || t,
            u = i
              ? function (t) {
                  var a = new i();
                  (Ry._pt = 0),
                    a.init(e, n ? t + n : t, Ry, 0, [e]),
                    a.render(1, a),
                    Ry._pt && Tx(1, Ry);
                }
              : o.set(e, s);
          return i
            ? u
            : function (t) {
                return u(e, s, n ? t + n : t, o, 1);
              };
        },
        isTweening: function (e) {
          return Py.getTweensOf(e, !0).length > 0;
        },
        defaults: function (e) {
          return e && e.ease && (e.ease = ex(e.ease, eb.ease)), ev(eb, e || {});
        },
        config: function (e) {
          return ev(Jy, e || {});
        },
        registerEffect: function (e) {
          var t = e.name,
            n = e.effect,
            a = e.plugins,
            r = e.defaults,
            i = e.extendTimeline;
          (a || "").split(",").forEach(function (e) {
            return (
              e &&
              !Eb[e] &&
              !Tb[e] &&
              Mb(t + " effect requires " + e + " plugin.")
            );
          }),
            (Ab[t] = function (e, t, a) {
              return n(Tv(e), Gb(t || {}, r), a);
            }),
            i &&
              (sx.prototype[t] = function (e, n, a) {
                return this.add(Ab[t](e, fb(n) ? n : (a = n) && {}, this), a);
              });
        },
        registerEase: function (e, t) {
          Wv[e] = ex(t);
        },
        parseEase: function (e, t) {
          return arguments.length ? ex(e, t) : Wv;
        },
        getById: function (e) {
          return Py.getById(e);
        },
        exportRoot: function (e, t) {
          void 0 === e && (e = {});
          var n,
            a,
            r = new sx(e);
          for (
            r.smoothChildTiming = pb(e.smoothChildTiming),
              Py.remove(r),
              r._dp = 0,
              r._time = r._tTime = Py._time,
              n = Py._first;
            n;

          )
            (a = n._next),
              (!t &&
                !n._dur &&
                n instanceof gx &&
                n.vars.onComplete === n._targets[0]) ||
                fv(r, n, n._start - n._delay),
              (n = a);
          return fv(Py, r, 0), r;
        },
        utils: {
          wrap: function e(t, n, a) {
            var r = n - t;
            return bb(t)
              ? Fv(t, e(0, t.length), n)
              : xv(a, function (e) {
                  return ((r + ((e - t) % r)) % r) + t;
                });
          },
          wrapYoyo: function e(t, n, a) {
            var r = n - t,
              i = 2 * r;
            return bb(t)
              ? Fv(t, e(0, t.length - 1), n)
              : xv(a, function (e) {
                  return (
                    t + ((e = (i + ((e - t) % i)) % i || 0) > r ? i - e : e)
                  );
                });
          },
          distribute: kv,
          random: Iv,
          snap: Mv,
          normalize: function (e, t, n) {
            return $v(e, t, 0, 1, n);
          },
          getUnit: wv,
          clamp: function (e, t, n) {
            return xv(n, function (n) {
              return _v(e, t, n);
            });
          },
          splitColor: qv,
          toArray: Tv,
          mapRange: $v,
          pipe: function () {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return function (e) {
              return t.reduce(function (e, t) {
                return t(e);
              }, e);
            };
          },
          unitize: function (e, t) {
            return function (n) {
              return e(parseFloat(n)) + (t || wv(n));
            };
          },
          interpolate: function e(t, n, a, r) {
            var i = isNaN(t + n)
              ? 0
              : function (e) {
                  return (1 - e) * t + e * n;
                };
            if (!i) {
              var o,
                s,
                u,
                c,
                d,
                l = cb(t),
                m = {};
              if ((!0 === a && (r = 1) && (a = null), l))
                (t = { p: t }), (n = { p: n });
              else if (bb(t) && !bb(n)) {
                for (u = [], c = t.length, d = c - 2, s = 1; s < c; s++)
                  u.push(e(t[s - 1], t[s]));
                c--,
                  (i = function (e) {
                    e *= c;
                    var t = Math.min(d, ~~e);
                    return u[t](e - t);
                  }),
                  (a = n);
              } else r || (t = Jb(bb(t) ? [] : {}, t));
              if (!u) {
                for (o in n) dx.call(m, t, o, "get", n[o]);
                i = function (e) {
                  return Tx(e, m) || (l ? t.p : t);
                };
              }
            }
            return xv(a, i);
          },
          shuffle: Pv,
        },
        install: kb,
        effects: Ab,
        ticker: Uv,
        updateRoot: sx.updateRoot,
        plugins: Eb,
        globalTimeline: Py,
        core: {
          PropTween: Ix,
          globals: Ib,
          Tween: gx,
          Timeline: sx,
          Animation: ox,
          getCache: Hb,
          _removeLinkedListItem: av,
        },
      };
      Nb("to,from,fromTo,delayedCall,set,killTweensOf", function (e) {
        return (Fx[e] = gx[e]);
      }),
        Uv.add(sx.updateRoot),
        (Ry = Fx.to({}, { duration: 0 }));
      var Rx = function (e, t) {
          for (var n = e._pt; n && n.p !== t && n.op !== t && n.fp !== t; )
            n = n._next;
          return n;
        },
        $x = function (e, t) {
          return {
            name: e,
            rawVars: 1,
            init: function (e, n, a) {
              a._onInit = function (e) {
                var a, r;
                if (
                  (cb(n) &&
                    ((a = {}),
                    Nb(n, function (e) {
                      return (a[e] = 1);
                    }),
                    (n = a)),
                  t)
                ) {
                  for (r in ((a = {}), n)) a[r] = t(n[r]);
                  n = a;
                }
                !(function (e, t) {
                  var n,
                    a,
                    r,
                    i = e._targets;
                  for (n in t)
                    for (a = i.length; a--; )
                      (r = e._ptLookup[a][n]) &&
                        (r = r.d) &&
                        (r._pt && (r = Rx(r, n)),
                        r && r.modifier && r.modifier(t[n], e, i[a], n));
                })(e, n);
              };
            },
          };
        },
        Cx =
          Fx.registerPlugin(
            {
              name: "attr",
              init: function (e, t, n, a, r) {
                var i, o;
                for (i in t)
                  (o = this.add(
                    e,
                    "setAttribute",
                    (e.getAttribute(i) || 0) + "",
                    t[i],
                    a,
                    r,
                    0,
                    0,
                    i
                  )) && (o.op = i),
                    this._props.push(i);
              },
            },
            {
              name: "endArray",
              init: function (e, t) {
                for (var n = t.length; n--; ) this.add(e, n, e[n] || 0, t[n]);
              },
            },
            $x("roundProps", Sv),
            $x("modifiers"),
            $x("snap", Mv)
          ) || Fx;
      (gx.version = sx.version = Cx.version = "3.5.1"), (Iy = 1), hb() && jv();
      Wv.Power0,
        Wv.Power1,
        Wv.Power2,
        Wv.Power3,
        Wv.Power4,
        Wv.Linear,
        Wv.Quad,
        Wv.Cubic,
        Wv.Quart,
        Wv.Quint,
        Wv.Strong,
        Wv.Elastic,
        Wv.Back,
        Wv.SteppedEase,
        Wv.Bounce,
        Wv.Sine,
        Wv.Expo,
        Wv.Circ;
      var Ex,
        Ax,
        Yx,
        Dx,
        Xx,
        qx,
        Hx,
        Vx,
        Nx = {},
        zx = 180 / Math.PI,
        Lx = Math.PI / 180,
        Ux = Math.atan2,
        jx = /([A-Z])/g,
        Wx = /(?:left|right|width|margin|padding|x)/i,
        Qx = /[\s,\(]\S/,
        Zx = {
          autoAlpha: "opacity,visibility",
          scale: "scaleX,scaleY",
          alpha: "opacity",
        },
        Gx = function (e, t) {
          return t.set(
            t.t,
            t.p,
            Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u,
            t
          );
        },
        Kx = function (e, t) {
          return t.set(
            t.t,
            t.p,
            1 === e ? t.e : Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u,
            t
          );
        },
        Jx = function (e, t) {
          return t.set(
            t.t,
            t.p,
            e ? Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u : t.b,
            t
          );
        },
        e_ = function (e, t) {
          var n = t.s + t.c * e;
          t.set(t.t, t.p, ~~(n + (n < 0 ? -0.5 : 0.5)) + t.u, t);
        },
        t_ = function (e, t) {
          return t.set(t.t, t.p, e ? t.e : t.b, t);
        },
        n_ = function (e, t) {
          return t.set(t.t, t.p, 1 !== e ? t.b : t.e, t);
        },
        a_ = function (e, t, n) {
          return (e.style[t] = n);
        },
        r_ = function (e, t, n) {
          return e.style.setProperty(t, n);
        },
        i_ = function (e, t, n) {
          return (e._gsap[t] = n);
        },
        o_ = function (e, t, n) {
          return (e._gsap.scaleX = e._gsap.scaleY = n);
        },
        s_ = function (e, t, n, a, r) {
          var i = e._gsap;
          (i.scaleX = i.scaleY = n), i.renderTransform(r, i);
        },
        u_ = function (e, t, n, a, r) {
          var i = e._gsap;
          (i[t] = n), i.renderTransform(r, i);
        },
        c_ = "transform",
        d_ = c_ + "Origin",
        l_ = function (e, t) {
          var n = Ax.createElementNS
            ? Ax.createElementNS(
                (t || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"),
                e
              )
            : Ax.createElement(e);
          return n.style ? n : Ax.createElement(e);
        },
        m_ = function e(t, n, a) {
          var r = getComputedStyle(t);
          return (
            r[n] ||
            r.getPropertyValue(n.replace(jx, "-$1").toLowerCase()) ||
            r.getPropertyValue(n) ||
            (!a && e(t, p_(n) || n, 1)) ||
            ""
          );
        },
        f_ = "O,Moz,ms,Ms,Webkit".split(","),
        p_ = function (e, t, n) {
          var a = (t || Xx).style,
            r = 5;
          if (e in a && !n) return e;
          for (
            e = e.charAt(0).toUpperCase() + e.substr(1);
            r-- && !(f_[r] + e in a);

          );
          return r < 0 ? null : (3 === r ? "ms" : r >= 0 ? f_[r] : "") + e;
        },
        h_ = function () {
          "undefined" != typeof window &&
            window.document &&
            ((Ex = window),
            (Ax = Ex.document),
            (Yx = Ax.documentElement),
            (Xx = l_("div") || { style: {} }),
            (qx = l_("div")),
            (c_ = p_(c_)),
            (d_ = c_ + "Origin"),
            (Xx.style.cssText =
              "border-width:0;line-height:0;position:absolute;padding:0"),
            (Vx = !!p_("perspective")),
            (Dx = 1));
        },
        g_ = function e(t) {
          var n,
            a = l_(
              "svg",
              (this.ownerSVGElement &&
                this.ownerSVGElement.getAttribute("xmlns")) ||
                "http://www.w3.org/2000/svg"
            ),
            r = this.parentNode,
            i = this.nextSibling,
            o = this.style.cssText;
          if (
            (Yx.appendChild(a),
            a.appendChild(this),
            (this.style.display = "block"),
            t)
          )
            try {
              (n = this.getBBox()),
                (this._gsapBBox = this.getBBox),
                (this.getBBox = e);
            } catch (e) {}
          else this._gsapBBox && (n = this._gsapBBox());
          return (
            r && (i ? r.insertBefore(this, i) : r.appendChild(this)),
            Yx.removeChild(a),
            (this.style.cssText = o),
            n
          );
        },
        y_ = function (e, t) {
          for (var n = t.length; n--; )
            if (e.hasAttribute(t[n])) return e.getAttribute(t[n]);
        },
        b_ = function (e) {
          var t;
          try {
            t = e.getBBox();
          } catch (n) {
            t = g_.call(e, !0);
          }
          return (
            (t && (t.width || t.height)) ||
              e.getBBox === g_ ||
              (t = g_.call(e, !0)),
            !t || t.width || t.x || t.y
              ? t
              : {
                  x: +y_(e, ["x", "cx", "x1"]) || 0,
                  y: +y_(e, ["y", "cy", "y1"]) || 0,
                  width: 0,
                  height: 0,
                }
          );
        },
        v_ = function (e) {
          return !(!e.getCTM || (e.parentNode && !e.ownerSVGElement) || !b_(e));
        },
        x_ = function (e, t) {
          if (t) {
            var n = e.style;
            t in Nx && t !== d_ && (t = c_),
              n.removeProperty
                ? (("ms" !== t.substr(0, 2) && "webkit" !== t.substr(0, 6)) ||
                    (t = "-" + t),
                  n.removeProperty(t.replace(jx, "-$1").toLowerCase()))
                : n.removeAttribute(t);
          }
        },
        __ = function (e, t, n, a, r, i) {
          var o = new Ix(e._pt, t, n, 0, 1, i ? n_ : t_);
          return (e._pt = o), (o.b = a), (o.e = r), e._props.push(n), o;
        },
        w_ = { deg: 1, rad: 1, turn: 1 },
        O_ = function e(t, n, a, r) {
          var i,
            o,
            s,
            u,
            c = parseFloat(a) || 0,
            d = (a + "").trim().substr((c + "").length) || "px",
            l = Xx.style,
            m = Wx.test(n),
            f = "svg" === t.tagName.toLowerCase(),
            p = (f ? "client" : "offset") + (m ? "Width" : "Height"),
            h = 100,
            g = "px" === r,
            y = "%" === r;
          return r === d || !c || w_[r] || w_[d]
            ? c
            : ("px" !== d && !g && (c = e(t, n, a, "px")),
              (u = t.getCTM && v_(t)),
              y && (Nx[n] || ~n.indexOf("adius"))
                ? zb((c / (u ? t.getBBox()[m ? "width" : "height"] : t[p])) * h)
                : ((l[m ? "width" : "height"] = h + (g ? d : r)),
                  (o =
                    ~n.indexOf("adius") || ("em" === r && t.appendChild && !f)
                      ? t
                      : t.parentNode),
                  u && (o = (t.ownerSVGElement || {}).parentNode),
                  (o && o !== Ax && o.appendChild) || (o = Ax.body),
                  (s = o._gsap) && y && s.width && m && s.time === Uv.time
                    ? zb((c / s.width) * h)
                    : ((y || "%" === d) && (l.position = m_(t, "position")),
                      o === t && (l.position = "static"),
                      o.appendChild(Xx),
                      (i = Xx[p]),
                      o.removeChild(Xx),
                      (l.position = "absolute"),
                      m &&
                        y &&
                        (((s = Hb(o)).time = Uv.time), (s.width = o[p])),
                      zb(g ? (i * c) / h : i && c ? (h / i) * c : 0))));
        },
        B_ = function (e, t, n, a) {
          var r;
          return (
            Dx || h_(),
            t in Zx &&
              "transform" !== t &&
              ~(t = Zx[t]).indexOf(",") &&
              (t = t.split(",")[0]),
            Nx[t] && "transform" !== t
              ? ((r = E_(e, a)),
                (r =
                  "transformOrigin" !== t
                    ? r[t]
                    : A_(m_(e, d_)) + " " + r.zOrigin + "px"))
              : (!(r = e.style[t]) ||
                  "auto" === r ||
                  a ||
                  ~(r + "").indexOf("calc(")) &&
                (r =
                  (S_[t] && S_[t](e, t, n)) ||
                  m_(e, t) ||
                  Vb(e, t) ||
                  ("opacity" === t ? 1 : 0)),
            n && !~(r + "").indexOf(" ") ? O_(e, t, r, n) + n : r
          );
        },
        T_ = function (e, t, n, a) {
          if (!n || "none" === n) {
            var r = p_(t, e, 1),
              i = r && m_(e, r, 1);
            i && i !== n
              ? ((t = r), (n = i))
              : "borderColor" === t && (n = m_(e, "borderTopColor"));
          }
          var o,
            s,
            u,
            c,
            d,
            l,
            m,
            f,
            p,
            h,
            g,
            y,
            b = new Ix(this._pt, e.style, t, 0, 1, Bx),
            v = 0,
            x = 0;
          if (
            ((b.b = n),
            (b.e = a),
            (n += ""),
            "auto" === (a += "") &&
              ((e.style[t] = a), (a = m_(e, t) || a), (e.style[t] = n)),
            Lv((o = [n, a])),
            (a = o[1]),
            (u = (n = o[0]).match(_b) || []),
            (a.match(_b) || []).length)
          ) {
            for (; (s = _b.exec(a)); )
              (m = s[0]),
                (p = a.substring(v, s.index)),
                d
                  ? (d = (d + 1) % 5)
                  : ("rgba(" !== p.substr(-5) && "hsla(" !== p.substr(-5)) ||
                    (d = 1),
                m !== (l = u[x++] || "") &&
                  ((c = parseFloat(l) || 0),
                  (g = l.substr((c + "").length)),
                  (y = "=" === m.charAt(1) ? +(m.charAt(0) + "1") : 0) &&
                    (m = m.substr(2)),
                  (f = parseFloat(m)),
                  (h = m.substr((f + "").length)),
                  (v = _b.lastIndex - h.length),
                  h ||
                    ((h = h || Jy.units[t] || g),
                    v === a.length && ((a += h), (b.e += h))),
                  g !== h && (c = O_(e, t, l, h) || 0),
                  (b._pt = {
                    _next: b._pt,
                    p: p || 1 === x ? p : ",",
                    s: c,
                    c: y ? y * f : f - c,
                    m: d && d < 4 ? Math.round : 0,
                  }));
            b.c = v < a.length ? a.substring(v, a.length) : "";
          } else b.r = "display" === t && "none" === a ? n_ : t_;
          return Ob.test(a) && (b.e = 0), (this._pt = b), b;
        },
        P_ = {
          top: "0%",
          bottom: "100%",
          left: "0%",
          right: "100%",
          center: "50%",
        },
        k_ = function (e, t) {
          if (t.tween && t.tween._time === t.tween._dur) {
            var n,
              a,
              r,
              i = t.t,
              o = i.style,
              s = t.u,
              u = i._gsap;
            if ("all" === s || !0 === s) (o.cssText = ""), (a = 1);
            else
              for (r = (s = s.split(",")).length; --r > -1; )
                (n = s[r]),
                  Nx[n] && ((a = 1), (n = "transformOrigin" === n ? d_ : c_)),
                  x_(i, n);
            a &&
              (x_(i, c_),
              u &&
                (u.svg && i.removeAttribute("transform"),
                E_(i, 1),
                (u.uncache = 1)));
          }
        },
        S_ = {
          clearProps: function (e, t, n, a, r) {
            if ("isFromStart" !== r.data) {
              var i = (e._pt = new Ix(e._pt, t, n, 0, 0, k_));
              return (
                (i.u = a), (i.pr = -10), (i.tween = r), e._props.push(n), 1
              );
            }
          },
        },
        M_ = [1, 0, 0, 1, 0, 0],
        I_ = {},
        F_ = function (e) {
          return "matrix(1, 0, 0, 1, 0, 0)" === e || "none" === e || !e;
        },
        R_ = function (e) {
          var t = m_(e, c_);
          return F_(t) ? M_ : t.substr(7).match(xb).map(zb);
        },
        $_ = function (e, t) {
          var n,
            a,
            r,
            i,
            o = e._gsap || Hb(e),
            s = e.style,
            u = R_(e);
          return o.svg && e.getAttribute("transform")
            ? "1,0,0,1,0,0" ===
              (u = [
                (r = e.transform.baseVal.consolidate().matrix).a,
                r.b,
                r.c,
                r.d,
                r.e,
                r.f,
              ]).join(",")
              ? M_
              : u
            : (u !== M_ ||
                e.offsetParent ||
                e === Yx ||
                o.svg ||
                ((r = s.display),
                (s.display = "block"),
                ((n = e.parentNode) && e.offsetParent) ||
                  ((i = 1), (a = e.nextSibling), Yx.appendChild(e)),
                (u = R_(e)),
                r ? (s.display = r) : x_(e, "display"),
                i &&
                  (a
                    ? n.insertBefore(e, a)
                    : n
                    ? n.appendChild(e)
                    : Yx.removeChild(e))),
              t && u.length > 6 ? [u[0], u[1], u[4], u[5], u[12], u[13]] : u);
        },
        C_ = function (e, t, n, a, r, i) {
          var o,
            s,
            u,
            c = e._gsap,
            d = r || $_(e, !0),
            l = c.xOrigin || 0,
            m = c.yOrigin || 0,
            f = c.xOffset || 0,
            p = c.yOffset || 0,
            h = d[0],
            g = d[1],
            y = d[2],
            b = d[3],
            v = d[4],
            x = d[5],
            _ = t.split(" "),
            w = parseFloat(_[0]) || 0,
            O = parseFloat(_[1]) || 0;
          n
            ? d !== M_ &&
              (s = h * b - g * y) &&
              ((u = w * (-g / s) + O * (h / s) - (h * x - g * v) / s),
              (w = w * (b / s) + O * (-y / s) + (y * x - b * v) / s),
              (O = u))
            : ((w =
                (o = b_(e)).x + (~_[0].indexOf("%") ? (w / 100) * o.width : w)),
              (O =
                o.y +
                (~(_[1] || _[0]).indexOf("%") ? (O / 100) * o.height : O))),
            a || (!1 !== a && c.smooth)
              ? ((v = w - l),
                (x = O - m),
                (c.xOffset = f + (v * h + x * y) - v),
                (c.yOffset = p + (v * g + x * b) - x))
              : (c.xOffset = c.yOffset = 0),
            (c.xOrigin = w),
            (c.yOrigin = O),
            (c.smooth = !!a),
            (c.origin = t),
            (c.originIsAbsolute = !!n),
            (e.style[d_] = "0px 0px"),
            i &&
              (__(i, c, "xOrigin", l, w),
              __(i, c, "yOrigin", m, O),
              __(i, c, "xOffset", f, c.xOffset),
              __(i, c, "yOffset", p, c.yOffset)),
            e.setAttribute("data-svg-origin", w + " " + O);
        },
        E_ = function (e, t) {
          var n = e._gsap || new ix(e);
          if ("x" in n && !t && !n.uncache) return n;
          var a,
            r,
            i,
            o,
            s,
            u,
            c,
            d,
            l,
            m,
            f,
            p,
            h,
            g,
            y,
            b,
            v,
            x,
            _,
            w,
            O,
            B,
            T,
            P,
            k,
            S,
            M,
            I,
            F,
            R,
            $,
            C,
            E = e.style,
            A = n.scaleX < 0,
            Y = "px",
            D = "deg",
            X = m_(e, d_) || "0";
          return (
            (a = r = i = u = c = d = l = m = f = 0),
            (o = s = 1),
            (n.svg = !(!e.getCTM || !v_(e))),
            (g = $_(e, n.svg)),
            n.svg &&
              ((P = !n.uncache && e.getAttribute("data-svg-origin")),
              C_(e, P || X, !!P || n.originIsAbsolute, !1 !== n.smooth, g)),
            (p = n.xOrigin || 0),
            (h = n.yOrigin || 0),
            g !== M_ &&
              ((x = g[0]),
              (_ = g[1]),
              (w = g[2]),
              (O = g[3]),
              (a = B = g[4]),
              (r = T = g[5]),
              6 === g.length
                ? ((o = Math.sqrt(x * x + _ * _)),
                  (s = Math.sqrt(O * O + w * w)),
                  (u = x || _ ? Ux(_, x) * zx : 0),
                  (l = w || O ? Ux(w, O) * zx + u : 0) &&
                    (s *= Math.cos(l * Lx)),
                  n.svg &&
                    ((a -= p - (p * x + h * w)), (r -= h - (p * _ + h * O))))
                : ((C = g[6]),
                  (R = g[7]),
                  (M = g[8]),
                  (I = g[9]),
                  (F = g[10]),
                  ($ = g[11]),
                  (a = g[12]),
                  (r = g[13]),
                  (i = g[14]),
                  (c = (y = Ux(C, F)) * zx),
                  y &&
                    ((P = B * (b = Math.cos(-y)) + M * (v = Math.sin(-y))),
                    (k = T * b + I * v),
                    (S = C * b + F * v),
                    (M = B * -v + M * b),
                    (I = T * -v + I * b),
                    (F = C * -v + F * b),
                    ($ = R * -v + $ * b),
                    (B = P),
                    (T = k),
                    (C = S)),
                  (d = (y = Ux(-w, F)) * zx),
                  y &&
                    ((b = Math.cos(-y)),
                    ($ = O * (v = Math.sin(-y)) + $ * b),
                    (x = P = x * b - M * v),
                    (_ = k = _ * b - I * v),
                    (w = S = w * b - F * v)),
                  (u = (y = Ux(_, x)) * zx),
                  y &&
                    ((P = x * (b = Math.cos(y)) + _ * (v = Math.sin(y))),
                    (k = B * b + T * v),
                    (_ = _ * b - x * v),
                    (T = T * b - B * v),
                    (x = P),
                    (B = k)),
                  c &&
                    Math.abs(c) + Math.abs(u) > 359.9 &&
                    ((c = u = 0), (d = 180 - d)),
                  (o = zb(Math.sqrt(x * x + _ * _ + w * w))),
                  (s = zb(Math.sqrt(T * T + C * C))),
                  (y = Ux(B, T)),
                  (l = Math.abs(y) > 2e-4 ? y * zx : 0),
                  (f = $ ? 1 / ($ < 0 ? -$ : $) : 0)),
              n.svg &&
                ((P = e.getAttribute("transform")),
                (n.forceCSS =
                  e.setAttribute("transform", "") || !F_(m_(e, c_))),
                P && e.setAttribute("transform", P))),
            Math.abs(l) > 90 &&
              Math.abs(l) < 270 &&
              (A
                ? ((o *= -1),
                  (l += u <= 0 ? 180 : -180),
                  (u += u <= 0 ? 180 : -180))
                : ((s *= -1), (l += l <= 0 ? 180 : -180))),
            (n.x =
              ((n.xPercent =
                a && Math.round(e.offsetWidth / 2) === Math.round(-a) ? -50 : 0)
                ? 0
                : a) + Y),
            (n.y =
              ((n.yPercent =
                r && Math.round(e.offsetHeight / 2) === Math.round(-r)
                  ? -50
                  : 0)
                ? 0
                : r) + Y),
            (n.z = i + Y),
            (n.scaleX = zb(o)),
            (n.scaleY = zb(s)),
            (n.rotation = zb(u) + D),
            (n.rotationX = zb(c) + D),
            (n.rotationY = zb(d) + D),
            (n.skewX = l + D),
            (n.skewY = m + D),
            (n.transformPerspective = f + Y),
            (n.zOrigin = parseFloat(X.split(" ")[2]) || 0) && (E[d_] = A_(X)),
            (n.xOffset = n.yOffset = 0),
            (n.force3D = Jy.force3D),
            (n.renderTransform = n.svg ? N_ : Vx ? V_ : D_),
            (n.uncache = 0),
            n
          );
        },
        A_ = function (e) {
          return (e = e.split(" "))[0] + " " + e[1];
        },
        Y_ = function (e, t, n) {
          var a = wv(t);
          return zb(parseFloat(t) + parseFloat(O_(e, "x", n + "px", a))) + a;
        },
        D_ = function (e, t) {
          (t.z = "0px"),
            (t.rotationY = t.rotationX = "0deg"),
            (t.force3D = 0),
            V_(e, t);
        },
        X_ = "0deg",
        q_ = "0px",
        H_ = ") ",
        V_ = function (e, t) {
          var n = t || this,
            a = n.xPercent,
            r = n.yPercent,
            i = n.x,
            o = n.y,
            s = n.z,
            u = n.rotation,
            c = n.rotationY,
            d = n.rotationX,
            l = n.skewX,
            m = n.skewY,
            f = n.scaleX,
            p = n.scaleY,
            h = n.transformPerspective,
            g = n.force3D,
            y = n.target,
            b = n.zOrigin,
            v = "",
            x = ("auto" === g && e && 1 !== e) || !0 === g;
          if (b && (d !== X_ || c !== X_)) {
            var _,
              w = parseFloat(c) * Lx,
              O = Math.sin(w),
              B = Math.cos(w);
            (w = parseFloat(d) * Lx),
              (_ = Math.cos(w)),
              (i = Y_(y, i, O * _ * -b)),
              (o = Y_(y, o, -Math.sin(w) * -b)),
              (s = Y_(y, s, B * _ * -b + b));
          }
          h !== q_ && (v += "perspective(" + h + H_),
            (a || r) && (v += "translate(" + a + "%, " + r + "%) "),
            (x || i !== q_ || o !== q_ || s !== q_) &&
              (v +=
                s !== q_ || x
                  ? "translate3d(" + i + ", " + o + ", " + s + ") "
                  : "translate(" + i + ", " + o + H_),
            u !== X_ && (v += "rotate(" + u + H_),
            c !== X_ && (v += "rotateY(" + c + H_),
            d !== X_ && (v += "rotateX(" + d + H_),
            (l === X_ && m === X_) || (v += "skew(" + l + ", " + m + H_),
            (1 === f && 1 === p) || (v += "scale(" + f + ", " + p + H_),
            (y.style[c_] = v || "translate(0, 0)");
        },
        N_ = function (e, t) {
          var n,
            a,
            r,
            i,
            o,
            s = t || this,
            u = s.xPercent,
            c = s.yPercent,
            d = s.x,
            l = s.y,
            m = s.rotation,
            f = s.skewX,
            p = s.skewY,
            h = s.scaleX,
            g = s.scaleY,
            y = s.target,
            b = s.xOrigin,
            v = s.yOrigin,
            x = s.xOffset,
            _ = s.yOffset,
            w = s.forceCSS,
            O = parseFloat(d),
            B = parseFloat(l);
          (m = parseFloat(m)),
            (f = parseFloat(f)),
            (p = parseFloat(p)) && ((f += p = parseFloat(p)), (m += p)),
            m || f
              ? ((m *= Lx),
                (f *= Lx),
                (n = Math.cos(m) * h),
                (a = Math.sin(m) * h),
                (r = Math.sin(m - f) * -g),
                (i = Math.cos(m - f) * g),
                f &&
                  ((p *= Lx),
                  (o = Math.tan(f - p)),
                  (r *= o = Math.sqrt(1 + o * o)),
                  (i *= o),
                  p &&
                    ((o = Math.tan(p)),
                    (n *= o = Math.sqrt(1 + o * o)),
                    (a *= o))),
                (n = zb(n)),
                (a = zb(a)),
                (r = zb(r)),
                (i = zb(i)))
              : ((n = h), (i = g), (a = r = 0)),
            ((O && !~(d + "").indexOf("px")) ||
              (B && !~(l + "").indexOf("px"))) &&
              ((O = O_(y, "x", d, "px")), (B = O_(y, "y", l, "px"))),
            (b || v || x || _) &&
              ((O = zb(O + b - (b * n + v * r) + x)),
              (B = zb(B + v - (b * a + v * i) + _))),
            (u || c) &&
              ((o = y.getBBox()),
              (O = zb(O + (u / 100) * o.width)),
              (B = zb(B + (c / 100) * o.height))),
            (o =
              "matrix(" +
              n +
              "," +
              a +
              "," +
              r +
              "," +
              i +
              "," +
              O +
              "," +
              B +
              ")"),
            y.setAttribute("transform", o),
            w && (y.style[c_] = o);
        },
        z_ = function (e, t, n, a, r, i) {
          var o,
            s,
            u = 360,
            c = cb(r),
            d = parseFloat(r) * (c && ~r.indexOf("rad") ? zx : 1),
            l = i ? d * i : d - a,
            m = a + l + "deg";
          return (
            c &&
              ("short" === (o = r.split("_")[1]) &&
                (l %= u) !== l % 180 &&
                (l += l < 0 ? u : -360),
              "cw" === o && l < 0
                ? (l = ((l + 36e9) % u) - ~~(l / u) * u)
                : "ccw" === o &&
                  l > 0 &&
                  (l = ((l - 36e9) % u) - ~~(l / u) * u)),
            (e._pt = s = new Ix(e._pt, t, n, a, l, Kx)),
            (s.e = m),
            (s.u = "deg"),
            e._props.push(n),
            s
          );
        },
        L_ = function (e, t, n) {
          var a,
            r,
            i,
            o,
            s,
            u,
            c,
            d = qx.style,
            l = n._gsap;
          for (r in ((d.cssText =
            getComputedStyle(n).cssText + ";position:absolute;display:block;"),
          (d[c_] = t),
          Ax.body.appendChild(qx),
          (a = E_(qx, 1)),
          Nx))
            (i = l[r]) !== (o = a[r]) &&
              "perspective,force3D,transformOrigin,svgOrigin".indexOf(r) < 0 &&
              ((s = wv(i) !== (c = wv(o)) ? O_(n, r, i, c) : parseFloat(i)),
              (u = parseFloat(o)),
              (e._pt = new Ix(e._pt, l, r, s, u - s, Gx)),
              (e._pt.u = c || 0),
              e._props.push(r));
          Ax.body.removeChild(qx);
        };
      Nb("padding,margin,Width,Radius", function (e, t) {
        var n = "Top",
          a = "Right",
          r = "Bottom",
          i = "Left",
          o = (t < 3 ? [n, a, r, i] : [n + i, n + a, r + a, r + i]).map(
            function (n) {
              return t < 2 ? e + n : "border" + n + e;
            }
          );
        S_[t > 1 ? "border" + e : e] = function (e, t, n, a, r) {
          var i, s;
          if (arguments.length < 4)
            return (
              (i = o.map(function (t) {
                return B_(e, t, n);
              })),
              5 === (s = i.join(" ")).split(i[0]).length ? i[0] : s
            );
          (i = (a + "").split(" ")),
            (s = {}),
            o.forEach(function (e, t) {
              return (s[e] = i[t] = i[t] || i[((t - 1) / 2) | 0]);
            }),
            e.init(t, s, r);
        };
      });
      var U_,
        j_,
        W_,
        Q_ = {
          name: "css",
          register: h_,
          targetTest: function (e) {
            return e.style && e.nodeType;
          },
          init: function (e, t, n, a, r) {
            var i,
              o,
              s,
              u,
              c,
              d,
              l,
              m,
              f,
              p,
              h,
              g,
              y,
              b,
              v,
              x,
              _,
              w,
              O,
              B = this._props,
              T = e.style;
            for (l in (Dx || h_(), t))
              if (
                "autoRound" !== l &&
                ((o = t[l]), !Eb[l] || !lx(l, t, n, a, e, r))
              )
                if (
                  ((c = typeof o),
                  (d = S_[l]),
                  "function" === c && (c = typeof (o = o.call(n, a, e, r))),
                  "string" === c && ~o.indexOf("random(") && (o = Rv(o)),
                  d)
                )
                  d(this, e, l, o, n) && (v = 1);
                else if ("--" === l.substr(0, 2))
                  this.add(
                    T,
                    "setProperty",
                    getComputedStyle(e).getPropertyValue(l) + "",
                    o + "",
                    a,
                    r,
                    0,
                    0,
                    l
                  );
                else if ("undefined" !== c) {
                  if (
                    ((i = B_(e, l)),
                    (u = parseFloat(i)),
                    (p =
                      "string" === c && "=" === o.charAt(1)
                        ? +(o.charAt(0) + "1")
                        : 0) && (o = o.substr(2)),
                    (s = parseFloat(o)),
                    l in Zx &&
                      ("autoAlpha" === l &&
                        (1 === u &&
                          "hidden" === B_(e, "visibility") &&
                          s &&
                          (u = 0),
                        __(
                          this,
                          T,
                          "visibility",
                          u ? "inherit" : "hidden",
                          s ? "inherit" : "hidden",
                          !s
                        )),
                      "scale" !== l &&
                        "transform" !== l &&
                        ~(l = Zx[l]).indexOf(",") &&
                        (l = l.split(",")[0])),
                    (h = l in Nx))
                  )
                    if (
                      (g ||
                        ((y = e._gsap).renderTransform || E_(e),
                        (b = !1 !== t.smoothOrigin && y.smooth),
                        ((g = this._pt =
                          new Ix(
                            this._pt,
                            T,
                            c_,
                            0,
                            1,
                            y.renderTransform,
                            y,
                            0,
                            -1
                          )).dep = 1)),
                      "scale" === l)
                    )
                      (this._pt = new Ix(
                        this._pt,
                        y,
                        "scaleY",
                        y.scaleY,
                        p ? p * s : s - y.scaleY
                      )),
                        B.push("scaleY", l),
                        (l += "X");
                    else {
                      if ("transformOrigin" === l) {
                        (_ = void 0),
                          (w = void 0),
                          (O = void 0),
                          (_ = (x = o).split(" ")),
                          (w = _[0]),
                          (O = _[1] || "50%"),
                          ("top" !== w &&
                            "bottom" !== w &&
                            "left" !== O &&
                            "right" !== O) ||
                            ((x = w), (w = O), (O = x)),
                          (_[0] = P_[w] || w),
                          (_[1] = P_[O] || O),
                          (o = _.join(" ")),
                          y.svg
                            ? C_(e, o, 0, b, 0, this)
                            : ((f = parseFloat(o.split(" ")[2]) || 0) !==
                                y.zOrigin &&
                                __(this, y, "zOrigin", y.zOrigin, f),
                              __(this, T, l, A_(i), A_(o)));
                        continue;
                      }
                      if ("svgOrigin" === l) {
                        C_(e, o, 1, b, 0, this);
                        continue;
                      }
                      if (l in I_) {
                        z_(this, y, l, u, o, p);
                        continue;
                      }
                      if ("smoothOrigin" === l) {
                        __(this, y, "smooth", y.smooth, o);
                        continue;
                      }
                      if ("force3D" === l) {
                        y[l] = o;
                        continue;
                      }
                      if ("transform" === l) {
                        L_(this, o, e);
                        continue;
                      }
                    }
                  else l in T || (l = p_(l) || l);
                  if (
                    h ||
                    ((s || 0 === s) && (u || 0 === u) && !Qx.test(o) && l in T)
                  )
                    s || (s = 0),
                      (m = (i + "").substr((u + "").length)) !==
                        (f = wv(o) || (l in Jy.units ? Jy.units[l] : m)) &&
                        (u = O_(e, l, i, f)),
                      (this._pt = new Ix(
                        this._pt,
                        h ? y : T,
                        l,
                        u,
                        p ? p * s : s - u,
                        "px" !== f || !1 === t.autoRound || h ? Gx : e_
                      )),
                      (this._pt.u = f || 0),
                      m !== f && ((this._pt.b = i), (this._pt.r = Jx));
                  else if (l in T) T_.call(this, e, l, i, o);
                  else {
                    if (!(l in e)) {
                      Sb(l, o);
                      continue;
                    }
                    this.add(e, l, e[l], o, a, r);
                  }
                  B.push(l);
                }
            v && Mx(this);
          },
          get: B_,
          aliases: Zx,
          getSetter: function (e, t, n) {
            var a = Zx[t];
            return (
              a && a.indexOf(",") < 0 && (t = a),
              t in Nx && t !== d_ && (e._gsap.x || B_(e, "x"))
                ? n && Hx === n
                  ? "scale" === t
                    ? o_
                    : i_
                  : (Hx = n || {}) && ("scale" === t ? s_ : u_)
                : e.style && !mb(e.style[t])
                ? a_
                : ~t.indexOf("-")
                ? r_
                : _x(e, t)
            );
          },
          core: { _removeProperty: x_, _getMatrix: $_ },
        };
      (Cx.utils.checkPrefix = p_),
        (W_ = Nb(
          (U_ = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent") +
            "," +
            (j_ = "rotation,rotationX,rotationY,skewX,skewY") +
            ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",
          function (e) {
            Nx[e] = 1;
          }
        )),
        Nb(j_, function (e) {
          (Jy.units[e] = "deg"), (I_[e] = 1);
        }),
        (Zx[W_[13]] = U_ + "," + j_),
        Nb(
          "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",
          function (e) {
            var t = e.split(":");
            Zx[t[1]] = W_[t[0]];
          }
        ),
        Nb(
          "x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",
          function (e) {
            Jy.units[e] = "px";
          }
        ),
        Cx.registerPlugin(Q_);
      var Z_,
        G_,
        K_,
        J_,
        ew,
        tw,
        nw,
        aw = Cx.registerPlugin(Q_) || Cx,
        rw =
          (aw.core.Tween,
          function () {
            return "undefined" != typeof window;
          }),
        iw = function () {
          return Z_ || (rw() && (Z_ = window.gsap) && Z_.registerPlugin && Z_);
        },
        ow = function (e) {
          return "string" == typeof e;
        },
        sw = function (e, t) {
          var n = "x" === t ? "Width" : "Height",
            a = "scroll" + n,
            r = "client" + n;
          return e === K_ || e === J_ || e === ew
            ? Math.max(J_[a], ew[a]) - (K_["inner" + n] || J_[r] || ew[r])
            : e[a] - e["offset" + n];
        },
        uw = function (e, t) {
          var n = "scroll" + ("x" === t ? "Left" : "Top");
          return (
            e === K_ &&
              (null != e.pageXOffset
                ? (n = "page" + t.toUpperCase() + "Offset")
                : (e = null != J_[n] ? J_ : ew)),
            function () {
              return e[n];
            }
          );
        },
        cw = function (e, t) {
          var n = tw(e)[0].getBoundingClientRect(),
            a = !t || t === K_ || t === ew,
            r = a
              ? {
                  top:
                    J_.clientTop -
                    (K_.pageYOffset || J_.scrollTop || ew.scrollTop || 0),
                  left:
                    J_.clientLeft -
                    (K_.pageXOffset || J_.scrollLeft || ew.scrollLeft || 0),
                }
              : t.getBoundingClientRect(),
            i = { x: n.left - r.left, y: n.top - r.top };
          return !a && t && ((i.x += uw(t, "x")()), (i.y += uw(t, "y")())), i;
        },
        dw = function (e, t, n, a, r) {
          return isNaN(e) || "object" == typeof e
            ? ow(e) && "=" === e.charAt(1)
              ? parseFloat(e.substr(2)) * ("-" === e.charAt(0) ? -1 : 1) + a - r
              : "max" === e
              ? sw(t, n) - r
              : Math.min(sw(t, n), cw(e, t)[n] - r)
            : parseFloat(e) - r;
        },
        lw = function () {
          (Z_ = iw()),
            rw() &&
              Z_ &&
              document.body &&
              ((K_ = window),
              (ew = document.body),
              (J_ = document.documentElement),
              (tw = Z_.utils.toArray),
              Z_.config({ autoKillThreshold: 7 }),
              (nw = Z_.config()),
              (G_ = 1));
        },
        mw = {
          version: "3.5.1",
          name: "scrollTo",
          rawVars: 1,
          register: function (e) {
            (Z_ = e), lw();
          },
          init: function (e, t, n, a, r) {
            G_ || lw();
            var i = this;
            (i.isWin = e === K_),
              (i.target = e),
              (i.tween = n),
              "object" != typeof t
                ? ow((t = { y: t }).y) &&
                  "max" !== t.y &&
                  "=" !== t.y.charAt(1) &&
                  (t.x = t.y)
                : t.nodeType && (t = { y: t, x: t }),
              (i.vars = t),
              (i.autoKill = !!t.autoKill),
              (i.getX = uw(e, "x")),
              (i.getY = uw(e, "y")),
              (i.x = i.xPrev = i.getX()),
              (i.y = i.yPrev = i.getY()),
              null != t.x
                ? (i.add(
                    i,
                    "x",
                    i.x,
                    dw(t.x, e, "x", i.x, t.offsetX || 0),
                    a,
                    r,
                    Math.round
                  ),
                  i._props.push("scrollTo_x"))
                : (i.skipX = 1),
              null != t.y
                ? (i.add(
                    i,
                    "y",
                    i.y,
                    dw(t.y, e, "y", i.y, t.offsetY || 0),
                    a,
                    r,
                    Math.round
                  ),
                  i._props.push("scrollTo_y"))
                : (i.skipY = 1);
          },
          render: function (e, t) {
            for (
              var n,
                a,
                r,
                i,
                o,
                s = t._pt,
                u = t.target,
                c = t.tween,
                d = t.autoKill,
                l = t.xPrev,
                m = t.yPrev,
                f = t.isWin;
              s;

            )
              s.r(e, s.d), (s = s._next);
            (n = f || !t.skipX ? t.getX() : l),
              (r = (a = f || !t.skipY ? t.getY() : m) - m),
              (i = n - l),
              (o = nw.autoKillThreshold),
              t.x < 0 && (t.x = 0),
              t.y < 0 && (t.y = 0),
              d &&
                (!t.skipX &&
                  (i > o || i < -o) &&
                  n < sw(u, "x") &&
                  (t.skipX = 1),
                !t.skipY &&
                  (r > o || r < -o) &&
                  a < sw(u, "y") &&
                  (t.skipY = 1),
                t.skipX &&
                  t.skipY &&
                  (c.kill(),
                  t.vars.onAutoKill &&
                    t.vars.onAutoKill.apply(c, t.vars.onAutoKillParams || []))),
              f
                ? K_.scrollTo(t.skipX ? n : t.x, t.skipY ? a : t.y)
                : (t.skipY || (u.scrollTop = t.y),
                  t.skipX || (u.scrollLeft = t.x)),
              (t.xPrev = t.x),
              (t.yPrev = t.y);
          },
          kill: function (e) {
            var t = "scrollTo" === e;
            (t || "scrollTo_x" === e) && (this.skipX = 1),
              (t || "scrollTo_y" === e) && (this.skipY = 1);
          },
        };
      (mw.max = sw),
        (mw.getOffset = cw),
        (mw.buildGetter = uw),
        iw() && Z_.registerPlugin(mw);
      var fw = n(8242),
        pw = n(3040);
      function hw(e) {
        if (null == e) return window;
        const t = (function (e) {
          const t = window.getComputedStyle(e).overflowY;
          return "visible" !== t && "clip" !== t;
        })(e);
        return t ? e : hw(e.parentElement);
      }
      var gw = n(789);
      const yw = {
          props:
            "clip,clipPath,webkitClipPath,willChange,opacity,transform,transformOrigin,filter",
          immediateRender: !0,
        },
        bw = (e) => e.map((e) => document.getElementById(e)).filter((e) => e),
        vw = (e, t, n) => ({
          getAnimationProperties(t) {
            return e.getProperties(t);
          },
          getAnimationApi(t) {
            return e.getApiForAnimation(t);
          },
          kill(t, n) {
            e.kill(t, n);
          },
          reverse(e) {
            e.reversed(!e.reversed());
          },
          runAnimation({
            name: t,
            targetId: n,
            duration: a = 0,
            delay: r = 0,
            animationSelectors: i = {},
            params: o = {},
          }) {
            const s = Array.isArray(n) ? n : [n],
              u = bw(s),
              c =
                ((d = i),
                Object.entries(d).reduce((e, [t, n]) => {
                  const a = document.getElementById(n);
                  return a ? Object.assign(e, { [t]: a }) : e;
                }, {}));
            var d;
            return e.animate(t, u, a, r, { ...o, ...c });
          },
          runTransition({
            name: t,
            srcId: n,
            targetId: a,
            duration: r = 0,
            delay: i = 0,
            params: o = {},
          }) {
            const s = Array.isArray(n) ? n : [n],
              u = Array.isArray(a) ? a : [a],
              c = bw(s),
              d = bw(u);
            return e.transition(t, c, d, r, i, o);
          },
          runSequence(t, n = {}) {
            const a = e.sequence(n);
            return (
              t.forEach((e) =>
                "Animation" === e.type
                  ? a.add(this.runAnimation(e.data))
                  : a.add(this.runTransition(e.data))
              ),
              a
            );
          },
          animateTimeScale(
            { instance: t, duration: n, from: a, to: r, easing: i },
            o
          ) {
            e.animateTimeScale(t, n, a, r, i, o);
          },
          runAnimationOnElements: e.animate,
          createSequence: e.sequence,
          createAnimationFromParams: e.animate,
          getScrubTargets(e, a) {
            const r = t && t.repeaterTemplateToParentMap[a],
              { items: i = [] } = r && n ? n.get(r) : {};
            return i.length ? i.map((e) => (0, gw.Zr)(a, e)) : [a];
          },
          createScrubAnimations(e) {
            const t = {};
            return (
              Object.entries(e).forEach(([e, n]) => {
                const {
                  targetId: a,
                  startOffset: r,
                  endOffset: i,
                  namedEffect: o,
                  centeredToTarget: s,
                  transitionDuration: u,
                  transitionDelay: c,
                  transitionEasing: d,
                } = n;
                if (!o) return;
                const { type: l, ...m } = o;
                let f, p;
                const h = this.getAnimationApi(l).getScrubOffsets;
                if (h) {
                  const e = h(m);
                  (f = e.start), (p = e.end);
                }
                t[e] = {
                  targetId: a,
                  factory: (n, o = !1) => {
                    const h = this.runAnimation({
                      name: l,
                      delay: 0,
                      duration: 1,
                      targetId: n || a,
                      params: {
                        ...m,
                        startOffset: r,
                        endOffset: i,
                        transitionDuration: u,
                        transitionDelay: c,
                        transitionEasing: d,
                        paused: !0,
                      },
                    });
                    t[e].animation = h;
                    const g = r
                        ? { name: r.name, offset: r.offset.value, add: f }
                        : void 0,
                      y = i
                        ? { name: i.name, offset: i.offset.value, add: p }
                        : void 0;
                    let b;
                    return (
                      s && (b = document.getElementById(n || a)),
                      {
                        start: g,
                        end: y,
                        target: b,
                        centeredToTarget: s,
                        disabled: o,
                        effect: (e, t) => h.progress(t),
                        destroy: () => h.kill?.(),
                      }
                    );
                  },
                };
              }),
              t
            );
          },
          startScrubAnimations(e, t, n) {
            const a = new Map(),
              r = [],
              i = new Map(),
              o = [];
            function s(e, t, n) {
              const r = e(n);
              r.viewSource = t;
              const i = hw(r.viewSource?.parentElement);
              a.has(i) || a.set(i, []), a.get(i).push(r);
            }
            function u(e, t, a, r, o) {
              const s = "root" === o.hitArea,
                u = { isHitAreaRoot: s, effectId: r, ...e(a, !n) },
                c = s ? document.documentElement : t;
              i.has(c) || i.set(c, []), i.get(c).push(u);
            }
            return (
              Object.entries(e).forEach(([e, n]) => {
                const a = "view-progress" === n.trigger,
                  r = "pointer-move" === n.trigger;
                if (a || r) {
                  const { factory: r, targetId: i } = t[e],
                    o = document.getElementById(n.componentId);
                  if (o) {
                    this.getScrubTargets(n.componentId, i).forEach((t) =>
                      a ? s(r, o, t) : u(r, o, t, e, n.params)
                    );
                  } else {
                    Array.from(
                      document.querySelectorAll(
                        `[id^="${n.componentId}${gw.Jx}"]`
                      )
                    ).forEach((t) => {
                      const o = (0, gw.Zr)(i, (0, gw.HP)(t.id));
                      a ? s(r, t, o) : u(r, t, o, e, n.params);
                    });
                  }
                }
              }),
              a.forEach((e, t) => {
                if (e.length) {
                  const n = new fw.O({
                    root: t,
                    scenes: e,
                    observeViewportEntry: !1,
                    observeViewportResize: !1,
                    observeSourcesResize: !1,
                  });
                  n.start(), r.push(n);
                }
              }),
              i.forEach((e, t) => {
                const n = new pw.g({
                  root: t === document.documentElement ? void 0 : t,
                  scenes: e,
                });
                n.start(), o.push(n);
              }),
              [...r, ...o]
            );
          },
          killPreviewScrubAnimations(e) {
            e.length && (e.forEach((e) => e.destroy()), (e.length = 0));
          },
          clearScrubAnimations(e) {
            const t = {
              name: "BaseClear",
              targetId: [...e],
              duration: 0,
              delay: 0,
              params: yw,
            };
            return (
              this.runSequence([{ type: "Animation", data: t }]),
              Promise.resolve()
            );
          },
          updateViewMode: e.updateViewMode,
        }),
        xw = (0, Fn.Og)([(0, Fn.KT)(In.Gp, kn.UU), En.Ji], (e, t) => (n) => {
          const a = "motion" === n,
            r = a ? void 0 : n,
            i = a ? [] : [mw],
            { engine: o } = new Gn(aw, i),
            s = new Oy(o, void 0, r, a);
          return vw(s, e, t);
        });
      var _w = n(478);
      const ww = (0, Fn.Og)([kn.Qw, _w.e, Mn.RV, Mn.HW], (e, t, n, a) => ({
          getSdkHandlers: () => ({
            [kn.UU]: {
              runAnimation: async (r, i) => {
                const o = Array.isArray(r.targetId) ? r.targetId : [r.targetId];
                let s;
                const u = new Promise((e) => {
                    s = e;
                  }),
                  c = await e.getInstance(),
                  d = {
                    name: "BaseClear",
                    targetId: r.targetId,
                    duration: 0,
                    delay: 0,
                    params: {
                      props:
                        "clip,clipPath,webkitClipPath,opacity,transform,visibility",
                      immediateRender: !1,
                    },
                  };
                return (
                  ((e, t) => {
                    t.forEach((t) => {
                      const n = e.document.getElementById(t);
                      n && n.classList.add("is-animating");
                    });
                  })(n, o),
                  (r.params = {
                    ...r.params,
                    callbacks: {
                      onStart() {
                        "in" === i &&
                          t.update(
                            o.reduce(
                              (e, t) => ({ ...e, [t]: { visibility: null } }),
                              {}
                            )
                          );
                      },
                      onComplete() {
                        "out" === i &&
                          t.update(
                            o.reduce(
                              (e, t) => ({
                                ...e,
                                [t]: { visibility: "hidden !important" },
                              }),
                              {}
                            )
                          ),
                          ((e, t) => {
                            e.requestAnimationFrame(() => {
                              t.forEach((t) => {
                                const n = e.document.getElementById(t);
                                n && n.classList.remove("is-animating");
                              });
                            });
                          })(n, o);
                      },
                    },
                  }),
                  await a,
                  (r = { ...r, duration: r.duration || 1e-5 }),
                  c.runSequence(
                    [
                      { type: "Animation", data: r },
                      { type: "Animation", data: d },
                    ],
                    {
                      callbacks: {
                        onComplete: () => s(),
                        onInterrupt: () => s(),
                      },
                    }
                  ),
                  u
                );
              },
            },
          }),
        })),
        Ow = (e) => {
          e(kn.$o).to(xw),
            e(kn.Qw, Sn.$.PageWillMountHandler).to(Cn),
            e(Mn.H9).to(ww);
        };
    },
    41697: function (e, t, n) {
      n.r(t),
        n.d(t, {
          SamePageScrollSymbol: function () {
            return s.nl;
          },
          name: function () {
            return s.UU;
          },
          page: function () {
            return q;
          },
        });
      var a = n(16537),
        r = n(12482),
        i = n(77748),
        o = n(20590),
        s = n(16993),
        u = n(62155),
        c = n.n(u);
      const d = (0, i.Og)(
        [(0, i.KT)(o.Gp, s.UU), (0, i.KT)(o.wk, s.UU), s.rl],
        ({ anchorDataIdToCompIdMap: e }, t, { getHandler: n }) => ({
          name: "samePageScroll",
          pageWillMount() {
            t.update((t) => ({ ...t, ...e }));
          },
          scrollToAnchor: n(),
          pageWillUnmount() {
            t.update((t) => c().omit(t, Object.keys(e)));
          },
        })
      );
      var l = n(75396),
        m = n(10553),
        f = n(50034),
        p = n(61613),
        h = n(45117);
      const g = (0, i.Og)(
          [(0, i.KT)(o.Gp, s.UU), l.t7, f.Ij, m.n, (0, i.lq)(h.By)],
          (
            { nicknameToCompIdMap: e, anchorDataIdToCompIdMap: t },
            n,
            a,
            r,
            i
          ) => ({
            pageDidLoad: ({ pageId: r }) => {
              const o = n.getCurrentRouteInfo();
              if (i?.isLightbox(r) || !o) return;
              const { anchorDataId: s, parsedUrl: u } = o;
              if (s) {
                const n = u.hash.endsWith(s),
                  r = p.LF.includes(s) || n ? s : t[s] || e[s],
                  i = s === p.aK;
                a.scrollToComponent(r, {
                  callbacks: void 0,
                  skipScrollAnimation: i,
                });
              }
            },
          })
        ),
        y = (0, i.Og)([(0, i.KT)(o.wk, s.UU)], (e) => ({
          getAnchorCompId: (t) => e.get()[t],
        }));
      var b = n(39218),
        v = n(85740),
        x = n(71085),
        _ = n(93455);
      const w = (0, i.Og)(
        [s.nl, x.$1, _.c7, b.Is],
        (e, t, { registerPageClickHandler: n }, a) => {
          const r = {
            handlerId: s.UU,
            handleClick: (n) => {
              const a = n.getAttribute("href");
              if (!a) return !1;
              if ("#" === a) return e.scrollToAnchor({ anchorDataId: p.aK });
              const r = (0, v.rw)(a, t.getParsedUrl().protocol),
                i =
                  (0, v.K3)((0, v.b7)(r)) === t.getFullUrlWithoutQueryParams();
              if ("_blank" === n.getAttribute("target") || !i) return !1;
              const o =
                  n.getAttribute("data-anchor-comp-id") || (0, v.M$)(r) || "",
                s = n.getAttribute("data-anchor") || "";
              return o || s || !i
                ? e.scrollToAnchor({ anchorDataId: s, anchorCompId: o })
                : (t.pushUrlState(new URL(r)),
                  e.scrollToAnchor({ anchorDataId: p.aK }));
            },
          };
          return { ...r, pageDidLoad: () => n(r, a) };
        }
      );
      var O = n(87711);
      const B = (0, i.Og)(
        [(0, i.KT)(o.Gp, s.UU), O.Ji, s.VR],
        ({ compsToUpdate: e }, t, { getPropsOverrides: n }) => ({
          name: "samePageAnchorHrefUpdater",
          pageWillMount: () => {
            if (e.length > 0) {
              const a = e.reduce((e, t) => ({ ...e, ...n(t) }), {});
              t.update(a);
            }
          },
        })
      );
      var T = n(32166);
      const P = (0, i.Og)(
          [s.ZP, T.RV, f.Ij, O.oE],
          ({ getAnchorCompId: e }, t, n, a) => ({
            getHandler: () => (r) => {
              const i = r.anchorDataId ?? "",
                o = r.anchorCompId ?? "";
              if (p.LF.includes(i)) return n.scrollToComponent(i), !0;
              const s = a.get(o),
                u = t.document.getElementById(o);
              if (s || u) return n.scrollToComponent(o), !0;
              const c = e(i) || "";
              return !!a.get(c) && (n.scrollToComponent(c), !0);
            },
          })
        ),
        k =
          /^<([-A-Za-z0-9_?:]+)((?:\s+(?:x:)?[-A-Za-z0-9_]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,
        S = /^<\/([-A-Za-z0-9_?:]+)[^>]*>/,
        M =
          /((?:x:)?[-A-Za-z0-9_]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,
        I = D(
          "area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed"
        ),
        F = D(
          "address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul"
        ),
        R = D(
          "a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"
        ),
        $ = D("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),
        C = D(
          "checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"
        ),
        E = D("script,style");
      function A(e, t) {
        return (
          (t = t
            .replace(/<!--(.*?)-->/g, "$1")
            .replace(/<!\[CDATA\[(.*?)]]>/g, "$1")),
          this.chars && this.chars(t),
          ""
        );
      }
      const Y = (e, t) => {
        let n,
          a,
          r,
          i = e;
        const o = [];
        for (
          o.last = function () {
            return this[this.length - 1];
          };
          e;

        ) {
          if (((a = !0), o.last() && E[o.last()]))
            (e = e.replace(
              new RegExp(`(.*)</${o.last()}[^>]*>`, "i"),
              A.bind(t)
            )),
              u("", o.last());
          else if (
            (0 === e.indexOf("\x3c!--")
              ? ((n = e.indexOf("--\x3e")),
                n >= 0 &&
                  (t.comment && t.comment(e.substring(4, n)),
                  (e = e.substring(n + 3)),
                  (a = !1)))
              : 0 === e.indexOf("</")
              ? ((r = e.match(S)),
                r &&
                  ((e = e.substring(r[0].length)),
                  r[0].replace(S, u),
                  (a = !1)))
              : 0 === e.indexOf("<") &&
                ((r = e.match(k)),
                r &&
                  ((e = e.substring(r[0].length)),
                  r[0].replace(k, s),
                  (a = !1))),
            a)
          ) {
            n = e.indexOf("<");
            const a = n < 0 ? e : e.substring(0, n);
            (e = n < 0 ? "" : e.substring(n)), t.chars && t.chars(a);
          }
          if (e === i) throw `Parse Error: ${e}`;
          i = e;
        }
        function s(e, n, a, r) {
          if (((n = n.toLowerCase()), F[n]))
            for (; o.last() && R[o.last()]; ) u("", o.last());
          if (
            ($[n] && o.last() === n && u("", n),
            (r = I[n] || !!r) || o.push(n),
            t.start)
          ) {
            const i = [];
            a.replace(M, function (e, t) {
              let n = null;
              for (let e = 2; e < 5; e++)
                if (null === n && arguments[e]) {
                  n = arguments[e];
                  break;
                }
              null === n && C[t] && (n = t),
                null === n && (n = ""),
                i.push({
                  name: t,
                  value: n,
                  escaped: n.replace(/(^|[^\\])"/g, '$1\\"'),
                });
            }),
              t.start && t.start(n, i, r, e);
          }
        }
        function u(e, n) {
          let a;
          if (n) for (a = o.length - 1; a >= 0 && o[a] !== n; a--);
          else a = 0;
          if (a >= 0) {
            for (let e = o.length - 1; e >= a; e--) t.end && t.end(o[e]);
            o.length = a;
          }
        }
        u();
      };
      function D(e) {
        const t = {},
          n = e.split(",");
        for (const e of n) t[e] = !0;
        return t;
      }
      const X = (0, i.Og)([O.Ji, x.$1], (e, t) => {
          const n = (e, t) => {
              const n = ["SCROLL_TO_TOP", "SCROLL_TO_BOTTOM"].includes(
                  e?.link?.anchorDataId || ""
                ),
                a = e?.link?.href?.endsWith("/CURRENT_INNER_ROUTE");
              return {
                ...e,
                ...(n || a
                  ? { link: { ...e.link, href: t } }
                  : { link: e.link }),
              };
            },
            a = (e, t) => ({
              ...n(e, t),
              ...(e.items && { items: e.items.map((e) => a(e, t)) }),
            }),
            r = (t, n) => {
              const r = e.get(t);
              return { items: (r.items || r.options).map((e) => a(e, n)) };
            },
            i = {
              QuickActionBarItem: (t, n, a) =>
                ((t, n, a) => ({
                  items: e
                    .get(a)
                    .items.map((e) =>
                      e.compId === t
                        ? { ...e, link: { ...e.link, href: n } }
                        : e
                    ),
                }))(t, n, a),
              DropDownMenu: (e, t) => r(e, t),
              ExpandableMenu: (e, t) => r(e, t),
              WRichText: (t, n) =>
                ((t, n) => {
                  const a = e.get(t).html,
                    r = new Map();
                  let i = a;
                  try {
                    if (
                      (Y(a, {
                        start(e, t, a, i) {
                          if (
                            "a" === e &&
                            Boolean(
                              c().find(t, (e) => {
                                const { name: t, value: n } = e,
                                  a =
                                    "data-anchor" === t &&
                                    (n === p.o2 || n === p.aK),
                                  r =
                                    "href" === t &&
                                    n?.endsWith("/CURRENT_INNER_ROUTE");
                                return a || r;
                              })
                            )
                          ) {
                            const e = i.replace(
                              /href="(.*?)"/,
                              `href="${c().escape(n)}"`
                            );
                            r.set(i, e);
                          }
                        },
                      }),
                      r.size > 0)
                    ) {
                      const e = [...r.keys()],
                        t = new RegExp(e.join("|"), "g");
                      i = a.replace(t, (e) => r.get(e));
                    }
                  } catch (e) {}
                  return { html: i };
                })(t, n),
              VerticalMenu: (e, t) => r(e, t),
              StylableHorizontalMenu: (e, t) => r(e, t),
              LinkBar: (t, a) =>
                ((t, a) => ({ images: e.get(t).images.map((e) => n(e, a)) }))(
                  t,
                  a
                ),
            };
          return {
            getPropsOverrides: ({ compId: n, compType: a, parentId: r }) => {
              const o = t.getFullUrlWithoutQueryParams(),
                s = "QuickActionBarItem" === a ? r : n,
                u = i[a];
              return {
                [s]: u ? u(n, o, r) : { link: { ...e.get(s).link, href: o } },
              };
            },
          };
        }),
        q = (e) => {
          e(a.$.PageDidLoadHandler).to(g),
            e(s.rl).to(P),
            e(s.ZP).to(y),
            e(s.nl, a.$.PageWillMountHandler, a.$.PageWillUnmountHandler).to(d),
            e(r.b7, a.$.PageDidLoadHandler).to(w),
            e(s.VR).to(X),
            e(a.$.PageWillMountHandler).to(B);
        };
    },
    83864: function (e, t, n) {
      n.r(t),
        n.d(t, {
          editor: function () {
            return d;
          },
          name: function () {
            return u.U;
          },
          namespace: function () {
            return u.M;
          },
          site: function () {
            return c;
          },
        });
      var a = n(32166),
        r = n(12457),
        i = n(77748);
      const o = (0, i.Og)([r.Tf], (e) => ({
          getSdkHandlers: () => ({
            seo: {
              async setTitle(t) {
                await e.setVeloTitle(t);
              },
              async setLinks(t) {
                await e.setVeloLinks(t);
              },
              async setMetaTags(t) {
                await e.setVeloMetaTags(t);
              },
              async setStructuredData(t) {
                await e.setVeloStructuredData(t);
              },
              async setSeoStatusCode(t) {
                await e.setStatusCode(t);
              },
              setStatusCode(t) {
                e.setStatusCode(t);
              },
              async renderSEOTags(t) {
                await e.setVeloSeoTags(t);
              },
              async resetSEOTags() {
                await e.resetVeloSeoTags();
              },
              async onTPAOverrideChanged(t) {
                return e.onTPAOverridesChanged(t);
              },
            },
          }),
        })),
        s = (0, i.Og)([r.Tf], (e) => {
          const t = e.getSiteLevelSeoData();
          return {
            platformEnvData() {
              return { seo: { ...t } };
            },
          };
        });
      var u = n(97595);
      const c = (e) => {
          e(a.ew).to(s), e(a.H9).to(o);
        },
        d = c;
    },
    96198: function (e, t, n) {
      n.r(t),
        n.d(t, {
          name: function () {
            return s.U;
          },
          namespace: function () {
            return s.M;
          },
          site: function () {
            return l;
          },
        });
      var a = n(32166),
        r = n(77748),
        i = n(10553),
        o = n(20590),
        s = n(45505);
      const u = (0, r.Og)(
        [i.n, (0, r.KT)(o.YG, s.U), a.TQ, a.RV],
        (e, t, n, a) => {
          const {
            mode: r,
            site: { isResponsive: i, siteId: o },
          } = n;
          return {
            platformEnvData() {
              const { pageIdToTitle: n, viewMode: s } = t || {};
              return {
                site: {
                  experiments: e,
                  isResponsive: i,
                  siteId: o,
                  pageIdToTitle: n,
                  mode: r,
                  viewMode: s,
                  windowName: a?.name,
                },
              };
            },
          };
        }
      );
      var c = n(66084);
      const d = (0, r.Og)([(0, r.lq)(o.SV), c.re], (e, t) => ({
          getSdkHandlers: () => ({
            getSitemapFetchParams: (t) =>
              e ? e.getSitemapFetchParams(t) : null,
            prefetchPagesResources: (e) => {
              e.map((e) => t(e, e));
            },
          }),
        })),
        l = (e) => {
          e(a.ew).to(u), e(a.H9).to(d);
        };
    },
    39946: function (e, t, n) {
      n.r(t),
        n.d(t, {
          ScrollAnimationResult: function () {
            return a;
          },
          WindowScrollApiSymbol: function () {
            return g.Ij;
          },
          editorPage: function () {
            return S;
          },
          name: function () {
            return g.UU;
          },
          page: function () {
            return k;
          },
        });
      var a,
        r = n(77748),
        i = n(82658),
        o = n(83407);
      !(function (e) {
        (e[(e.Completed = 0)] = "Completed"), (e[(e.Aborted = 1)] = "Aborted");
      })(a || (a = {}));
      var s = n(62155);
      function u(e) {
        const t = (0, s.unzip)(e),
          n = t[0],
          a = t[1];
        return function (e) {
          let t = 0;
          for (; t < n.length - 2 && e > n[t + 1]; ) t++;
          return (
            (r = e),
            (i = n[t]),
            (o = n[t + 1]),
            (s = a[t]),
            ((a[t + 1] - s) / (o - i)) * (r - i) + s
          );
          var r, i, o, s;
        };
      }
      let c = null;
      var d = n(32166),
        l = n(10553),
        m = n(87711),
        f = n(54157),
        p = n(20590),
        h = n(45117),
        g = n(50034),
        y = n(73896),
        b = n(49563);
      const v = (e) =>
          window.getComputedStyle(e).getPropertyValue("position").toLowerCase(),
        x = (e) => {
          let t = e;
          for (; t && t !== window.document.body; ) {
            if ("fixed" === v(t)) return !0;
            t = t.offsetParent;
          }
          return !1;
        },
        _ = (e, t, n, a, r) => {
          const i = e.document.getElementById("WIX_ADS"),
            o = i ? i.offsetHeight : 0,
            s =
              e.document.getElementById("SITE_HEADER-placeholder") ||
              (r ? e.document.getElementById(r) : null),
            u = s ? s.offsetHeight : 0,
            c = a && e.document.getElementById(a);
          let d = c
            ? c.getBoundingClientRect().top
            : e.document.body.getBoundingClientRect().top;
          const l = t.getBoundingClientRect().top;
          if (n) {
            const t = e.document.getElementById("SITE_CONTAINER");
            d = t
              ? ((m = e.getComputedStyle(t).marginTop),
                Number(m.replace("px", "")))
              : 0;
          }
          var m;
          return l - d - o - (a ? 0 : u);
        },
        w = (e) =>
          e?.getCurrentLightboxId()
            ? window.document.getElementById("POPUPS_ROOT")
            : window,
        O = (0, r.Og)(
          [
            d.RV,
            d.CB,
            g.s5,
            y.j,
            l.n,
            m.oE,
            f.n,
            (0, r.KT)(p.Gp, g.UU),
            (0, r.lq)(h.By),
            (0, r.lq)(o.Qw),
          ],
          (
            e,
            t,
            { readyForScrollPromise: r },
            o,
            s,
            d,
            l,
            { headerComponentId: m, headerContainerComponentId: f },
            p,
            h
          ) => {
            let g = !1,
              y = () => {};
            if ((0, i.fU)(e))
              return {
                scrollToComponent: () => Promise.resolve(),
                animatedScrollTo: () => Promise.resolve(a.Aborted),
              };
            const O = async (n, i = {}) => {
                if (!h) return a.Aborted;
                g && y(), (g = !0);
                const o = await h.getInstance();
                await r;
                const s = "mobile" === t,
                  d = s ? "Quint.easeOut" : "Sine.easeInOut",
                  l = (function (e, t, n) {
                    c = c || {
                      desktop: u([
                        [0, 0.6],
                        [360, 0.8],
                        [720, 1],
                        [1440, 1.2],
                        [7200, 2.8],
                        [9600, 3],
                        [1e4, 3],
                      ]),
                      mobile: u([
                        [0, 0.5],
                        [360, 0.7],
                        [720, 0.9],
                        [1440, 1.1],
                        [7200, 2.7],
                        [9600, 2.9],
                        [1e4, 2.9],
                      ]),
                    };
                    const a = Math.abs(t - e);
                    return c[n ? "mobile" : "desktop"](a);
                  })(e.pageYOffset, n, s),
                  m = w(p);
                return new Promise((e) => {
                  const t = {
                      ...i,
                      onComplete: (t) => {
                        i.onComplete?.(t), k(s), e(a.Completed), (g = !1);
                      },
                    },
                    r = o.runAnimationOnElements("BaseScroll", [m], l, 0, {
                      y: n,
                      ease: d,
                      callbacks: t,
                    });
                  function s() {
                    o.kill(r), k(s), e(a.Aborted), (g = !1);
                  }
                  (y = s), P(s);
                });
              },
              B = async (t, i = {}) =>
                !0 === s["specs.thunderbolt.useNativeScrollTo"]
                  ? await (async (t, i = {}) => {
                      if (!h) return a.Aborted;
                      g && y(), await r, (g = !0);
                      const o = w(p);
                      return (
                        e || n.e(1300).then(n.bind(n, 81300)),
                        l
                          ? (o.scrollTo({ top: t }),
                            i.onComplete?.(void 0),
                            a.Completed)
                          : new Promise((e) => {
                              function n() {
                                o.removeEventListener("scrollend", n),
                                  k(r),
                                  i.onComplete?.(void 0),
                                  e(a.Completed),
                                  (g = !1);
                              }
                              function r() {
                                o.removeEventListener("scrollend", n),
                                  k(r),
                                  o.scrollTo({ behavior: "smooth" }),
                                  e(a.Aborted),
                                  (g = !1);
                              }
                              P(r),
                                o.addEventListener("scrollend", n),
                                o.scrollTo({ top: t, behavior: "smooth" });
                            })
                      );
                    })(t, i)
                  : await O(t, i),
              T = async (
                t,
                { callbacks: n = {}, skipScrollAnimation: i = !1 } = {}
              ) => {
                await r;
                const u = e.document.getElementById(t),
                  c = d.get(t),
                  l = p?.getCurrentLightboxId(),
                  h = c?.pageId === l;
                if (!u || (x(u) && !l)) return;
                const g = f ? e.document.getElementById(f) : void 0,
                  y = !!g && "sticky" === e.getComputedStyle(g).position,
                  w = !!s["specs.thunderbolt.windowScrollStickyHeader"],
                  O = await new Promise((t) => {
                    e.requestAnimationFrame(() => {
                      t(
                        _(
                          e,
                          u,
                          !s[
                            "specs.thunderbolt.blockSiteScrollWithOverflowHidden"
                          ] && o.isScrollingBlocked(),
                          h ? l : void 0,
                          y && w ? m : void 0
                        )
                      );
                    });
                  });
                if (i) e.scrollTo({ top: 0 });
                else {
                  if ((await B(O, n)) !== a.Aborted) {
                    const a = _(
                      e,
                      u,
                      !s[
                        "specs.thunderbolt.blockSiteScrollWithOverflowHidden"
                      ] && o.isScrollingBlocked(),
                      l,
                      y && w ? m : void 0
                    );
                    !("sticky" === v(u)) &&
                      O !== a &&
                      T(t, { callbacks: n, skipScrollAnimation: i });
                  }
                }
                (0, b.S)(u) || u.setAttribute("tabIndex", "-1"),
                  u.focus({ preventScroll: !0 });
              };
            function P(t) {
              e.addEventListener("touchmove", t, { passive: !0 }),
                e.addEventListener("wheel", t, { passive: !0 });
            }
            function k(t) {
              e.removeEventListener("touchmove", t),
                e.removeEventListener("wheel", t);
            }
            return { animatedScrollTo: B, scrollToComponent: T };
          }
        );
      var B = n(16537);
      const T = (0, r.Og)([], () => {
          const { promise: e, resolve: t } = (() => {
            let e;
            return {
              promise: new Promise((t) => {
                e = t;
              }),
              resolve: () => e(),
            };
          })();
          return { readyForScrollPromise: e, setReadyForScroll: t };
        }),
        P = (0, r.Og)([g.s5], ({ setReadyForScroll: e }) => ({
          pageDidMount: () => {
            e();
          },
        })),
        k = (e) => {
          e(g.Ij).to(O), e(g.s5).to(T), e(B.$.PageDidMountHandler).to(P);
        },
        S = k;
    },
    48252: function (e, t, n) {
      n.r(t),
        n.d(t, {
          WindowWixCodeSdkWarmupDataEnricherSymbol: function () {
            return o.Ou;
          },
          editor: function () {
            return T;
          },
          editorPage: function () {
            return k;
          },
          name: function () {
            return o.UU;
          },
          namespace: function () {
            return o.MF;
          },
          page: function () {
            return P;
          },
          site: function () {
            return B;
          },
        });
      var a = n(32166),
        r = n(78691),
        i = n(77748),
        o = n(11228);
      const s = (0, i.Og)([r._w, o.Ou], (e, t) => ({
        getSdkHandlers: () => ({
          onAppsWarmupDataReady(t) {
            e.getWarmupData("appsWarmupData")
              .then((e) => t(e))
              .catch((e) => {
                throw new Error(`Failed to get warmup data: ${e}`);
              });
          },
          setAppWarmupData: t.setAppWarmupData,
        }),
      }));
      var u = n(62155),
        c = n.n(u),
        d = n(82658),
        l = n(20590),
        m = n(87711),
        f = n(98567),
        p = n(10553),
        h = n(60950),
        g = n(45117),
        y = n(45156),
        b = n(83407),
        v = n(50034),
        x = n(93425);
      function _(e) {
        throw new Error(`language code "${e}" is invalid`);
      }
      const w = (0, i.Og)(
          [
            (0, i.KT)(l.Gp, o.UU),
            (0, i.lq)(b.Qw),
            a.RV,
            a.CB,
            m.eZ,
            f.n,
            p.n,
            h.P,
            (0, i.lq)(v.Ij),
            (0, i.lq)(h.tY),
            (0, i.lq)(h.ir),
            (0, i.lq)(g.KK),
            (0, i.lq)(y.i),
            (0, i.lq)(x.gB),
          ],
          (
            { templateIdToCompIdMap: e },
            t,
            a,
            r,
            i,
            o,
            s,
            u,
            l,
            m,
            f,
            p,
            g,
            y
          ) => {
            const b = (t) => e[t] || t;
            return {
              getSdkHandlers: () => ({
                getBoundingRectHandler: () =>
                  a
                    ? Promise.resolve({
                        window: { height: a.innerHeight, width: a.innerWidth },
                        document: {
                          height: document.documentElement.scrollHeight,
                          width: document.documentElement.clientWidth,
                        },
                        scroll: { x: a.scrollX, y: a.scrollY },
                      })
                    : null,
                setCurrentLanguage: y?.setCurrentLanguage || _,
                async scrollToComponent(e, t) {
                  await l?.scrollToComponent(e), t();
                },
                async scrollToHandler(e, t, n) {
                  if (!(0, d.fU)(a))
                    return n || a.scrollTo(e, t), l?.animatedScrollTo(t);
                },
                async scrollByHandler(e, t) {
                  if (!(0, d.fU)(a))
                    return (
                      a.scrollBy(e, t),
                      new Promise((e) => {
                        a.requestAnimationFrame(() => {
                          e();
                        });
                      })
                    );
                },
                async copyToClipboard(e) {
                  (await n.e(1619).then(n.t.bind(n, 71619, 23))).default(e);
                },
                getCurrentGeolocation() {
                  return (0, d.fU)(a)
                    ? Promise.resolve()
                    : (0, d.w9)(a)
                    ? new Promise((e, t) => {
                        navigator.geolocation.getCurrentPosition(
                          ({ timestamp: t, coords: n }) => {
                            e({ timestamp: t, coords: c().toPlainObject(n) });
                          },
                          ({ message: e, code: n }) => {
                            t({ message: e, code: n });
                          }
                        );
                      })
                    : Promise.reject(new Error("Geolocation not available"));
                },
                async openModal(e, t, n) {
                  if (!s["specs.thunderbolt.dynamicLoadTpaFeature"] && !m)
                    throw new Error("TPA Modal feature is not available");
                  const a = n && b(n);
                  if (m) return m.openModal(e, t, a);
                  const r = a
                    ? u.getMessageSourceContainerId({ compId: a })
                    : void 0;
                  return (await o.loadFeature("tpa", h.tY, r)).openModal(
                    e,
                    t,
                    a
                  );
                },
                openLightbox(e, t, n) {
                  return p
                    ? p.open(e, n)
                    : Promise.reject(
                        `There is no lightbox with the title "${t}".`
                      );
                },
                closeLightbox() {
                  p && p.close();
                },
                async openTpaPopup(e, t, n) {
                  if (!f && !s["specs.thunderbolt.dynamicLoadTpaFeature"])
                    throw new Error("TPA Popup feature is not available");
                  const a = b(n);
                  if (f) return f.openPopup(e, t, a);
                  const r = u.getMessageSourceContainerId({ compId: a });
                  return (await o.loadFeature("tpa", h.ir, r)).openPopup(
                    e,
                    t,
                    a
                  );
                },
                trackEvent(e, t = {}, n = {}) {
                  const a = { eventName: e, params: t, options: n };
                  g && g.trackEvent(a);
                },
                postMessageHandler(e, t = "parent", n = "*", r) {
                  a && "parent" === t && a.parent.postMessage(e, n, r);
                },
              }),
            };
          }
        ),
        O = (0, i.Og)([], () => {
          const e = {};
          return {
            setAppWarmupData({ appDefinitionId: t, key: n, data: a }) {
              c().set(e, [t, n], a);
            },
            enrichWarmupData: async () => ({ appsWarmupData: e }),
          };
        }),
        B = (e) => {
          e(o.Ou, r.XE).to(O), e(a.H9).to(s);
        },
        T = (e) => {
          e(o.Ou).to(O), e(a.H9).to(s);
        },
        P = (e) => {
          e(a.H9).to(w);
        },
        k = P;
    },
  },
]);
//# sourceMappingURL=https://static.parastorage.com/services/wix-thunderbolt/dist/group_6.5c46a588.chunk.min.js.map
